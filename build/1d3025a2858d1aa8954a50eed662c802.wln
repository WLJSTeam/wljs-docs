<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$1614], 
   "Objects" -> <|"d6a11857-fc87-4eda-95aa-ee11c6253077" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"relative shrink-0 gap-y-3 \
pb-2 flex flex-col sm-controls\"><div class=\"flex gap-x-5 \
sm-controls\"><label for=\"default-range\" class=\"block mb-2 text-sm \
font-medium text-gray-900\"></label><input min=\"0.1\" max=\"1\" step=\"0.1\" \
value=\"0.5\" id=\"n-#instanceId\" type=\"number\" class=\"ml-auto h-2 grow \
max-w-60 block p-2.5 text-xs text-gray-900 bg-gray-50 rounded-md \
border-2-gray-50 border border-gray-300 focus:ring-blue-500 \
focus:border-blue-500\"></input></div><input min=\"0.1\" max=\"1\" \
step=\"0.1\" value=\"0.5\" id=\"r-#instanceId\" type=\"range\" \
class=\"sm-controls w-full h-1 bg-gray-200 rounded-lg appearance-none \
cursor-pointer \"></input></div>\n<script type=\"module\"> const num = \
document.getElementById('n-#instanceId');\n        const ran = \
document.getElementById('r-#instanceId');\n\n        let harpticQ = true;\n\n \
       function isNumber(value) { return typeof value === 'number'}\n\n       \
 num.addEventListener('input', (event)=> {\n            if (isNaN(num.value)) \
return;\n            ran.value = num.value;\n            \
server.kernel.emitt('6337dd03-1db7-443d-8932-055f87583436', num.value, \
'Default');      \n        });\n\n        ran.addEventListener('input', \
(event)=> {\n            if (isNaN(ran.value)) return;\n            num.value \
= ran.value;\n            \
server.kernel.emitt('6337dd03-1db7-443d-8932-055f87583436', ran.value, \
'Default');   \n            if (harpticQ) {\n                if \
(!window.electronAPI) {harpticQ = false; return}\n                if \
(!window.electronAPI.harptic) {harpticQ = false; return}\n                \
window.electronAPI.harptic();\n            }               \n        \
});</script>", Prolog -> HTMLView`TemplateProcessor[Association[
             "instanceId" -> CreateUUID[]]]]]|>, 
     "c705cb7e-a4fe-4660-b53b-f72431604627" -> 
      <|"Public" -> Hold[Graphics[Line[Offload[lines$190885]], 
          ImageSize -> 350, Axes -> {True, False}]]|>|>, 
   "Path" -> "/Users/kirill/Library/Application \
Support/wljs-notebook/Demos/02 - Mixing languages/Making widgets using \
WLX.wln", "ReadOnly" -> True, "Symbols" -> 
    <|"lines$190885" -> {{-5, -0.05440211108893698}, 
       {-4.9, -0.037395829515502896}, {-4.8, -0.01815903971072705}, 
       {-4.7, 0.002635683558867847}, {-4.6, 0.024227164576113874}, 
       {-4.5, 0.04579094280463962}, {-4.4, 0.06646786282860928}, 
       {-4.3, 0.08539501138071087}, {-4.2, 0.1017379652486048}, 
       {-4.1, 0.11472323861948454}, {-4, 0.12366978082792272}, 
       {-3.9, 0.12801837761212884}, {-3.8, 0.12735785158309032}, 
       {-3.7, 0.12144703997454417}, {-3.5999999999999996, 
        0.11023164775682677}, {-3.5, 0.09385522838839844}, 
       {-3.4, 0.07266372810861885}, {-3.3, 0.047203236895966345}, 
       {-3.2, 0.01821081325788963}, {-3.0999999999999996, 
        -0.013401516583467306}, {-3, -0.04656924969982098}, 
       {-2.9, -0.08010382403685472}, {-2.8, -0.11272618533434316}, 
       {-2.6999999999999997, -0.14310453473259033}, {-2.5999999999999996, 
        -0.16989512610002955}, {-2.5, -0.1917848549326277}, 
       {-2.4, -0.20753429350746683}, {-2.3, -0.21601978339857925}, 
       {-2.1999999999999997, -0.2162731986112536}, {-2.0999999999999996, 
        -0.20751804105085425}, {-2, -0.18920062382698208}, 
       {-1.9, -0.16101523445861024}, {-1.7999999999999998, 
        -0.12292234535968115}, {-1.6999999999999997, -0.07515914765495024}, 
       {-1.5999999999999996, -0.018241919821118502}, 
       {-1.5, 0.0470400026866224}, {-1.4, 0.1196386250556804}, 
       {-1.2999999999999998, 0.19826975839287098}, {-1.1999999999999997, 
        0.2814429918963131}, {-1.0999999999999996, 0.3674983653725413}, 
       {-1, 0.45464871341284085}, {-0.8999999999999995, 0.5410264615989978}, 
       {-0.7999999999999998, 0.6247335019009409}, {-0.7000000000000002, 
        0.7038926642774714}, {-0.5999999999999996, 0.7766992383060222}, 
       {-0.5, 0.8414709848078965}, {-0.39999999999999947, 
        0.8966951136244037}, {-0.2999999999999998, 0.9410707889917256}, 
       {-0.1999999999999993, 0.9735458557716264}, {-0.09999999999999964, 
        0.9933466539753062}, {0, 1}, {0.10000000000000053, 
        0.9933466539753061}, {0.20000000000000018, 0.9735458557716261}, 
       {0.3000000000000007, 0.9410707889917252}, {0.40000000000000036, 
        0.8966951136244032}, {0.5, 0.8414709848078965}, 
       {0.6000000000000005, 0.7766992383060216}, {0.7000000000000002, 
        0.7038926642774714}, {0.8000000000000007, 0.6247335019009401}, 
       {0.9000000000000004, 0.541026461598997}, {1, 0.45464871341284085}, 
       {1.1000000000000005, 0.36749836537254055}, {1.2000000000000002, 
        0.2814429918963127}, {1.3000000000000007, 0.19826975839287028}, 
       {1.4000000000000004, 0.11963862505568007}, {1.5, 0.0470400026866224}, 
       {1.6000000000000005, -0.018241919821119047}, {1.7000000000000002, 
        -0.07515914765495048}, {1.8000000000000007, -0.12292234535968154}, 
       {1.9000000000000004, -0.16101523445861038}, {2, -0.18920062382698208}, 
       {2.1000000000000005, -0.2075180410508544}, 
       {2.2, -0.21627319861125366}, {2.3000000000000007, 
        -0.2160197833985792}, {2.4000000000000004, -0.20753429350746674}, 
       {2.5, -0.1917848549326277}, {2.6000000000000005, 
        -0.16989512610002935}, {2.7, -0.14310453473259022}, 
       {2.8000000000000007, -0.11272618533434287}, {2.9000000000000004, 
        -0.08010382403685458}, {3, -0.04656924969982098}, 
       {3.0999999999999996, -0.013401516583467306}, {3.200000000000001, 
        0.018210813257889903}, {3.3000000000000007, 0.04720323689596658}, 
       {3.4000000000000004, 0.07266372810861896}, {3.5, 0.09385522838839844}, 
       {3.5999999999999996, 0.11023164775682677}, {3.700000000000001, 
        0.12144703997454424}, {3.8000000000000007, 0.12735785158309035}, 
       {3.9000000000000004, 0.12801837761212884}, {4, 0.12366978082792272}, 
       {4.1, 0.11472323861948454}, {4.200000000000001, 0.10173796524860468}, 
       {4.300000000000001, 0.0853950113807107}, {4.4, 0.06646786282860928}, 
       {4.5, 0.04579094280463962}, {4.600000000000001, 0.024227164576113493}, 
       {4.700000000000001, 0.0026356835588676577}, {4.800000000000001, 
        -0.018159039710727225}, {4.9, -0.037395829515502896}, 
       {5, -0.05440211108893698}}|>, 
   "TOC" -> {Notebook`Editor`TOC`Private`heading[1, 
      "Making widgets using WLX", CellObj[JerryI`Notebook`CellObj`$1613]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Making widgets using WLX\nHere is a small \
example of interactive plot", "Display" -> "codemirror", 
    "Hash" -> "3cc10634-99cc-4dc1-9a8e-bb2d6ee0a384", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "0a2bd9f1-71e3-4750-bf1a-41e4932129be"|>, 
   <|"Data" -> 
     "# Making widgets using WLX\nHere is a small example of interactive \
plot", "Display" -> "markdown", "Hash" -> 
     "4f612770-aeb7-4933-9e97-31a48f1a1326", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "0a2bd9f1-71e3-4750-bf1a-41e4932129be"|>, 
   <|"Data" -> ".wlx\n\nModule[{Slider = InputRange[0.1,1,0.1,0.5], Figure, \
lines},\n  EventHandler[Slider, Function[s, lines = {#, Sinc[#/s]}& /@ \
Range[-5,5,0.1]]];\n  Slider // EventFire;\n\n  Figure = Graphics[Line[lines \
// Offload], ImageSize->350, Axes->{True, False}];\n\n  <div style=\"display: \
flex\">\n    <div><Slider/></div>\n    <div><Figure/></div>\n  </div>\n]", 
    "Display" -> "codemirror", "Hash" -> 
     "92485bd7-b36b-453b-9f9f-88f65b6f9785", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "0a2bd9f1-71e3-4750-bf1a-41e4932129be"|>, 
   <|"Data" -> "<div style=\"display: flex\"><div \
>FrontEndExecutable[d6a11857-fc87-4eda-95aa-ee11c6253077]</div><div \
>FrontEndExecutable[c705cb7e-a4fe-4660-b53b-f72431604627]</div></div>", 
    "Display" -> "wlx", "Hash" -> "3d15548a-9c5b-4d86-89d6-a471d9ec3592", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "0a2bd9f1-71e3-4750-bf1a-41e4932129be"|>}, 
 "serializer" -> "jsfn4"|>
