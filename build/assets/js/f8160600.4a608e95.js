"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[76390],{23920:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(74848),a=r(28453);const s={authors:"jerryi",enableComments:!0,tags:["graphics","opencl","GPU"]},o="Basics of Compute Shaders in WL 1",i={permalink:"/blog/2024/09/1/basics-csh-1",source:"@site/blog/2024-09-1-basics-csh-1/index.mdx",title:"Basics of Compute Shaders in WL 1",description:"A GPU is also a great tool for general-purpose computations. There are a few ways to couple it with Wolfram Language:",date:"2024-09-01T00:00:00.000Z",tags:[{label:"graphics",permalink:"/blog/tags/graphics"},{label:"opencl",permalink:"/blog/tags/opencl"},{label:"GPU",permalink:"/blog/tags/gpu"}],readingTime:3.81,hasTruncateMarker:!0,authors:[{name:"Kirill Vasin",title:"Maintainer",url:"https://github.com/JerryI",imageURL:"https://avatars.githubusercontent.com/u/4111822?s=48&v=4",key:"jerryi"}],frontMatter:{authors:"jerryi",enableComments:!0,tags:["graphics","opencl","GPU"]},unlisted:!1,prevItem:{title:"Trippy raster animation",permalink:"/blog/2024/09/07/raster"},nextItem:{title:"Covariant Matrices and Ellipses",permalink:"/blog/2024/08/22/ellipce"}},l={authorsImageUrls:[void 0]},c=[];function p(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"A GPU is also a great tool for general-purpose computations. There are a few ways to couple it with Wolfram Language:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"CUDALink"}),"\n",(0,n.jsx)(t.li,{children:"OpenCLLink"}),"\n",(0,n.jsx)(t.li,{children:"LibraryLink"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The first option requires hardware from Nvidia, which is a massive drawback considering there are many other processors on the market capable of crunching numbers. The last option allows integrating any dynamic library written in C/Rust (probably there are other bindings as well) into our Kernel, but the amount of effort required to write a general-purpose GPU library and deal with cross-platform issues is quite cumbersome and defeats the whole purpose of using WL here."}),"\n",(0,n.jsxs)(t.p,{children:["We will go with the most cross-platform and hardware-agnostic solution: ",(0,n.jsx)(t.code,{children:"OpenCL"})," \ud83d\ude85"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(96540);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);