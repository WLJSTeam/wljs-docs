"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[7688],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(96540);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},75463:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=t(74848),o=t(28453);const s={env:["Wolfram Kernel"],package:"wljs-editor"},a=void 0,c={id:"frontend/Reference/Frontend IO/FrontInstanceGroup",title:"FrontInstanceGroup",description:"constructs a wrapper, which allows dispose a group of virtual WLJS Functions (aka instances of WL symbols) on the frontend.",source:"@site/docs/frontend/Reference/Frontend IO/FrontInstanceGroup.md",sourceDirName:"frontend/Reference/Frontend IO",slug:"/frontend/Reference/Frontend IO/FrontInstanceGroup",permalink:"/frontend/Reference/Frontend IO/FrontInstanceGroup",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1739462254e3,frontMatter:{env:["Wolfram Kernel"],package:"wljs-editor"},sidebar:"tutorialSidebar",previous:{title:"FrontFetchAsync",permalink:"/frontend/Reference/Frontend IO/FrontFetchAsync"},next:{title:"FrontInstanceReference",permalink:"/frontend/Reference/Frontend IO/FrontInstanceReference"}},i={},d=[{value:"Methods",id:"methods",level:2},{value:"<code>FrontSubmit</code>",id:"frontsubmit",level:3},{value:"<code>Delete</code>",id:"delete",level:3},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"FrontInstanceGroup[] _FrontInstanceGroup\n"})}),"\n",(0,r.jsxs)(n.p,{children:["constructs a wrapper, which allows dispose a group of virtual ",(0,r.jsx)(n.a,{href:"/frontend/Advanced/Frontend%20interpretation/WLJS%20Functions",children:"WLJS Functions"})," (aka instances of WL symbols) on the frontend."]}),"\n",(0,r.jsxs)(n.p,{children:["Normally one can append objects on existing plots using ",(0,r.jsx)(n.a,{href:"/frontend/Reference/Frontend%20IO/FrontSubmit",children:"FrontSubmit"}),", this wrapper allows to undo those action by disposing the created instances (even if they are nested). It does also support batch operations."]}),"\n",(0,r.jsx)(n.p,{children:"To add expressions into created group, use the following pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"g = FrontInstanceGroup[];\ng[{Red, Disk[]}]\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This expression is immutable"})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"frontsubmit",children:(0,r.jsx)(n.code,{children:"FrontSubmit"})}),"\n",(0,r.jsx)(n.p,{children:"Evaluates the group on the frontend"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"group = FrontInstanceGroup[];\nFrontSubmit[group[expr_], scene]\n"})}),"\n",(0,r.jsx)(n.p,{children:"one can submit multiple groups as well"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"...\nFrontSubmit[{group1[expr_], group2, ...}, scene]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"delete",children:(0,r.jsx)(n.code,{children:"Delete"})}),"\n",(0,r.jsx)(n.p,{children:"Disposes created group (s)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"Delete[_FrontInstanceGroup | __FrontInstanceGroup]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The common use case is to be able to add and remove groups of expressions from the some frontend instance. For example to add and then remove primitives from a plot"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"scene = FrontInstanceReference[];\nPlot[x, {x,0,1}, Epilog->{scene}]\n"})}),"\n",(0,r.jsx)(n.p,{children:"now add an object"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"group = FrontInstanceGroup[];\nFrontSubmit[{Red, Disk[]} // group, scene];\n"})}),"\n",(0,r.jsx)(n.p,{children:"and delete"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mathematica",children:"Delete[group]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);