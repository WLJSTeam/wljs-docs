"use strict";(self.webpackChunkwljs_docs=self.webpackChunkwljs_docs||[]).push([[9578],{3859:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"curvesfit-example","metadata":{"permalink":"/wljs-docs/blog/curvesfit-example","source":"@site/blog/2023-07-14-curves/index.md","title":"Interactive curves fitting example","description":"Here we will try to recreate a simple example of the interactive curves fitting based on Fit function provided by Wolfram Mathematica.","date":"2023-07-14T00:00:00.000Z","formattedDate":"July 14, 2023","tags":[{"label":"frontend","permalink":"/wljs-docs/blog/tags/frontend"},{"label":"dynamics","permalink":"/wljs-docs/blog/tags/dynamics"},{"label":"fitting","permalink":"/wljs-docs/blog/tags/fitting"}],"readingTime":1.3,"hasTruncateMarker":true,"authors":[{"name":"Kirill Vasin","title":"Maintainer","url":"https://github.com/JerryI","imageURL":"img/jerryi.jpg","key":"jerryi"}],"frontMatter":{"slug":"curvesfit-example","title":"Interactive curves fitting example","authors":"jerryi","tags":["frontend","dynamics","fitting"],"enableComments":true},"nextItem":{"title":"Interactive graphics example","permalink":"/wljs-docs/blog/balls-example"}},"content":"import Component from \'@site/src/components/wljs-notebook-react/includes\';\\nimport Notebook from \'@site/src/components/wljs-notebook-react\';\\n\\n<Component></Component>\\n\\n\\n![](ezgif.com-video-to-gif-18.gif)\\n\\n\\nHere we will try to recreate a simple example of the interactive curves fitting based on `Fit` function provided by Wolfram Mathematica.\\n\x3c!--truncate--\x3e\\n\\n## WLJS Frontend version\\n\\nFor the demonstration one can input the data points by clicking on an empty canvas\\n\\n```mathematica\\nRGBColor[1,1,1],\\n  EventHandler[Rectangle[{-10,10}, {10,-10}], {\\"click\\"->Function[xy, \\n    points = Append[points, xy]; \\n    fit = lineFit[points]\\n]}],\\n...\\n```\\n\\nAn event listener is attached to the rectangle at the background. Each time user clicks on it, it will append a new point to the array and recalculate fitter curve using defined `lineFit` function.\\n\\nTo draw our points and fitted curve, we need one line of a code\\n\\n```mathematica\\nPointSize[0.1],\\n  Red, Point[points//Hold], Cyan, Line[fit//Hold]\\n```\\n\\nThen, let us define the fitting function\\n\\n```mathematica\\nfit = {};\\npoints = {};\\norder = 1;\\n\\nlineFit[points_] := With[{o = Table[CM6Superscript[x, i], {i, 0, order}]},\\n  With[{f = Fit[points, o, x]}, \\n    Table[{x, f}, {x, -1,1, 0.025}]\\n  ]\\n]\\n```\\n\\nBasically,  it is done. However one can make it more interesting if we consider a control slider for changing the order of a curve as well as a clear button\\n\\n*in a new cell*\\n```mathematica\\nFunction[data, points = {}; fit = {};] // InputButton[\\"Clear\\"]\\nFunction[data, order = data; fit = lineFit[points]] // InputRange[1, 5, 1]\\n```\\n\\n:::info\\nA shortcut to assign a `handler` function to an event-object \\n```mathematica\\nhandler // EventObject[...]\\n```\\nis an equivalent of\\n```mathematica\\nEventHandler[EventObject[...], handler]\\n```\\n:::\\n\\nHere the full code\\n\\n<Notebook code=\\"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\\" name=\\"hydraulics-3ae3e\\">hydraulics-3ae3e</Notebook>\\n\\nLinks\\n- [Download Notebook](CurvesFit.wl)\\n\\nThanks for reading! See you next time"},{"id":"balls-example","metadata":{"permalink":"/wljs-docs/blog/balls-example","source":"@site/blog/2023-07-13-balls/index.md","title":"Interactive graphics example","description":"Here we will try to recreate a simple example of the interactive plot, where bouncing dots are created using mouse clicks on an empty canvas.","date":"2023-07-13T00:00:00.000Z","formattedDate":"July 13, 2023","tags":[{"label":"frontend","permalink":"/wljs-docs/blog/tags/frontend"},{"label":"dynamics","permalink":"/wljs-docs/blog/tags/dynamics"}],"readingTime":2.255,"hasTruncateMarker":true,"authors":[{"name":"Kirill Vasin","title":"Maintainer","url":"https://github.com/JerryI","imageURL":"img/jerryi.jpg","key":"jerryi"}],"frontMatter":{"slug":"balls-example","title":"Interactive graphics example","authors":"jerryi","tags":["frontend","dynamics"],"enableComments":true},"prevItem":{"title":"Interactive curves fitting example","permalink":"/wljs-docs/blog/curvesfit-example"},"nextItem":{"title":"Introducing Events shortcuts","permalink":"/wljs-docs/blog/event-shortcuts"}},"content":"import Component from \'@site/src/components/wljs-notebook-react/includes\';\\nimport Notebook from \'@site/src/components/wljs-notebook-react\';\\n\\n<Component></Component>\\n\\n\\n![](ezgif.com-video-to-gif-16.gif)\\n\\n\\nHere we will try to recreate a simple example of the interactive plot, where bouncing dots are created using mouse clicks on an empty canvas.\\n\x3c!--truncate--\x3e\\n\\n## Mathematica\'s version\\n\\nOriginally it was designed for Wolfram Mathematica by Wolfram Research group. Let us have a look at the original core first\\n\\n```mathematica\\nFramed@DynamicModule[{points = {}, vel = {}}, \\n  EventHandler[\\n  \\n   Graphics[{PointSize[0.1], \\n\\t   Point[Dynamic[{vel, points} = animate[vel, points]; points]]}\\n\\t, PlotRange -> {{-1, 1}, {-1, 1}}], \\n   \\n   \\"MouseDown\\" :> ({points, vel} = \\n      addPoint[MousePosition[\\"Graphics\\"], points, vel])\\n  ]\\n]\\n```\\n\\nIt uses `DynamicModule` to localize dynamic variables and a set of two functions `animate` to recalculate new positions and `addPoint`.\\n\\n[Download Notebook](Balls.nb)\\n\\n## WLJS Frontend version\\n\\nTo recreate this using WLJS Frontend we need to change the way how dynamics is processed. Firstly, we need an event-listener object to get the place where a user clicked\\n\\n```mathematica\\nGraphics[{\\n\\tRGBColor[1,1,1],\\n\\tEventHandler[Rectangle[{-10,10},{10,-10}], {\\"click\\"->addPoint}],\\n\\tRGBColor[0,0,0], PointSize[0.1],\\n\\tPoint[points // Hold]\\n}]\\n```\\n\\nHere it creates a white rectangle in the background to add event-listener for clicks. And a global variable `points` is bounded to `Point` expression using `Hold`.\\n\\n:::danger\\n`EventHandler` expression does not fully correspond to the one used in Wolfram Mathematica\\n:::\\n\\n:::info\\nDynamic binding is possible only using global variables.\\n:::\\n\\nThen, we need an function, that adds dots to an array\\n\\n```mathematica\\npoints = {{0,0}};\\nvel = {RandomReal[{-1,1}]};\\n\\naddPoint[xy_] := (points = Append[points, xy]; vel = Append[vel, RandomReal[{-1,1},2]]);\\n```\\n\\nNow it should add new dots, when we click on a canvas\\n\\n![](ezgif.com-video-to-gif-17.gif)\\n\\n\\nOne thing is missing - animation. One need to update `points` symbol with a new positions and etc. The corresponding function will be\\n\\n```mathematica\\npoints = {{0,0}};\\nvel = {RandomReal[{-1,1}]};\\n\\naddPoint[xy_] := (points = Append[points, xy]; vel = Append[vel, RandomReal[{-1,1},2]]);\\n\\nanimate[i_] := points = MapIndexed[(If[Max[#1//Abs] > 1.2, vel[[#2//First]] = - vel[[#2//First]]]; #1 + 0.1 vel[[#2//First]])&, points];\\n```\\n\\nInstead of using timers, one can assign the an event handler to the transition animation, which is provided by [wljs-graphics-d3](https://github.com/JerryI/wljs-graphics-d3) library. \\n:::info\\nIO operations between the frontend and a server cannot run at full speed giving 60FPS, therefore the data is interpolated using the time-constant provided by the option to the `Graphics` expression called `\\"TransitionDuration\\"`.\\n:::\\n\\nTo capture the transitions we need a `MiddlewareHandler`\\n\\n```mathematica\\nPoint[MiddlewareHandler[points//Hold, \\"end\\"->animate, \\"Threshold\\"->0.2]]\\n```\\n\\nIt stands in between the drawing function and an updatable symbol. Threshold value specifies when the event `animate` will be fired, i.e. `1` means after the transition and anything less means, that it will be fired a bit early. It is used to compensate the latency of the network making the animation smoother. \\n\\nHere the full code\\n\\n<Notebook code=\\"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\\" name=\\"expo-4312f\\">expo-4312f</Notebook>\\n\\nLinks\\n- [Download Notebook](Balls.wl)\\n\\nThanks for reading! See you next time"},{"id":"event-shortcuts","metadata":{"permalink":"/wljs-docs/blog/event-shortcuts","source":"@site/blog/2023-06-10-events.md","title":"Introducing Events shortcuts","description":"One of the paradigm of WLJS Frontend is an event-based approach. Any sliders, buttons are event generators, that produce EventObject[]. In order to simplify or mimic Mathematica\'s way of binding symbols to input elements Assign keyword was introduced.","date":"2023-06-10T00:00:00.000Z","formattedDate":"June 10, 2023","tags":[{"label":"frontend","permalink":"/wljs-docs/blog/tags/frontend"},{"label":"dynamics","permalink":"/wljs-docs/blog/tags/dynamics"},{"label":"events","permalink":"/wljs-docs/blog/tags/events"}],"readingTime":0.51,"hasTruncateMarker":true,"authors":[{"name":"Kirill Vasin","title":"Maintainer","url":"https://github.com/JerryI","imageURL":"img/jerryi.jpg","key":"jerryi"}],"frontMatter":{"slug":"event-shortcuts","title":"Introducing Events shortcuts","authors":"jerryi","tags":["frontend","dynamics","events"],"enableComments":true},"prevItem":{"title":"Interactive graphics example","permalink":"/wljs-docs/blog/balls-example"},"nextItem":{"title":"Introducing middleware event handlers","permalink":"/wljs-docs/blog/middleware-example"}},"content":"One of the paradigm of WLJS Frontend is an event-based approach. Any sliders, buttons are event generators, that produce `EventObject[<|...|>]`. In order to simplify or mimic Mathematica\'s way of binding symbols to input elements `Assign` keyword was introduced.\\n\\nInstead of \\n\\n```mathematica\\nInputRange[0,1, 0.1]\\nEventHandler[%, Function[data, x = data]]\\n```\\n\\none can write\\n\\n```mathematica\\nInputRange[0,1, 0.1] // Assign[x]\\n```\\n\\nThe result will be the same\\n\x3c!--truncate--\x3e\\nGoing further, one should note, that \\n\\n:::info\\n`EventHandler` or `Assign` returns the same object `EventObject[<||>]` as it has on input. On cell\'s output `EventObject[<|\\"view\\"->...|>]` a field `view` will be displayed by automatic converting it into `FrontEndExecutable`.\\n:::"},{"id":"middleware-example","metadata":{"permalink":"/wljs-docs/blog/middleware-example","source":"@site/blog/2023-05-11-middleware/index.md","title":"Introducing middleware event handlers","description":"In development","date":"2023-05-11T00:00:00.000Z","formattedDate":"May 11, 2023","tags":[{"label":"frontend","permalink":"/wljs-docs/blog/tags/frontend"},{"label":"dynamics","permalink":"/wljs-docs/blog/tags/dynamics"}],"readingTime":1.085,"hasTruncateMarker":true,"authors":[{"name":"Kirill Vasin","title":"Maintainer","url":"https://github.com/JerryI","imageURL":"img/jerryi.jpg","key":"jerryi"}],"frontMatter":{"slug":"middleware-example","title":"Introducing middleware event handlers","authors":"jerryi","tags":["frontend","dynamics"],"enableComments":true},"prevItem":{"title":"Introducing Events shortcuts","permalink":"/wljs-docs/blog/event-shortcuts"},"nextItem":{"title":"Introducing metamarkers","permalink":"/wljs-docs/blog/meta-example"}},"content":":::danger\\nIn development\\n:::\\n\\nTo describe the idea of a new tool better, it is good to start from the initial problem. \\n\\nThe data transfer via `ExpressionJSON` representation over the WebSocket protocol adds a significant latency. What if we want to implement __real-time visualization with a least  $\\\\sim 30FPS$ ?__\\n\\n\x3c!--truncate--\x3e\\n\\n## Interpolation\\nA standard library [wljs-graphics-d3](https://github.com/JerryI/wljs-graphics-d3) based on D3.js provides a decent transition mechanism, that makes a nice animated transitions from the old dataset to a new one perfectly in-sync with browser\'s refresh rate.\\n\\nLet us have a look at the example __with no interpolation involved__\\n\\n```mathematica\\np = {-1,0};\\nGraphics[{PointSize[0.1], Point[{p} // Hold]}, \\"TransitionDuration\\"->0.1]\\n```\\n\\nBy updating the position \\n\\n```mathematica\\nDo[\\n  p = {x, Cos[10 x]}; \\n  \\n  (* simulate load *)\\n  Pause[0.2];\\n, {x,-1,1,0.1}]\\n```\\n\\nwe will see the following\\n\\n![](ezgif.com-video-to-gif-19.gif)\\n\\nTo __enable the interpolation__ specify `TransitionDuration`\\n\\n```mathematica\\nGraphics[{Cyan, PointSize[0.1],Point[{p} // Hold]}, ImageSize->{600,100}, \\"TransitionDuration\\"->300, \\"TransitionType\\"->\\"Linear\\"]\\n```\\n\\nNow the transition time overlaps with our `Pause[0.2]` time period, that results in a kinda smooth behaviour. \\n\\n![](ezgif.com-video-to-gif-20.gif)\\n\\nThis approach might work well in a case, __when there is only one object to animate__. However, the artificial `Pause` to slow-down the animation (in a case if the actual calculation happens faster than we want to see)\\n\\n## Many objects\\nLet us show an example with many objects to be animated"},{"id":"meta-example","metadata":{"permalink":"/wljs-docs/blog/meta-example","source":"@site/blog/2023-04-20-placed/index.md","title":"Introducing metamarkers","description":".png)","date":"2023-04-20T00:00:00.000Z","formattedDate":"April 20, 2023","tags":[{"label":"evaluation","permalink":"/wljs-docs/blog/tags/evaluation"},{"label":"metamarkers","permalink":"/wljs-docs/blog/tags/metamarkers"}],"readingTime":1.665,"hasTruncateMarker":true,"authors":[{"name":"Kirill Vasin","title":"Maintainer","url":"https://github.com/JerryI","imageURL":"img/jerryi.jpg","key":"jerryi"}],"frontMatter":{"slug":"meta-example","title":"Introducing metamarkers","authors":"jerryi","tags":["evaluation","metamarkers"],"enableComments":true},"prevItem":{"title":"Introducing middleware event handlers","permalink":"/wljs-docs/blog/middleware-example"}},"content":"![](screenshot(5).png)\\nTo add new elements to a plot / graph there is no need in full reevaluation of a cell or using dynamic binding. Since the context of executing is stored together with an object, one can simply evaluate (in-place) the needed expression.\\n\x3c!--truncate--\x3e\\n\\nimport Component from \'@site/src/components/wljs-notebook-react/includes\';\\nimport Notebook from \'@site/src/components/wljs-notebook-react\';\\n\\n<Component></Component>\\n\\nLet\'s have a look at the following example\\n\\n```mathematica\\nPlot[Sin[x], {x,0,Pi}, Epilog->{MetaMarker[\\"myplot\\"]}]\\n```\\n\\nHere it results in `Graphics` expressions with a bunch of `Line` lying inside, while `Epilog` option just puts the given expression into the end of the same `Graphics` object.\\n\\n![](Screenshot%202023-07-14%20at%2015.36.32.png)\\n\\nYou can think about `MetaMarker` as if it was `<div id=\\"\\">` or class, that allows you to identify that particular object in the given context.\\n\\nAfter than one can simply execute an expression by using the following expression\\n\\n```mathematica\\nPlaced[{\\n\\tRGBColor[1,0,1], \\n\\tLine[{{0,0},{0.4,1}}]\\n}, FindMetaMarker[\\"myplot\\"]//First] // Hold // FrontSubmit\\n```\\n\\nAs a result, the graph will show a new feature\\n\\n![](Screenshot%202023-07-14%20at%2015.37.00.png)\\n\\nThis does not depend on `Graphics` object, it can be anything in principle.\\n\\n## Voxel cellular automaton\\nFor example, let us create an empty 3D canvas\\n\\n```mathematica\\nGraphics3D[{Sky[], MetaMarker[\\"marker\\"]},  \\"Lighting\\"->None]\\n```\\n\\nThen using build-in cellular automaton, we can visualize it lively in 3D using simple `Cuboid` shapes with different colors\\n\\n```mathematica\\nsize = {10,10};\\nboard = CellularAutomaton[{6, {2, 1}, {1, 1}}, {{{1}}, 0}, 50]//First;\\nsize = board//Dimensions\\n\\nz = 20;\\n\\niterate := (\\n board = CellularAutomaton[{6, {2, 1}, {1, 1}}, board];\\n\\n Table[\\n  If[board[[i+size[[1]]/2 // Floor,j+size[[2]]/2 // Floor]] > 0, \\n    With[{coords = Cuboid[{i+1,j+1,z+0.8}, {i,j,z}], color = {1+i/100,1+i/100,(z+10)/10}},\\n    \\n      Placed[{ RGBColor@color, coords}, FindMetaMarker[\\"marker\\"]//First] // Hold // FrontSubmit;\\n      Pause[0.02];\\n      \\n    ]\\n  ];\\n , {i, -size[[1]]/2//Floor, size[[1]]/2//Floor}, {j, -size[[2]]/2//Floor, size[[2]]/2//Floor}];\\n z = z - 0.8;\\n);\\n```\\n\\nIf a cell is 1, then it will be a cube on that place. By calling\\n\\n```mathematica\\nDo[iterate //Quiet;, {i,1,10}];\\n```\\n\\nOne can observe in real time the following\\n\\n![](ezgif.com-optimize-10.gif)\\n\\nThe full code is presented below\\n\\n<Notebook code=\\"\\" name=\\"speakeasy-b5f04\\">speakeasy-b5f04</Notebook>\\n\\nYou can also download this notebook via a link\\n- [VoxelAutomata.wl](VoxelAutomata.wl)\\n\\nThank you for reading! See you"}]}')}}]);