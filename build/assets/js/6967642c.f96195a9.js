"use strict";(self.webpackChunkwljs_docs=self.webpackChunkwljs_docs||[]).push([[290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1},o="How it works",s={unversionedId:"interpreter/Extras/implementation",id:"interpreter/Extras/implementation",title:"How it works",description:"The idea",source:"@site/docs/interpreter/Extras/implementation.md",sourceDirName:"interpreter/Extras",slug:"/interpreter/Extras/implementation",permalink:"/wljs-docs/docs/interpreter/Extras/implementation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/interpreter/Extras/implementation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"interpreterSidebar",previous:{title:"Extras",permalink:"/wljs-docs/docs/category/extras"},next:{title:"Reference",permalink:"/wljs-docs/docs/interpreter/Extras/reference"}},l={},p=[{value:"The idea",id:"the-idea",level:2},{value:"Internal representaion",id:"internal-representaion",level:3},{value:"Parser",id:"parser",level:3},{value:"Generalization",id:"generalization",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-it-works"},"How it works"),(0,a.kt)("h2",{id:"the-idea"},"The idea"),(0,a.kt)("p",null,"Originally it was done as a sort of\xa0",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JerryI/Mathematica-ThreeJS-graphics-engine"},"utility"),"\xa0to parse Graphics3D objects and recreate them as a set of commands of ThreeJS - a JS graphics library. Have a look at this example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},"SphericalPlot3D[1, {t, 0, Pi}, {p, 0, 2 Pi}] // InputForm\n")),(0,a.kt)("p",null,"it produces the following output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},"Graphics3D[{\n    GraphicsComplex[{{1,0,0}, ...}, {\n...\n    Polygon[{{2, 1, 11, 12}, ...}}]\n}]\n")),(0,a.kt)("p",null,"where, in principle it tells us that one should plot polygons using the set of 4 vertices indexed as ",(0,a.kt)("inlineCode",{parentName:"p"},"2,1,11,12")," with absolute coordinates stored in an array located in the first argument of ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphicsComplex"),"."),(0,a.kt)("h3",{id:"internal-representaion"},"Internal representaion"),(0,a.kt)("p",null,"A good hint how the internal data structure looks like can be seen in ",(0,a.kt)("a",{parentName:"p",href:"https://mathematica.stackexchange.com/questions/104660/what-algorithm-do-the-compress-and-uncompress-functions-use"},"Compress"),". See also ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JerryI/uncompress"},"mma-uncompress"),"."),(0,a.kt)("h3",{id:"parser"},"Parser"),(0,a.kt)("p",null,"Taking advantage of the standart library packed with Wolfram Kernel we can use directly a ",(0,a.kt)("inlineCode",{parentName:"p"},"ExportString")," function"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},'ExportString[%, "ExpressionJSON"]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'[\n    "Graphics3D",\n    [\n        "List",\n        [\n            "List",\n            [\n                "GraphicsComplex",\n                [\n                    "List",\n                    [\n                        "List",\n                            0.0,\n                            0.0,\n                            1.0\n                        ]\n,\n')),(0,a.kt)("p",null,"In principle it can convert an arbitary WL expression without loosing any data. Which is acually much faster, than ",(0,a.kt)("inlineCode",{parentName:"p"},"ToString")," method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},'test = SphericalPlot3D[Sin[t] Cos[p]^6, {t, 0, Pi}, {p, 0, 2 Pi}][[1]];\n\n((s = ExportString[test, "ExpressionJSON"]) // RepeatedTiming)[[1]]\n((s = ToString[test]) // RepeatedTiming)[[1]]\n\n> 0.03471\n> 0.16478\n')),(0,a.kt)("p",null,"that gives us a clue, where the internal Mathematica's expressions representation might be a sort of ",(0,a.kt)("inlineCode",{parentName:"p"},"ExpressionJSON")," like structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},"(a+b)[[0]] === Plus\n")),(0,a.kt)("p",null,"i.e., the structure is following"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"this.name = expr[0]\nthis.args = expr.slice(1, expr.length)\n")),(0,a.kt)("p",null,"Then it looks relatively easy to use it for calling a defined function"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var core = {};\nvar interpretate = (d, env) => {\n    if (typeof d === 'string')\n        return d.slice(1, -1);\n        \n    if (typeof d === 'number') \n        return d;\n\n    this.name = d[0];\n    this.args = d.slice(1, d.length);\n    return core[this.name](this.args, env);\n}\n")),(0,a.kt)("p",null,"threfore one can define a minimal set of functions to serve WL expressions like lists, colors, and etc..."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"core.List = (args, env) => {\n    const copy = {..env};\n    const list = [];\n    for (let i = 0, len = args.length; i < args.length; i++) {\n        list.push(interpretate(args[i], copy));\n    }\n    return list;\n};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"core.RGBColor = (args, env) => {\n    const r = interpretate(args[0], env);\n    const g = interpretate(args[1], env);\n    const b = interpretate(args[2], env);\n    env.color = new three.Color(r, g, b);\n};\n")),(0,a.kt)("p",null,"The second argument ",(0,a.kt)("inlineCode",{parentName:"p"},"env")," is a mutable object, which stores information to be shared with other WL expressions, for example color"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},"{Blue, {Red, Sphere[] (*RED*)}, Cuboid[] (*BLUE*)}\n")),(0,a.kt)("p",null,"Here you can see, that ",(0,a.kt)("inlineCode",{parentName:"p"},"env")," can be localized (a deep copy) inside ",(0,a.kt)("inlineCode",{parentName:"p"},"List")," expression."),(0,a.kt)("h2",{id:"generalization"},"Generalization"),(0,a.kt)("p",null,"For me as a maintener of this project @JerryI, the idea of bridging JS and Wolfram Language was very insiprational. Especcially, when I discovered how flexible and easy was the writting static and dynamic web-pages using Wolfram Language - ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JerryI/tinyweb-mathematica"},"TinyWEB & WSP"),"."),(0,a.kt)("p",null,"The reason\n",(0,a.kt)("em",{parentName:"p"},"somewhere on HTML page")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<input type="text" id="form" value="Hello!">\n<script>\n    core.UpdateText = (args, env) => {\n        const i = interpretate(args[0], env);\n        document.getElementById(\'form\').value = i;\n    }\n<\/script>\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"somewhere in WL")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mathematica"},"WebSocketBroadcast[server, UpdateText[RandomWord[]]]\n")),(0,a.kt)("p",null,"using websockets to link Wolfram Kernel and a page in realtime the intergration looks seamless. In principle, the API and all UI functions are implemented in a such way on the present version of Wolfram JS Frontend."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"In the present version the interpreter looks a bit more complex, however the ideas are the same.")))}u.isMDXComponent=!0}}]);