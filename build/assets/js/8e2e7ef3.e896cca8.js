"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[25020],{69144:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=t(17624),r=t(4552);const i={},o="Optics units converter",a={permalink:"/wljs-docs/widgets/2024/12/19/Units",source:"@site/widgets/2024-12-19-Units/index.md",title:"Optics units converter",description:"There are many physical units converters on the internet. Here we made one for our optics THz lab in University of Augsburg \ud83c\udde9\ud83c\uddea",date:"2024-12-19T00:00:00.000Z",tags:[],readingTime:2.665,hasTruncateMarker:!0,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"Musical scales and chords maker",permalink:"/wljs-docs/widgets/2025/01/06/MusicScales"}},l={authorsImageUrls:[]},c=[{value:"How it works",id:"how-it-works",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components},{CodeMirror:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeMirror",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"There are many physical units converters on the internet. Here we made one for our optics THz lab in University of Augsburg \ud83c\udde9\ud83c\uddea"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(38680).c+"",width:"893",height:"258"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),"\nBidirectional convertion between"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Energy units (ev, cm, Hartree...)"}),"\n",(0,s.jsx)(n.li,{children:"Wavelengths"}),"\n",(0,s.jsx)(n.li,{children:"Frequency"}),"\n",(0,s.jsx)(n.li,{children:"Temperature"}),"\n",(0,s.jsx)(n.li,{children:"Magnetic fields"}),"\n"]}),"\n",(0,s.jsxs)("a",{href:t(86248).c,className:"p-2 text-sm font-medium w-full flex ring-1 ring-inset text-gray-600 shadow ring-gray-300 bg-gray-300 my-2",children:[(0,s.jsx)(n.p,{children:"Download App v.02"}),(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",className:"w-5 h-5 ml-auto",viewBox:"0 0 24 24",children:(0,s.jsx)("path",{stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",d:"M17 17h.01m.39-3h.6c.932 0 1.398 0 1.765.152a2 2 0 0 1 1.083 1.083C21 15.602 21 16.068 21 17s0 1.398-.152 1.765a2 2 0 0 1-1.083 1.083C19.398 20 18.932 20 18 20H6c-.932 0-1.398 0-1.765-.152a2 2 0 0 1-1.083-1.083C3 18.398 3 17.932 3 17s0-1.398.152-1.765a2 2 0 0 1 1.083-1.083C4.602 14 5.068 14 6 14h.6m5.4 1V4m0 11-3-3m3 3 3-3"})})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"For magnetic field units we assume spin 1/2"})}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsx)(n.p,{children:"As a base we define a general transformation rules for units as follows"}),"\n",(0,s.jsx)(i,{children:'rules = {\n  "Centimeters" -> "Centimeters",\n  "eV" -> "Centimeters" / 8065.6,\n  "meV" -> 1000 "Centimeters" / 8065.6,\n  "Micrometers" -> 10000 / "Centimeters",\n  "Nanometers" -> (*SpB[*)Power[10(*|*),(*|*)7](*]SpB*) / "Centimeters",\n  "Angstrem" -> (*SpB[*)Power[10(*|*),(*|*)8](*]SpB*) / "Centimeters",\n  "MHz" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 "Centimeters",\n  "GHz" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 "Centimeters" 0.001,\n  "THz" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 "Centimeters" 0.001 0.001,\n  "K" -> 1.428 "Centimeters",\n\n  "ps" -> 0.004136 / ("Centimeters" / 8065.6),\n\n  \n  "T" -> 4.26602  "Centimeters",\n  "Oe" -> 10000 4.26602  "Centimeters",\n  \n  "kJ/Mol" -> 0.0120 "Centimeters",\n  "Hartree" ->   "Centimeters" / (27.2114 8065.6)\n};'}),"\n",(0,s.jsxs)(n.p,{children:["Then one can naturally use ",(0,s.jsx)(n.code,{children:"NSolve"})," to get this or that unit."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Change the extension to ",(0,s.jsx)(n.code,{children:"wln"})," to see the source code"]})}),"\n",(0,s.jsxs)(n.p,{children:["For the inputs we designed a custom input element using WLX and JS following ",(0,s.jsx)(n.a,{href:"https://jerryi.github.io/wljs-docs/frontend/Advanced/Javascript/Communication#using-wlx--2-ways-binding",children:"this guide"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'.wlx\n\nCustomInput[sym_, OptionsPattern[]] := Module[{\n  Label = OptionValue["Label"],\n  Ev = OptionValue["Event"],\n  Pattern = OptionValue["Pattern"],\n  Handler\n},\n\n  With[{Template = \n    <div class="mt-2 flex">\n      <div style="width: 7rem" class="flex shrink-0 items-center rounded-l-md bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 outline-gray-300 sm:text-sm/6"><Label/></div>\n      <input type="number" step="1" class="-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6" placeholder="0.0"/>\n    <script type="module">\n      core[\'<Handler/>\'] = async (args, env) => {\n        const input = env.element.getElementsByTagName(\'input\')[0];\n\n\n        const data = await interpretate(args[0], env);\n        input.value = +data.toFixed(4);\n        env.local.input = input;\n\n        input.addEventListener(\'change\', () => {\n          \n          console.warn(input.value);\n          env.local.skip = true;\n          server.kernel.emitt(\'<Ev/>\', input.value, \'<Pattern/>\');\n        });        \n      }\n\n      core[\'<Handler/>\'].update = async (args, env) => {\n        if (env.local.skip) {\n          env.local.skip = false;\n          return;\n        }\n        \n        console.log(\'Update\');\n        env.local.input.value = +(await interpretate(args[0], env)).toFixed(4);\n      }\n\n      core[\'<Handler/>\'].destroy = () => {\n        delete core[\'<Handler/>\'];\n      }\n\n      core[\'<Handler/>\'].virtual = true;\n    <\/script>\n  </div>\n  },\n    HTMLView[Template, Epilog->(Handler[sym])]\n  ]\n]\n\nOptions[CustomInput] = {"Label"->"", "Event"->"", "Pattern"->"Default"};\n'})}),"\n",(0,s.jsx)(n.p,{children:"what happens here:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"we define a template for our custom input field"}),"\n",(0,s.jsxs)(n.li,{children:["we define a support script with a generated\xa0",(0,s.jsx)(n.code,{children:"Handler"}),"\xa0function, which reads and updates this input field"]}),"\n",(0,s.jsxs)(n.li,{children:["we pack in into\xa0",(0,s.jsx)(n.a,{href:"https://jerryi.github.io/wljs-docs/frontend/Reference/GUI/HTMLView",children:"HTMLView"}),", which calls our\xa0",(0,s.jsx)(n.code,{children:"Handler"}),"\xa0on a provided argument after this component has been mounted"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For example"}),"\n",(0,s.jsx)(i,{children:'values = {1,1};\n\nevent = CreateUUID[];\n\nEventHandler[event, {\n  "x" -> Function[val,\n    values = {val, (*SpB[*)Power[val(*|*),(*|*)2](*]SpB*)} // N;\n  ],\n\n  "x2" -> Function[val,\n    values = {(*SqB[*)Sqrt[val](*]SqB*), val} // N // Re;\n  ]\n}]\n\n{\n  CustomInput[values[[1]] // Offload, "Event"->event, "Pattern"->"x", "Label"->"x"],\n  CustomInput[values[[2]] // Offload, "Event"->event, "Pattern"->"x2", "Label"->"x<sup>2</sup>"]\n} // Column'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(84696).c+"",width:"800",height:"160"})})]})}function u(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},86248:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"605e0a4a488df8e48dd51635a811a218.wlw"},38680:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/Pasted image 20250106142127-db1dd9f119087d1a4cefba0fab8f23b9.png"},84696:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/fields-ezgif.com-video-to-gif-converter-553959e2d416c2aa4cc82261b90aa3f0-553959e2d416c2aa4cc82261b90aa3f0.gif"},4552:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>o});var s=t(11504);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);