"use strict";(self.webpackChunkwljs_docs=self.webpackChunkwljs_docs||[]).push([[5555],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>w});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),h=i,w=p["".concat(l,".").concat(h)]||p[h]||m[h]||r;return n?a.createElement(w,o(o({ref:t},c),{},{components:n})):a.createElement(w,o({ref:t},c))}));function w(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6902:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),i=n(412);const r=["https://cdn.jsdelivr.net/gh/JerryI/wljs-interpreter@latest/src/interpreter.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-interpreter@latest/src/core.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-cells@main/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-editor@master/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-editor@master/src/boxes.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-markdown-support@master/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-js-support@master/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-html-support@master/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-inputs@master/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-graphics-d3@latest/dist/kernel.js","https://cdn.jsdelivr.net/gh/JerryI/wljs-plotly@latest/dist/kernel.js"];function o(e){return new Promise(((t,n)=>{if(i.Z.canUseDOM){var a=document.createElement("script");a.src=e,a.type="module",a.onload=()=>{t()},a.onerror=()=>{n("cannot load script "+e)},document.head.appendChild(a)}}))}const s=new Event("load-wljs");function l(){return(0,a.useEffect)((async()=>{if(i.Z.canUseDOM){if(window.loadedNotebooks={},window.LoadedWLJS)return;for(const e of r)await o(e);window.LoadedWLJS=!0,window.dispatchEvent(s)}}),[]),a.createElement("div",{id:"helmet"})}},1365:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(3778),r=n(412);function o(e){let{children:t,code:n,name:o,width:s,height:l}=e;return(0,a.useEffect)((()=>{if(r.Z.canUseDOM){const e=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),t=async()=>{if(window.LoadedWLJSForSure=!0,e in window.eventAttr)return;window.eventAttr[e]=!0;const t=i.iF(i.TD(atob(n),!0)),a=i.T8(t),r=JSON.parse(a);console.log(o);for(const e of r[0]){const t=new ObjectStorage(e[0]);t.cache=e[1],t.cached=!0}for(const e of r[1]){const t={local:{},global:{}};console.log(e),await interpretate(e,t)}};return window.LoadedWLJSForSure?t():window.addEventListener("load-wljs",t),()=>{Object.values(window.CellHashStorage).forEach((e=>{console.log(e),"input"===e?.type&&e.dispose()}))}}}),[]),a.createElement("main",{id:"frontend-editor",className:"main-container styles-container-editor"},a.createElement("div",{id:"frontend-editor-content",className:"group-container"},a.createElement("div",{id:o})))}r.Z.canUseDOM&&(window.eventAttr={},window.OfflineMode=!0)},9966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>w,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),r=n(6902),o=n(1365);const s={slug:"middleware-example",title:"Introducing middleware event handlers",authors:"jerryi",tags:["frontend","dynamics"],enableComments:!0},l=void 0,d={permalink:"/wljs-docs/blog/middleware-example",source:"@site/blog/2023-05-11-middleware/index.md",title:"Introducing middleware event handlers",description:"To describe the idea of a new tool better, it is good to start from the initial problem.",date:"2023-05-11T00:00:00.000Z",formattedDate:"May 11, 2023",tags:[{label:"frontend",permalink:"/wljs-docs/blog/tags/frontend"},{label:"dynamics",permalink:"/wljs-docs/blog/tags/dynamics"}],readingTime:3.77,hasTruncateMarker:!0,authors:[{name:"Kirill Vasin",title:"Maintainer",url:"https://github.com/JerryI",imageURL:"img/jerryi.jpg",key:"jerryi"}],frontMatter:{slug:"middleware-example",title:"Introducing middleware event handlers",authors:"jerryi",tags:["frontend","dynamics"],enableComments:!0},prevItem:{title:"Introducing Events shortcuts",permalink:"/wljs-docs/blog/event-shortcuts"},nextItem:{title:"Introducing metamarkers",permalink:"/wljs-docs/blog/meta-example"}},c={authorsImageUrls:[void 0]},p=[{value:"Interpolation",id:"interpolation",level:2},{value:"Event-based approach",id:"event-based-approach",level:2},{value:"Implementation",id:"implementation",level:3},{value:"How to use",id:"how-to-use",level:3},{value:"Making 2D Game",id:"making-2d-game",level:2}],m={toc:p},h="wrapper";function w(e){let{components:t,...s}=e;return(0,i.kt)(h,(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(1760).Z,width:"546",height:"343"}),"\nTo describe the idea of a new tool better, it is good to start from the initial problem. "),(0,i.kt)(r.Z,{mdxType:"Component"}),(0,i.kt)("p",null,"The data transfer via ",(0,i.kt)("inlineCode",{parentName:"p"},"ExpressionJSON")," representation over the WebSocket protocol adds a significant latency. What if we want to implement ",(0,i.kt)("strong",{parentName:"p"},"real-time visualization with a least  $\\sim 30FPS$ ?")),(0,i.kt)("h2",{id:"interpolation"},"Interpolation"),(0,i.kt)("p",null,"A standard library ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JerryI/wljs-graphics-d3"},"wljs-graphics-d3")," based on D3.js provides a decent transition mechanism, that makes a nice animated transitions from the old dataset to a new one perfectly in-sync with browser's refresh rate."),(0,i.kt)("p",null,"Let us have a look at the example ",(0,i.kt)("strong",{parentName:"p"},"with no interpolation involved")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'p = {-1,0};\nGraphics[{PointSize[0.1], Point[{p} // Hold]}, "TransitionDuration"->0.1]\n')),(0,i.kt)("p",null,"By updating the position "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},"Do[\n  p = {x, Cos[10 x]}; \n  \n  (* simulate load *)\n  Pause[0.2];\n, {x,-1,1,0.1}]\n")),(0,i.kt)("p",null,"we will see the following"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(5719).Z,width:"536",height:"96"})),(0,i.kt)("p",null,"To ",(0,i.kt)("strong",{parentName:"p"},"enable the interpolation")," specify ",(0,i.kt)("inlineCode",{parentName:"p"},"TransitionDuration")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'Graphics[{Cyan, PointSize[0.1],Point[{p} // Hold]}, ImageSize->{600,100}, "TransitionDuration"->300, "TransitionType"->"Linear"]\n')),(0,i.kt)("p",null,"Now the transition time overlaps with our ",(0,i.kt)("inlineCode",{parentName:"p"},"Pause[0.2]")," time period, that results in a kinda smooth behaviour. "),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(7391).Z,width:"536",height:"96"})),(0,i.kt)("p",null,"This approach might work well in a case, ",(0,i.kt)("strong",{parentName:"p"},"when there is only one object to animate"),"."),(0,i.kt)("h2",{id:"event-based-approach"},"Event-based approach"),(0,i.kt)("p",null,"Having a fixed time delay and a loop in general ",(0,i.kt)("strong",{parentName:"p"},"is a waste of resources"),", especially when it comes to many independent animations. "),(0,i.kt)("p",null,"One can assign all animations to the framerate of the browser, however doing that in a one directional way will introduce some issues, if the calculation time temporary exceeds the given time-window for render."),(0,i.kt)("p",null,"Since we anyway are using ",(0,i.kt)("a",{parentName:"p",href:"#Interpolation"},"Interpolation"),", one can use its local time-scale to call the next animation frame to be calculated (or data points will be updated)."),(0,i.kt)("p",null,"Assuming *$t",(0,i.kt)("em",{parentName:"p"},"{calc} \\approx t"),"{transition}$ then we introduce a threshold value (0-1) that specifies, when the event of recalculating the position fires with respect to the duration of transition animation"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"threshold = 0.9"),"\n",(0,i.kt)("img",{src:n(2195).Z,width:"560",height:"112"}),"\n",(0,i.kt)("em",{parentName:"p"},"threshold = 0.5"),"\n",(0,i.kt)("img",{src:n(3873).Z,width:"560",height:"112"}),"\n",(0,i.kt)("em",{parentName:"p"},"threshold = 0.1"),"\n",(0,i.kt)("img",{src:n(2969).Z,width:"560",height:"112"})),(0,i.kt)("p",null,"The good thing about it is that "),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"A new transition will not occur if the calculation has not finished. ")),(0,i.kt)("p",null,"A threshold and transition duration values can be adjusted to get the maximum smoothness and performance based on the network conditions and CPU load."),(0,i.kt)("h3",{id:"implementation"},"Implementation"),(0,i.kt)("p",null,"One need to have an access to the transition process happening at the particular graphics element? Why not just"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'EventHandler[Point[p // Hold], "transition"->calc] ???\n')),(0,i.kt)("p",null,"Here is why."),(0,i.kt)("p",null,"For the perspective of Javascript D3.js library used in frontend, when one calls"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"regular evaluation")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},"Point[p // Hold]\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"> d3.Selection<SVGElement, unknown, HTMLElement, any>\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"update method")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},"Point[p // Hold]\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"> d3.Transition<GElement extends BaseType, Datum, PElement extends BaseType, PDatum>\n")),(0,i.kt)("p",null,"Here one could attach to the returned object via"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"(object) => {\n    let state = false;\n    object.tween(uid, function (d) {\n        return function (t) {\n            if (t >= threshold && !state) {\n                server.emitt(uid, `True`);\n                state = true;\n            }\n        }\n    }))\n}\n")),(0,i.kt)("p",null,"You have to attach it every-time when a transition occur, since each time this is a new object."),(0,i.kt)("p",null,"However, there is a problem"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Dynamic binding happens only between containers (virtual or real), i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Point")," expressions"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},"OurHandler[Point[p // Hold]] // Graphics\n")),(0,i.kt)("p",{parentName:"admonition"},"The upper expression ",(0,i.kt)("inlineCode",{parentName:"p"},"Point")," scopes all variables. When ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," updates, ",(0,i.kt)("inlineCode",{parentName:"p"},"OurHandler")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Graphics")," expression ",(0,i.kt)("strong",{parentName:"p"},"will not be evaluated"),"!")),(0,i.kt)("p",null,"It means, that in general ",(0,i.kt)("inlineCode",{parentName:"p"},"EventHandler")," method, where the event-binding is executed from outside to inside works well for the static evaluation, but events generated during dynamic updates will not be captured!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"We need to bind from inside")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'Point[MiddlewareHandler[p // Hold, "end"->calc]] // Graphics\n')),(0,i.kt)("p",null,"Now the whole expression ",(0,i.kt)("inlineCode",{parentName:"p"},"Point")," including all its guts will be evaluated during the dynamic updates of any inner expressions."),(0,i.kt)("p",null,"With some tweaked added to the WLJS Interpreter, I (@JerryI) managed to make it work properly as intended. "),(0,i.kt)("h3",{id:"how-to-use"},"How to use"),(0,i.kt)("p",null,"There is only one event type has been implemented by now."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'Point[MiddlewareHandler[data // Hold, "end"->calc, "Threshold"->0.5]] // Graphics\n')),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'Line[MiddlewareHandler[data // Hold, "end"->calc, "Threshold"->0.5]]\n')),(0,i.kt)("p",null,"or even for the transformations"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},'Translate[MiddlewareHandler[Point[{0,0}], "end"->calc], data // Hold]\n')),(0,i.kt)("p",null,"where"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mathematica"},"calc[garbage_] := data = recalculate[data];\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Place ",(0,i.kt)("inlineCode",{parentName:"p"},"MiddlewareHandler")," inside any expression, of which you want to track the transition process. It acts as ",(0,i.kt)("inlineCode",{parentName:"p"},"Identity")," operator, i.e. allows safely wrapping around any other expression. ")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"MiddlewareHandler")," fires the first (zero) event just when it has been created")),(0,i.kt)("h2",{id:"making-2d-game"},"Making 2D Game"),(0,i.kt)("p",null,"Now we can use this trick for any projectiles in game animations! Each created object will be handled by its own ",(0,i.kt)("inlineCode",{parentName:"p"},"MiddlewareHandler")),(0,i.kt)(o.Z,{code:"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",name:"quinsy-b6236",mdxType:"Notebook"},"quinsy-b6236"),(0,i.kt)("p",null,"Download notebook"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(6557).Z},"Baster.wl"))))}w.isMDXComponent=!0},6557:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/Baster-958822804459918cdf1e55774af12e10.wl"},5719:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-19-fe0196c1622efb9c67ea939c3553e648.gif"},7391:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-20-27ede8f105d55a1415eeb1e351a18a09.gif"},2195:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-22-b00804dc2a8d849e1084354f00aeefcf.gif"},3873:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-23-8f26bfcac0730c177b652728d895924e.gif"},2969:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-24-dfb673bca1457e759304eab66bc480c0.gif"},1760:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ezgif.com-video-to-gif-25-d08c2c64c7cb08e63109f0d997658820.gif"}}]);