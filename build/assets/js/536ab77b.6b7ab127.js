"use strict";(self.webpackChunkwljs_docs=self.webpackChunkwljs_docs||[]).push([[412],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},s),{},{components:t})):a.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7860:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={slug:"meta-example",title:"Introducing metamarkers",authors:"jerryi",tags:["evaluation","metamarkers"],enableComments:!0},i=void 0,l={permalink:"/wljs-docs/blog/meta-example",source:"@site/blog/2023-04-20-placed/index.md",title:"Introducing metamarkers",description:".png)",date:"2023-04-20T00:00:00.000Z",formattedDate:"April 20, 2023",tags:[{label:"evaluation",permalink:"/wljs-docs/blog/tags/evaluation"},{label:"metamarkers",permalink:"/wljs-docs/blog/tags/metamarkers"}],readingTime:1.62,hasTruncateMarker:!0,authors:[{name:"Kirill Vasin",title:"Maintainer",url:"https://github.com/JerryI",imageURL:"img/jerryi.jpg",key:"jerryi"}],frontMatter:{slug:"meta-example",title:"Introducing metamarkers",authors:"jerryi",tags:["evaluation","metamarkers"],enableComments:!0},prevItem:{title:"Introducing middleware event handlers",permalink:"/wljs-docs/blog/middleware-example"}},p={authorsImageUrls:[void 0]},c=[{value:"Voxel cellular automaton",id:"voxel-cellular-automaton",level:2}],s=(u="Notebook",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const d={toc:c},m="wrapper";function f(e){let{components:n,...o}=e;return(0,r.kt)(m,(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(8691).Z,width:"537",height:"332"}),"\nTo add new elements to a plot / graph there is no need in full reevaluation of a cell or using dynamic binding. Since the context of executing is stored together with an object, one can simply evaluate (in-place) the needed expression."),(0,r.kt)("p",null,"Let's have a look at the following example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mathematica"},'Plot[Sin[x], {x,0,Pi}, Epilog->{MetaMarker["myplot"]}]\n')),(0,r.kt)("p",null,"Here it results in ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics")," expressions with a bunch of ",(0,r.kt)("inlineCode",{parentName:"p"},"Line")," lying inside, while ",(0,r.kt)("inlineCode",{parentName:"p"},"Epilog")," option just puts the given expression into the end of the same ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics")," object."),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(6618).Z,width:"536",height:"342"})),(0,r.kt)("p",null,"You can think about ",(0,r.kt)("inlineCode",{parentName:"p"},"MetaMarker")," as if it was ",(0,r.kt)("inlineCode",{parentName:"p"},'<div id="">')," or class, that allows you to identify that particular object in the given context."),(0,r.kt)("p",null,"After than one can simply execute an expression by using the following expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mathematica"},'Placed[{\n    RGBColor[1,0,1], \n    Line[{{0,0},{0.4,1}}]\n}, FindMetaMarker["myplot"]//First] // Hold // FrontSubmit\n')),(0,r.kt)("p",null,"As a result, the graph will show a new feature"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(8130).Z,width:"550",height:"345"})),(0,r.kt)("p",null,"This does not depend on ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics")," object, it can be anything in principle."),(0,r.kt)("h2",{id:"voxel-cellular-automaton"},"Voxel cellular automaton"),(0,r.kt)("p",null,"For example, let us create an empty 3D canvas"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mathematica"},'Graphics3D[{Sky[], MetaMarker["marker"]},  "Lighting"->None]\n')),(0,r.kt)("p",null,"Then using build-in cellular automaton, we can visualize it lively in 3D using simple ",(0,r.kt)("inlineCode",{parentName:"p"},"Cuboid")," shapes with different colors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mathematica"},'size = {10,10};\nboard = CellularAutomaton[{6, {2, 1}, {1, 1}}, {{{1}}, 0}, 50]//First;\nsize = board//Dimensions\n\nz = 20;\n\niterate := (\n board = CellularAutomaton[{6, {2, 1}, {1, 1}}, board];\n\n Table[\n  If[board[[i+size[[1]]/2 // Floor,j+size[[2]]/2 // Floor]] > 0, \n    With[{coords = Cuboid[{i+1,j+1,z+0.8}, {i,j,z}], color = {1+i/100,1+i/100,(z+10)/10}},\n    \n      Placed[{ RGBColor@color, coords}, FindMetaMarker["marker"]//First] // Hold // FrontSubmit;\n      Pause[0.02];\n      \n    ]\n  ];\n , {i, -size[[1]]/2//Floor, size[[1]]/2//Floor}, {j, -size[[2]]/2//Floor, size[[2]]/2//Floor}];\n z = z - 0.8;\n);\n')),(0,r.kt)("p",null,"If a cell is 1, then it will be a cube on that place. By calling"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mathematica"},"Do[iterate //Quiet;, {i,1,10}];\n")),(0,r.kt)("p",null,"One can observe in real time the following"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(8491).Z,width:"505",height:"311"})),(0,r.kt)("p",null,"The full code is presented below"),(0,r.kt)(s,{code:"",name:"speakeasy-b5f04",mdxType:"Notebook"},"speakeasy-b5f04"),(0,r.kt)("p",null,"You can also download this notebook via a link"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{target:"_blank",href:t(745).Z},"VoxelAutomata.wl"))),(0,r.kt)("p",null,"Thank you for reading! See you"))}f.isMDXComponent=!0},745:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/VoxelAutomata-c77ac782fd1022ade0babece848f2287.wl"},6618:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/Screenshot 2023-07-14 at 15.36.32-3d5da1248e1ee5952118cd1070f8997b.png"},8130:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/Screenshot 2023-07-14 at 15.37.00-428a0a9d2b3d60f4662c7dd3e613593c.png"},8491:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/ezgif.com-optimize-10-63a5d4259a897d8f219e311db66a3e75.gif"},8691:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/screenshot(5)-7664ea1c5e080cca6fca30e40d057411.png"}}]);