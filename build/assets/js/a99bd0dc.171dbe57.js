"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[6824],{90492:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var s=i(17624),r=i(4552);const a={env:["WLJS"],package:"wljs-graphics-d3",update:!0,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js",numericArray:!0},t=void 0,l={id:"frontend/Reference/Graphics/Line",title:"Line",description:"the representation of a line going though the points {x1,y1}, {x2,y2}",source:"@site/docs/frontend/Reference/Graphics/Line.md",sourceDirName:"frontend/Reference/Graphics",slug:"/frontend/Reference/Graphics/Line",permalink:"/wljs-docs/frontend/Reference/Graphics/Line",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1736628819e3,frontMatter:{env:["WLJS"],package:"wljs-graphics-d3",update:!0,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js",numericArray:!0},sidebar:"tutorialSidebar",previous:{title:"LABColor",permalink:"/wljs-docs/frontend/Reference/Graphics/LABColor"},next:{title:"Offset",permalink:"/wljs-docs/frontend/Reference/Graphics/Offset"}},c={},o=[{value:"General properties",id:"general-properties",level:2},{value:"Parameters",id:"parameters",level:2},{value:"AbsoluteThickness",id:"absolutethickness",level:3},{value:"RGBColor",id:"rgbcolor",level:3},{value:"Indexed geometry",id:"indexed-geometry",level:2},{value:"Examples",id:"examples",level:2},{value:"Simple primitive",id:"simple-primitive",level:3},{value:"Dynamics",id:"dynamics",level:3},{value:"Manipulation",id:"manipulation",level:4},{value:"Inverse kinematics (FABRIK)",id:"inverse-kinematics-fabrik",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.M)(),...e.components},{Wl:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Wl",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["the representation of a line going though the points ",(0,s.jsx)(n.code,{children:"{x1,y1}"}),", ",(0,s.jsx)(n.code,{children:"{x2,y2}"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Line[{{x1,y1}, {x2,y2}, ...}]\n"})}),"\n",(0,s.jsx)(n.p,{children:"or with multiple datasets"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Line[{list1, list2, ...}]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"general-properties",children:"General properties"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Line"})," itself does not depend on its interpretation, you can also think about it if it was an abstract object like"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"ArcLength[Line[{{0, 0}, {1, 1}}]]\n"})}),"\n",(0,s.jsx)(n.p,{children:"gives"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Sqrt[2]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["without ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/",children:"Graphics"})," used here."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.p,{children:"There are certain parameters, that can affect the style of a line"}),"\n",(0,s.jsx)(n.h3,{id:"absolutethickness",children:(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/AbsoluteThickness",children:"AbsoluteThickness"})}),"\n",(0,s.jsx)(n.p,{children:"The default is 1"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"{AbsoluteThickness[3], Line[{{0,0}, {1,1}}]} // Graphics\n"})}),"\n",(0,s.jsx)(n.p,{children:"Absolute thickness is indifferent to scaling or zooming of a graphics object."}),"\n",(0,s.jsx)(n.h3,{id:"rgbcolor",children:(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/RGBColor",children:"RGBColor"})}),"\n",(0,s.jsx)(n.p,{children:"Specifies the color of a stroke"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"{Red, Line[{{0,0}, {1,1}}]} // Graphics\n"})}),"\n",(0,s.jsx)(n.h2,{id:"indexed-geometry",children:"Indexed geometry"}),"\n",(0,s.jsxs)(n.p,{children:["Using it inside ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/GraphicsComplex",children:"GraphicsComplex"})," allows to specify only the indexes of vertices as arguments similar to faces like in ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/Polygon#Indexed%20geometry",children:"Indexed geometry"})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"simple-primitive",children:"Simple primitive"}),"\n",(0,s.jsx)(n.p,{children:"A line, that goes though list of points in 2D"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Graphics[Line[{{1, 0}, {2, 4}, {3, 0}, {4, 4}}]]\n"})}),"\n",(0,s.jsx)(a,{children:"Graphics[Line[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}], ImageSize->350]"}),"\n",(0,s.jsx)(n.p,{children:"or styled line"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Graphics[{\n  AbsoluteThickness[3],\n  Red, \n  Line[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]\n}]\n"})}),"\n",(0,s.jsx)(a,{children:"Graphics[{AbsoluteThickness[3],Red, Line[{{1, 0}, {2, 4}, {3, 0}, {4, 4}}]}, ImageSize->350]"}),"\n",(0,s.jsx)(n.p,{children:"Tangent vectors along an elliptic curve"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"With[{f = {Cos[x] + Sin[x], Sin[x]}}, \n Graphics[\n  Table[{LABColor[t/(2 Pi), 1, .8], Line[{f, Normalize[D[f, x]] + f}]} /. x -> t, {t, 0, 2 Pi, .1}]]]\n"})}),"\n",(0,s.jsx)(a,{children:"With[{f = {Cos[x] + Sin[x], Sin[x]}}, Graphics[Table[{LABColor[t/(2 Pi), 1, .8], Line[{f, Normalize[D[f, x]] + f}]} /. x -> t, {t, 0, 2 Pi, .1}], ImageSize->350]]"}),"\n",(0,s.jsx)(n.h3,{id:"dynamics",children:"Dynamics"}),"\n",(0,s.jsxs)(n.p,{children:["This is a main ingredient for displaying any dynamic plots, since ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Plotting%20Functions/Plot",children:"Plot"})," function works only for the static data."]}),"\n",(0,s.jsx)(n.h4,{id:"manipulation",children:"Manipulation"}),"\n",(0,s.jsx)(n.p,{children:"For example a live plot of traveling  wave-packet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 1"',children:'packet[x_, t_] := Sum[Sin[- w t + w x], {w, 0,3,0.05}] / 10;\nline = Table[{x, packet[x, 0]}, {x, 0, 10, 0.1}];\nGraphics[Line[line // Offload], Frame->True, FrameLabel->{{"amplitude"}, {"distance"}}]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["and a ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/GUI/InputRange",children:"InputRange"})," to control a time variable"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:"EventHandler[InputRange[0,5,0.5, 0], Function[t, \n  line = Table[{x, packet[x, t]}, {x, 0, 10, 0.1}];\n]]\n"})}),"\n",(0,s.jsx)(n.p,{children:"The desired result should look like"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:i(48832).c+"",width:"600",height:"461"})}),"\n",(0,s.jsx)(n.h4,{id:"inverse-kinematics-fabrik",children:"Inverse kinematics (FABRIK)"}),"\n",(0,s.jsx)(n.p,{children:"This is an example of implementation FABRIK algorithm"}),"\n",(0,s.jsx)(n.p,{children:"Define a bunch of points connect them into a segmented line with fixed length"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"chain = {Cos[#[[1]]], Sin[#[[2]]]}&/@ RandomReal[{-1,1}, {65, 2}] // Sort;\nlengths = Norm /@ (chain // Reverse // Differences) // Reverse;\n"})}),"\n",(0,s.jsx)(n.p,{children:"the actual implementation of FABRIK"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"fabrik[lengths_, target_, origin_] := Module[{buffer, prev},\n  buffer = Table[With[{p = chain[[-i]]},\n    If[i === 1,\n      prev = target;\n      target\n    ,\n    \n      prev = prev - Normalize[(prev - p)] lengths[[1-i]];\n      prev \n    ]\n  ], {i, chain // Length}] // Reverse;\n\n  Table[With[{p = buffer[[i]]},\n    If[i === 1,\n      prev = origin;\n      origin\n    ,\n    \n      prev = prev - Normalize[(prev - p)] lengths[[i-1]];\n      prev \n    ]\n  ], {i, chain // Length}]\n]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Dynamic visualization using lines and points"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:'Graphics[{\n\n  Line[chain // Offload], \n  Red, PointSize[0.06], \n  EventHandler[Point[{-1,-1}], {"drag"->Function[xy, chain = fabrik[lengths, xy, chain // First]]}], \n  Blue, Point[origin // Offload]\n  \n}, PlotRange->{{-2,2}, {-2,2}}, ImageSize->500, TransitionType->"Linear", TransitionDuration->30]\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Try to drag a red dot using mouse"}),"\nThe result will look like"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:i(92862).c+"",width:"600",height:"378"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Line"})," interpolates missing segments of a line, if the dataset has been updated. No actions needed form the user"]})})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},92862:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/ezgif.com-optimize-5-55576aef6756b65dcc582b2f19964fa0.gif"},48832:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/ezgif.com-video-to-gif-3 1-8bead91a2549ea2d4f3c42c269a925b5.gif"},4552:(e,n,i)=>{i.d(n,{I:()=>l,M:()=>t});var s=i(11504);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);