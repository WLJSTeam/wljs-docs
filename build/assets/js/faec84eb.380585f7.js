"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[83309],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(96540);const a={},r=o.createContext(a);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:t},e.children)}},44104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(74848),a=n(28453);const r={tags:["slides","tutorial"],enableComments:!0,authors:"jerryi"},s="Dynamic Presentation, or How to Code a Slide with Markdown and WL",i={permalink:"/blog/2025/03/02/ultimate-ppt",source:"@site/blog/2025-03-02-ultimate-ppt/index.md",title:"Dynamic Presentation, or How to Code a Slide with Markdown and WL",description:"An Ultimate Guide for non-WLJS or non-WL users",date:"2025-03-02T00:00:00.000Z",tags:[{label:"slides",permalink:"/blog/tags/slides"},{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:18.005,hasTruncateMarker:!0,authors:[{name:"Kirill Vasin",title:"Maintainer",url:"https://github.com/JerryI",imageURL:"https://avatars.githubusercontent.com/u/4111822?s=48&v=4",key:"jerryi"}],frontMatter:{tags:["slides","tutorial"],enableComments:!0,authors:"jerryi"},unlisted:!1,prevItem:{title:"Basic Verlet Integration implementation",permalink:"/blog/2025/05/01/rim"},nextItem:{title:"Modeling Earth",permalink:"/blog/2025/01/08/earth"}},l={authorsImageUrls:[void 0]},c=[];function d(e){const t={a:"a",blockquote:"blockquote",em:"em",hr:"hr",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"An Ultimate Guide for non-WLJS or non-WL users"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:n(96846).A+"",width:"967",height:"389"})}),"\n",(0,o.jsxs)(t.p,{children:["The idea of programmatically generating slides and graphics for presentations, reports, or lecture notes is far from new. Today, you can do this using ",(0,o.jsx)(t.a,{href:"https://python-pptx.readthedocs.io/en/latest/",children:"Python"}),", ",(0,o.jsx)(t.a,{href:"https://revealjs.com/",children:"HTML"}),", ",(0,o.jsx)(t.a,{href:"https://motioncanvas.io/",children:"JSX"}),", ",(0,o.jsx)(t.a,{href:"https://github.com/piever/Remark.jl",children:"Julia"}),", and more. Most of these tools follow a similar concept\u2014combining declarative markup like Markdown and HTML. We\u2019ll follow a similar path but add support for dynamic elements, reusable components, and event bindings. Sounds complicated? Actually, the goal is to simplify."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"\u26a0\ufe0f Heads-up: This approach involves traditional text-based programming."}),"\n"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["\u26a0\ufe0f Warning: Lots of images ahead. It ",(0,o.jsx)(t.em,{children:"is"})," about presentations \ud83d\ude04"]}),"\n"]}),"\n",(0,o.jsx)(t.hr,{})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},96846:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/title-15d0e5781411a176110a8a01710b2a8b.png"}}]);