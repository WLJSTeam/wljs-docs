"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[69668],{25136:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var i=t(17624),a=t(4552);const s={draft:!1},r=void 0,l={id:"frontend/Advanced/Javascript/Communication",title:"Communication",description:"Here we will highlight a few methods for communication with Javascript",source:"@site/docs/frontend/Advanced/Javascript/Communication.md",sourceDirName:"frontend/Advanced/Javascript",slug:"/frontend/Advanced/Javascript/Communication",permalink:"/wljs-docs/frontend/Advanced/Javascript/Communication",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1736628819e3,frontMatter:{draft:!1},sidebar:"tutorialSidebar",previous:{title:"Inset expressions",permalink:"/wljs-docs/frontend/Advanced/Graphics/Inset expressions"},next:{title:"Shared libraries",permalink:"/wljs-docs/frontend/Advanced/Javascript/Shared libraries"}},c={},o=[{value:"Direct call",id:"direct-call",level:2},{value:"Execution in a cell",id:"execution-in-a-cell",level:2},{value:"Data fetching",id:"data-fetching",level:2},{value:"Emitting events",id:"emitting-events",level:2},{value:"Custom UI component",id:"custom-ui-component",level:3},{value:"Integrating with standard inputs",id:"integrating-with-standard-inputs",level:3},{value:"Using WLX",id:"using-wlx",level:3},{value:"Side effects",id:"side-effects",level:4},{value:"Using WLX + 2 ways binding",id:"using-wlx--2-ways-binding",level:3},{value:"Emit event from WLJS",id:"emit-event-from-wljs",level:3},{value:"Request evaluation",id:"request-evaluation",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.M)(),...e.components},{CodeMirror:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeMirror",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Here we will highlight a few methods for communication with Javascript"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["See also ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Advanced/Frontend%20interpretation/WLJS%20Functions",children:"WLJS Functions"})]})}),"\n",(0,i.jsx)(n.h2,{id:"direct-call",children:"Direct call"}),"\n",(0,i.jsx)(n.p,{children:"Let us define our dummy function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="cell 1"',children:".js\ncore.MyFunction = async (args, env) => {\n  const data = await interpretate(args[0], env);\n  alert(data);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["then the fastest and most direct way of calling it is using ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Frontend%20IO/FrontSubmit",children:"FrontSubmit"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:'FrontSubmit[MyFunction["Hello World!"]]\n'})}),"\n",(0,i.jsx)(n.p,{children:"or chaining it with some other WLJS function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"FrontSubmit[MyFunction[ReadClipboard[]]]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"execution-in-a-cell",children:"Execution in a cell"}),"\n",(0,i.jsxs)(n.p,{children:["So-called ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Frontend%20Objects/FrontEndExecutable",children:"FrontEndExecutable"})," gives a DOM element our function because of their ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Decorations/StandardForm",children:"StandardForm"})," is defined like that. This is the easiest way"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="cell 1"',children:'.js\n\ncore.MyFunction2 = async (args, env) => {\n  const data = await interpretate(args[0], env);\n  env.element.innerHTML = `<span style="color:red">${data}</span>`;\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now we can call it from our cell"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:'CreateFrontEndObject[MyFunction2["Hello World!"]]\n'})}),"\n",(0,i.jsx)(n.p,{children:"it behaves like a symbol."}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["You don't have to always use ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Frontend%20Objects/CreateFrontEndObject",children:"CreateFrontEndObject"}),". It is possible to force Wolfram Kernel to apply it automatically on output using ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Decorations/MakeBoxes",children:"MakeBoxes"})," or use ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Decorations/ViewBox",children:"ViewBox"})," directly i.e."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"MyFunction2 /: MakeBoxes[m_MyFunction2, StandardForm] := (\n\tViewBox[m, m]\n)\n"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["This is basically how ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Graphics/",children:"Graphics"})," and others are implemented."]})}),"\n",(0,i.jsx)(n.h2,{id:"data-fetching",children:"Data fetching"}),"\n",(0,i.jsx)(n.p,{children:"A back communication is also possible"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="cell 1"',children:".js\n\ncore.MyFunction3 = async (args, env) => {\n  return [1,2,3,4,5,6];\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"and to read it synchronously"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:"FrontFetch[MyFunction3[]]\n"})}),"\n",(0,i.jsx)(n.p,{children:"or asynchronously"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:"Then[FrontFetchAsync[MyFunction3[]], Function[data, Print[data]]]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"emitting-events",children:"Emitting events"}),"\n",(0,i.jsxs)(n.p,{children:["We can call any WL function using ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Misc/Events",children:"Events"})," system"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="cell 1"',children:".js\n\nconst button = document.createElement('button');\nbutton.innerText = \"Press me\";\n\nbutton.addEventListener('click', () => {\n  server.kernel.emitt('eventUid', 'True');\n});\n\nreturn button;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now we can capture it using"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:'EventHandler["eventUid", Print]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-ui-component",children:"Custom UI component"}),"\n",(0,i.jsx)(n.p,{children:"Using JS one can craft its own UI components. For example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="cell 1"',children:".js\n\ncore.MyCustomComponent = async (args, env) => {\n  const label = await interpretate(args[0], env);\n  const ev = await interpretate(args[1], env);\n  \n  const button = document.createElement('button');\n  button.innerText = label;\n  button.style.backgroundColor = \"lightblue\";\n\n  button.addEventListener('click', () => {\n    server.kernel.emitt(ev, 'True');\n  });\n\n  env.element.appendChild(button);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now we can make boxes for it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:"MyCustomComponent /: MakeBoxes[m_MyCustomComponent, StandardForm] := With[{},\n  ViewBox[m, m]\n]\n"})}),"\n",(0,i.jsx)(n.p,{children:"In action"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 3"',children:'MyCustomComponent["Click me pls", "event1"]\nEventHandler["event1", Print];\n'})}),"\n",(0,i.jsx)(n.h3,{id:"integrating-with-standard-inputs",children:"Integrating with standard inputs"}),"\n",(0,i.jsxs)(n.p,{children:["It is much easier to work with ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Misc/Events#%60EventObject%60",children:(0,i.jsx)(n.code,{children:"EventObject"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 3"',children:'ClearAll[MyCustomComponent]\n\nMyCustomInput[label_String] := With[{uid = CreateUUID[]},\n  EventObject[<|"Id"->uid, "View"->MyCustomComponent[label, uid]|>]\n]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["in action it behaves similar to ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/GUI/InputRange",children:"InputRange"})," and etc"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 4"',children:'EventHandler[MyCustomInput["Click me"], Print]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"using-wlx",children:"Using WLX"}),"\n",(0,i.jsxs)(n.p,{children:["It is much easier to write markup in ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Cell%20types/WLX",children:"WLX"})," compared to JS"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:'title="cell 1"',children:'.wlx\n\nMyCustomComponent2[OptionsPattern[]] := With[{\n  Event = OptionValue["Event"],\n  Label = OptionValue["Label"],\n  Uid = CreateUUID[]\n},\n  <div>\n    <button id="{Uid}" style="background: lightblue" class="p-1">\n      <Label/>\n    </button>\n    <script type="module">\n      document.getElementById(\'<Uid/>\').addEventListener(\'click\', () => {\n\n          server.kernel.emitt(\'<Event/>\', \'True\');\n      })\n    <\/script>\n  </div>\n]\n\nOptions[MyCustomComponent2] = {"Event" -> "", "Label" -> "Click me"};\n'})}),"\n",(0,i.jsx)(n.p,{children:"In action"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:'MyCustomComponent2["Event"->"test", "Label"->"Hello World!"] // WLXEmbed\nEventHandler["test", Print];\n'})}),"\n",(0,i.jsx)(n.p,{children:"or combining with a previous technic"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:'MyCustomInput2[label_String] := With[{uid = CreateUUID[]},\n  EventObject[<|"Id"->uid, "View"-> HTMLView[MyCustomComponent2["Label"->label, "Event"->uid]]|>]\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can use it as a normal input element"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 3"',children:'EventHandler[MyCustomInput2["Click me"], Print]\n'})}),"\n",(0,i.jsx)(n.h4,{id:"side-effects",children:"Side effects"}),"\n",(0,i.jsxs)(n.p,{children:["To call another function ",(0,i.jsx)(n.strong,{children:"after an elements was drawn"})," see ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/GUI/HTMLView",children:"HTMLView"})," page. See below"]}),"\n",(0,i.jsx)(n.h3,{id:"using-wlx--2-ways-binding",children:"Using WLX + 2 ways binding"}),"\n",(0,i.jsxs)(n.p,{children:["It is also possible to combine your custom input element with traditional ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Dynamics",children:"Dynamics"}),". For instance you want to create multiple input fields, which are synchronised  with each other. Therefore you need a ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Advanced/Frontend%20interpretation/WLJS%20Functions",children:"WLJS Functions"})," with ",(0,i.jsx)(n.code,{children:"update"})," methods defined. One can generate those on-fly for each input element within a WLX script"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'.wlx\n\nCustomInput[sym_, OptionsPattern[]] := Module[{\n  Label = OptionValue["Label"],\n  Ev = OptionValue["Event"],\n  Pattern = OptionValue["Pattern"],\n  Handler\n},\n\n  With[{Template = \n    <div class="mt-2 flex">\n      <div style="width: 7rem" class="flex shrink-0 items-center rounded-l-md bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 outline-gray-300 sm:text-sm/6"><Label/></div>\n      <input type="number" step="1" class="-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6" placeholder="0.0"/>\n    <script type="module">\n      core[\'<Handler/>\'] = async (args, env) => {\n        const input = env.element.getElementsByTagName(\'input\')[0];\n\n\n        const data = await interpretate(args[0], env);\n        input.value = +data.toFixed(4);\n        env.local.input = input;\n\n        input.addEventListener(\'change\', () => {\n          \n          console.warn(input.value);\n          env.local.skip = true;\n          server.kernel.emitt(\'<Ev/>\', input.value, \'<Pattern/>\');\n        });        \n      }\n\n      core[\'<Handler/>\'].update = async (args, env) => {\n        if (env.local.skip) {\n          env.local.skip = false;\n          return;\n        }\n        \n        console.log(\'Update\');\n        env.local.input.value = +(await interpretate(args[0], env)).toFixed(4);\n      }\n\n      core[\'<Handler/>\'].destroy = () => {\n        delete core[\'<Handler/>\'];\n      }\n\n      core[\'<Handler/>\'].virtual = true;\n    <\/script>\n  </div>\n  },\n    HTMLView[Template, Epilog->(Handler[sym])]\n  ]\n]\n\nOptions[CustomInput] = {"Label"->"", "Event"->"", "Pattern"->"Default"};\n'})}),"\n",(0,i.jsx)(n.p,{children:"what happens here:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"we define a template for our custom input field"}),"\n",(0,i.jsxs)(n.li,{children:["we define a support script with a generated ",(0,i.jsx)(n.code,{children:"Handler"})," function, which reads and updates this input field"]}),"\n",(0,i.jsxs)(n.li,{children:["we pack in into ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/GUI/HTMLView",children:"HTMLView"}),", which calls our ",(0,i.jsx)(n.code,{children:"Handler"})," on a provided argument after this component has been mounted"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Let's see it in action"}),"\n",(0,i.jsx)(s,{children:'values = {1,1};\n\nevent = CreateUUID[];\n\nEventHandler[event, {\n  "x" -> Function[val,\n    values = {val, (*SpB[*)Power[val(*|*),(*|*)2](*]SpB*)} // N;\n  ],\n\n  "x2" -> Function[val,\n    values = {(*SqB[*)Sqrt[val](*]SqB*), val} // N // Re;\n  ]\n}]\n\n{\n  CustomInput[values[[1]] // Offload, "Event"->event, "Pattern"->"x", "Label"->"x"],\n  CustomInput[values[[2]] // Offload, "Event"->event, "Pattern"->"x2", "Label"->"x<sup>2</sup>"]\n} // Column'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(50360).c+"",width:"800",height:"160"})}),"\n",(0,i.jsx)(n.h3,{id:"emit-event-from-wljs",children:"Emit event from WLJS"}),"\n",(0,i.jsxs)(n.p,{children:["One can fire an event also using frontend's function ",(0,i.jsx)(n.code,{children:"EventFire"}),", which is effectively acts like ",(0,i.jsx)(n.code,{children:"server.kernel.emitt"})," being called from the WLJS Interpreter (i.e. using ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Frontend%20IO/FrontSubmit",children:"FrontSubmit"})," or other and wrapped in ",(0,i.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Interpreter/Offload",children:"Offload"}),")"]}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsx)(n.p,{children:"Not implemented! PR"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventHandler["internalEvent", Print];\nFrontSubmit[EventFire["internalEvent", ReadClipboard[]] // Offload]\n'})}),"\n",(0,i.jsx)(n.p,{children:"It will send an expression to be executed on the frontend, that reads a clipboard and fires back an event with a fetched data."}),"\n",(0,i.jsx)(n.h2,{id:"request-evaluation",children:"Request evaluation"}),"\n",(0,i.jsxs)(n.p,{children:["It is also possible from Javascript to request an evaluation of any symbol using ",(0,i.jsx)(n.a,{href:"https://jerryi.github.io/wlx-docs/docs/Reference/Misc/WLJSTransport#server",children:(0,i.jsx)(n.code,{children:"server"})})," object"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:".js\n\nconst doc = document.createElement('span');\n\nconst run = async () => {\n  const data = await server.kernel.ask('RandomReal[{-1,1}, 3]');\n  const result = await interpretate(data, {});\n  doc.innerText = result.join(', ');\n}\n\nrun();\n\nreturn doc;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50360:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/fields-ezgif.com-video-to-gif-converter-553959e2d416c2aa4cc82261b90aa3f0.gif"},4552:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>r});var i=t(11504);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);