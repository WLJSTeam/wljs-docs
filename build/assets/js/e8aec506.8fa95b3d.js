"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[19208],{9216:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=t(17624),i=t(4552);const a={},o=void 0,r={id:"frontend/Advanced/Command palette/Debugger",title:"Debugger",description:"Debugger is a Command palette tool, which attaches to a notebook and a working kernel in order to intercept the evaluation process and watch symbol changes.",source:"@site/docs/frontend/Advanced/Command palette/Debugger.md",sourceDirName:"frontend/Advanced/Command palette",slug:"/frontend/Advanced/Command palette/Debugger",permalink:"/wljs-docs/frontend/Advanced/Command palette/Debugger",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1735935149e3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AI Assistant",permalink:"/wljs-docs/frontend/Advanced/Command palette/AI Assistant"},next:{title:"Templates and styling",permalink:"/wljs-docs/frontend/Advanced/Command palette/Templates and styling"}},c={},l=[{value:"Inspecting mode",id:"inspecting-mode",level:2},{value:"Watching symbols",id:"watching-symbols",level:2},{value:"Break points",id:"break-points",level:2},{value:"Asserts",id:"asserts",level:3},{value:"Symbols",id:"symbols",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Debugger is a ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Command%20palette",children:"Command palette"})," tool, which attaches to a notebook and a working kernel in order to intercept the evaluation process and watch symbol changes.\n",(0,s.jsx)(n.img,{src:t(34832).c+"",width:"1736",height:"726"}),"\n",(0,s.jsx)(n.strong,{children:"Inspect"})," is a central mode for debugging."]}),"\n",(0,s.jsx)(n.h2,{id:"inspecting-mode",children:"Inspecting mode"}),"\n",(0,s.jsxs)(n.p,{children:["It pauses the current execution and allows interactive evaluation of any other cells in the sub-session, so that you can get the state of other symbols. You can write and evaluate other cells in ",(0,s.jsx)(n.code,{children:"Inspect"})," mode."]}),"\n",(0,s.jsx)(n.p,{children:"For example evaluate this one"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Do[k=i; Pause[1], {i, 100}];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["then switch to ",(0,s.jsx)(n.code,{children:"Inspect"})," mode, it will pause the evaluation. Now you can check the state of ",(0,s.jsx)(n.code,{children:"k"})," symbol by running a new cell with"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"k\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["You can always continue the execution from this mode by clicking ",(0,s.jsx)(n.code,{children:"Continue"})," till then next possible break. All transitions take time and depends on the current Kernel occupancy."]})}),"\n",(0,s.jsx)(n.h2,{id:"watching-symbols",children:"Watching symbols"}),"\n",(0,s.jsxs)(n.p,{children:["One can append a symbol to a tracking list, so you can monitor their ",(0,s.jsx)(n.code,{children:"OwnValue"})," in realtime automatically. It won't interrupt your execution unless you switched on a checkbox for that."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Live updates are supported only for assignments, i.e. when ",(0,s.jsx)(n.code,{children:"symbol = *newValue*"}),". If you mutate a part of a ",(0,s.jsx)(n.code,{children:"List"})," it won't cause an update."]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["It applies ",(0,s.jsx)(n.code,{children:"Shallow"})," to an expression of a symbol for displaying in tracking window."]})}),"\n",(0,s.jsx)(n.h2,{id:"break-points",children:"Break points"}),"\n",(0,s.jsxs)(n.p,{children:["In Wolfram Language it is hard to came up with a traditional break-points, since there is such things as ",(0,s.jsx)(n.em,{children:"source code file"})," in a classical way. Everything is an expression, and a break point must an expression too."]}),"\n",(0,s.jsxs)(n.p,{children:["There are 2 sources for breaking events, which immediately switch kernel to ",(0,s.jsx)(n.a,{href:"#Inspecting%20mode",children:"Inspecting mode"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"asserts",children:"Asserts"}),"\n",(0,s.jsxs)(n.p,{children:["Firstly, ",(0,s.jsx)(n.strong,{children:"enable breaking on assertions"})," from the dropdown menu in the top-bar of debugger. Then whenever execution encounters ",(0,s.jsx)(n.code,{children:"False"})," ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Misc/Assert",children:"Assert"}),", it will break."]}),"\n",(0,s.jsx)(n.p,{children:"For example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:'Do[k=i; If[i>6, Assert[False, "Hey"]]; Pause[1], {i, 100}];\n'})}),"\n",(0,s.jsxs)(n.p,{children:["this code will break automatically after 6 seconds. And in inspecting mode the evaluation of ",(0,s.jsx)(n.code,{children:"k"})," will return ",(0,s.jsx)(n.code,{children:"7"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you track ",(0,s.jsx)(n.code,{children:"k"})," symbol at the same time you will see the following"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(44640).c+"",width:"800",height:"468"})}),"\n",(0,s.jsx)(n.h3,{id:"symbols",children:"Symbols"}),"\n",(0,s.jsxs)(n.p,{children:["When a symbol has been assigned to a new value, generates an event in the debugger. Use checkbox ",(0,s.jsx)(n.code,{children:"Break on"})," to turn on breaking."]}),"\n",(0,s.jsx)(n.p,{children:"For example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Do[k=i; If[i>6, test = Now]; Pause[1], {i, 100}];\n"})}),"\n",(0,s.jsx)(n.p,{children:"this code will break after 6 iterations"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(91960).c+"",width:"800",height:"468"})})]})}function h(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},34832:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/Pasted image 20250103191609-39818880985f0659c09f68113cb0606b.png"},44640:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/assert-ezgif.com-optimize-2991d4452635211bd7dbf0f07a1cb819.gif"},91960:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/symbols-ezgif.com-optimize-ec64e763911c23dee817a53e7079d405.gif"},4552:(e,n,t)=>{t.d(n,{I:()=>r,M:()=>o});var s=t(11504);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);