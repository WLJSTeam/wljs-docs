"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[36150],{12626:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Screenshot 2024-03-29 at 20.55.44-7c2dfe884eba6454a4d2be8ffdde0223.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(96540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}},66529:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Screenshot 2024-03-29 at 20.38.46-d9e36767400071db7a616d5863ffc30f.png"},67027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=t(74848),i=t(28453);const r={draft:!1},s=void 0,o={id:"frontend/Advanced/Dynamics/Indicators",title:"Indicators",description:"While evaluating experimental data, some live indicators come in handy.",source:"@site/docs/frontend/Advanced/Dynamics/Indicators.md",sourceDirName:"frontend/Advanced/Dynamics",slug:"/frontend/Advanced/Dynamics/Indicators",permalink:"/frontend/Advanced/Dynamics/Indicators",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1748709296e3,frontMatter:{draft:!1},sidebar:"tutorialSidebar",previous:{title:"Audio Stream",permalink:"/frontend/Advanced/Dynamics/Audio Stream/"},next:{title:"Offloading calculations",permalink:"/frontend/Advanced/Dynamics/Offloading calculations"}},l={},c=[{value:"Crossbar and Coordinates Field",id:"crossbar-and-coordinates-field",level:2},{value:"Normal Way",id:"normal-way",level:3},{value:"Dynamically Appending to a Plot",id:"dynamically-appending-to-a-plot",level:3},{value:"Progress Bar",id:"progress-bar",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"While evaluating experimental data, some live indicators come in handy."}),"\n",(0,a.jsx)(n.h2,{id:"crossbar-and-coordinates-field",children:"Crossbar and Coordinates Field"}),"\n",(0,a.jsx)(n.p,{children:"If you are an Origin Pro user, this is an essential tool for picking data points from your graph."}),"\n",(0,a.jsxs)(n.p,{children:["Essentially, we need two things: ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Graphics/Line",children:"Line"})," and ",(0,a.jsx)(n.a,{href:"/frontend/Reference/GUI/TextView",children:"TextView"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"normal-way",children:"Normal Way"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 1"',children:'point = {0.,0.};\n\n(* Plot some dummy function *)\nPlot[Sinc[x], {x,-10,10}, Epilog->{\n  Red,\n\n  (* Crossbar *)\n  Line[With[{p = point[[1]]},\n    {{p, -10}, {p, 10}}\n  ] // Offload],\n\n  Line[With[{p = point[[2]]},\n    {{-10, p}, {10, p}}\n  ] // Offload],\n\n  (* Attach listener *)    \n  EventHandler[Null, {\n    "mousemove" -> Function[xy, point = xy]\n  }]\n}]\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This attaches an ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Misc/Events#%60EventHandler%60",children:(0,a.jsx)(n.code,{children:"EventHandler"})})," to a ",(0,a.jsx)(n.code,{children:"Null"})," expression, which forces it to seek the nearest parent that emits events, i.e., ",(0,a.jsx)(n.code,{children:"Graphics"}),". Every time the user moves the mouse over it, the event handler is triggered, updating the ",(0,a.jsx)(n.code,{children:"point"})," symbol, which causes the lines to update accordingly."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["You can reduce lag by tuning ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Graphics/TransitionDuration",children:"TransitionDuration"})," to a lower value."]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(92159).A+"",width:"996",height:"522"})}),"\n",(0,a.jsx)(n.p,{children:"Now, the text field:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 2"',children:"TextView[point // Offload]\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(67474).A+"",width:"1044",height:"158"})}),"\n",(0,a.jsx)(n.p,{children:"The accuracy might be too large. We can output the values separately by using another variable or symbol:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",children:'point = {0.,0.};\ntext = " ";\n\n(* Plot some dummy function *)\nPlot[Sinc[x], {x,-10,10}, Epilog->{\n  Red,\n\n  (* Crossbar *)\n  Line[With[{p = point[[1]]},\n    {{p, -10}, {p, 10}}\n  ] // Offload],\n\n  Line[With[{p = point[[2]]},\n    {{-10, p}, {10, p}}\n  ] // Offload],\n\n  EventHandler[Null, {\n    "mousemove" -> Function[xy, \n        point = xy;\n        text = ToString[Round[xy, 0.01]];\n    ]\n  }]\n}]\n\nTextView[text // Offload]\n'})}),"\n",(0,a.jsx)(n.p,{children:"Now it is much better."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(66529).A+"",width:"994",height:"616"})}),"\n",(0,a.jsx)(n.h3,{id:"dynamically-appending-to-a-plot",children:"Dynamically Appending to a Plot"}),"\n",(0,a.jsxs)(n.p,{children:["One can also append it to a plot dynamically afterward using ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Frontend%20IO/FrontInstanceReference",children:"FrontInstanceReference"}),". Sometimes this approach is better since all variables remain scoped."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",children:'placeCrossbar[ref_, pos_:{0.,0.}] := LeakyModule[{point = pos, text = ""},\n  FrontSubmit[{\n    Red,\n\n    (* Crossbar *)\n    Line[With[{p = point[[1]]},\n      {{p, -10}, {p, 10}}\n    ] // Offload],\n\n    Line[With[{p = point[[2]]},\n      {{-10, p}, {10, p}}\n    ] // Offload],\n\n    EventHandler[Null, {\n    "mousemove" -> Function[xy, \n        point = xy;\n        text = ToString[Round[xy, 0.01]];\n    ]\n  }]\n  }, ref];\n  \n  TextView[text // Offload]\n]\n'})}),"\n",(0,a.jsx)(n.p,{children:"Now, the only thing we need is to scope it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",metastring:'title="cell 1"',children:"(* Plot some dummy function *)\nref = FrontInstanceReference[];\nPlot[Sinc[x], {x,-10,10}, Epilog->{ref}]\n"})}),"\n",(0,a.jsx)(n.p,{children:"After evaluation, we can append it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",children:"placeCrossbar[ref]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"progress-bar",children:"Progress Bar"}),"\n",(0,a.jsxs)(n.p,{children:["During a long evaluation process, we need some sort of indication. For this, we need a few elements: ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Graphics/Rectangle",children:"Rectangle"})," and ",(0,a.jsx)(n.a,{href:"/frontend/Reference/Cells%20and%20Notebook/CellPrint",children:"CellPrint"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"One can think of it as a typical OOP approach. We need a constructor that returns an instance for tracking the evaluation progress:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",children:'progressBar[max_Real | max_Integer] := LeakyModule[{\n    progress = 0.,\n    bar,\n    increment,\n    timer = AbsoluteTime[]\n},\n    bar = CellPrint[ToString[\n        Graphics[{\n            LightBlue, Rectangle[{-1,-1}, {1,1}],\n            Green, Rectangle[{-1,-1}, {Offload[2 progress - 1], 1}]\n        }, ImagePadding->None, ImageSize->{400, 30}]\n    , StandardForm], "After"->EvaluationCell[]];\n\n    (* Throttling *)\n    increment[value_Real | value_Integer] := If[AbsoluteTime[] - timer > 0.1,\n        timer = AbsoluteTime[];\n        progress = value / max // N;\n        If[progress >= 0.99, \n            ClearAll[increment];\n            Delete[bar];\n        ];\n    ];\n\n    increment\n]\n'})}),"\n",(0,a.jsx)(n.p,{children:"Here, we also use a throttling mechanism to avoid overloading the frontend if our progress-tracking function is called too often. The progress bar itself is printed in another cell as a growing green rectangle."}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s try to use it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mathematica",children:"bar = progressBar[10];\nTable[bar[i]; Pause[0.5]; i, {i, 10}]\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(12626).A+"",width:"1096",height:"246"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},67474:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Screenshot 2024-03-29 at 20.37.00-a6bf145f3bd03372dae774a75d247043.png"},92159:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Draggable-ezgif.com-optipng-48c6ae4cf03acb8a8299795765974244.png"}}]);