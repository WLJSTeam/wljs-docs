"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[18558],{20258:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var i=t(74848),r=t(28453);const a={draft:!1,sidebar_position:1},s="Event System",d={id:"frontend/Advanced/Events system/event-generators",title:"Event System",description:"Where You Can Use Event Handlers",source:"@site/docs/frontend/Advanced/Events system/event-generators.md",sourceDirName:"frontend/Advanced/Events system",slug:"/frontend/Advanced/Events system/event-generators",permalink:"/frontend/Advanced/Events system/event-generators",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1748709296e3,sidebarPosition:1,frontMatter:{draft:!1,sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/frontend/Advanced/CLI"},next:{title:"Asynchronous Functions",permalink:"/frontend/Advanced/Events system/Asynchronous Functions"}},l={},c=[{value:"Where You Can Use Event Handlers",id:"where-you-can-use-event-handlers",level:3},{value:"Thumb Rule",id:"thumb-rule",level:2},{value:"String Equivalent",id:"string-equivalent",level:3},{value:"Pattern Matching",id:"pattern-matching",level:2},{value:"Cloning Events",id:"cloning-events",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Merging Events",id:"merging-events",level:2},{value:"Properties",id:"properties",level:2},{value:"Inheritable",id:"inheritable",level:3},{value:"Non-Inheritable",id:"non-inheritable",level:3},{value:"Integration with Server/Client",id:"integration-with-serverclient",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"event-system",children:"Event System"}),"\n",(0,i.jsx)(n.h3,{id:"where-you-can-use-event-handlers",children:"Where You Can Use Event Handlers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On ",(0,i.jsx)(n.code,{children:"Graphics2D"})," elements to listen for user interactions:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"drag"}),", ",(0,i.jsx)(n.code,{children:"click"}),", ",(0,i.jsx)(n.code,{children:"zoom"}),", ",(0,i.jsx)(n.code,{children:"mousemove"}),", ..."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On ",(0,i.jsx)(n.code,{children:"Graphics3D"})," elements:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"transform"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On any ",(0,i.jsx)(n.code,{children:"EventObject"})," or its string equivalent"]}),"\n",(0,i.jsxs)(n.li,{children:["Many more \u2014 see ",(0,i.jsx)(n.a,{href:"/frontend/Advanced/Events%20system/Mouse%20and%20keyboard",children:"Mouse and Keyboard"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The event-driven approach is inspired by JavaScript and NodeJS, where one can subscribe to changes in any object. Here, it is expanded to utilize the full power of Wolfram Language's pattern-matching features."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["See the reference section: ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Misc/Events",children:"Events"})]})}),"\n",(0,i.jsx)(n.h2,{id:"thumb-rule",children:"Thumb Rule"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"One event object"})," \u2014 ",(0,i.jsx)(n.strong,{children:"one handler function"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"ev = EventObject[]\nEventHandler[ev, Print]\n"})}),"\n",(0,i.jsx)(n.p,{children:"i.e."}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n\nsubgraph EventObject\n\tId\nend\n\nsubgraph EventHandler\n\tPrint\nend\n\nEventObject --"By Id"--\x3e EventHandler'}),"\n",(0,i.jsx)(n.p,{children:"To fire the event:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventFire[ev, "Hello World!"];\n'})}),"\n",(0,i.jsx)(n.p,{children:"To remove the handler from the event object, use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"Delete[ev]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or the more universal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventRemove[ev]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This deletes the handler function but not the ",(0,i.jsx)(n.code,{children:"EventObject"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["To assign more event handlers, you need to ",(0,i.jsx)(n.strong,{children:"clone the event object"})," or use a different pattern on the same event object (see ",(0,i.jsx)(n.a,{href:"#pattern-matching",children:"Pattern Matching"}),")."]})}),"\n",(0,i.jsx)(n.h3,{id:"string-equivalent",children:"String Equivalent"}),"\n",(0,i.jsxs)(n.p,{children:["Since binding is based solely on the ",(0,i.jsx)(n.code,{children:'"Id"'})," field, one can omit the ",(0,i.jsx)(n.code,{children:"EventObject"})," head:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'ev = "evid";\nEventHandler[ev, Print]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Is equivalent to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'ev = EventObject[<|"Id" -> "evid"|>]\nEventHandler[ev, Print]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"pattern-matching",children:"Pattern Matching"}),"\n",(0,i.jsxs)(n.p,{children:["An event can carry additional information using Wolfram Language patterns. This allows messages to be distributed across different handler functions based on the type of event fired. Using standard pattern-matching syntax with ",(0,i.jsx)(n.code,{children:"Rule"})," and ",(0,i.jsx)(n.code,{children:"RuleDelayed"}),", you can write more specific handler functions:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventHandler["evid", {\n\t"Topic" -> Function[data,\n\t\tEcho["Topic::"];\n\t\tEcho[data];\n\t],\n\tany_String :> Function[data,\n\t\tEcho[StringJoin[any, "::"]];\n\t\tEcho[data];\n\t]\t\n}];\n'})}),"\n",(0,i.jsx)(n.p,{children:"To fire an event for a specific pattern, add an extra argument:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventFire["evid", "Topic", "Hi!"];\nEventFire["evid", "Whatever", "Hi!"];\n'})}),"\n",(0,i.jsx)(n.p,{children:"Pattern matching is not limited to strings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventHandler["evid", {\n\t_Abrakadabra -> Function[Null,\n\t\tEcho["Got it!"];\n\t],\n\t_ -> Function[Null,\n\t\tEcho["Wrong one"];\n\t]\n}];\n\nEventFire["evid", Abrakadabra[], Null]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note that the following are effectively the same:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventHandler[ev, Print]\nEventHandler[ev, {_ -> Print}]\n"})}),"\n",(0,i.jsx)(n.p,{children:"And:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventFire[ev, data]\nEventFire[ev, "Default", data]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"cloning-events",children:"Cloning Events"}),"\n",(0,i.jsxs)(n.p,{children:["If you want multiple handlers per pattern, clone the ",(0,i.jsx)(n.code,{children:"EventObject"})," or its string equivalent:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'ev = EventObject[<|"Id" -> "evid"|>]\n(* First handler *)\nEventHandler[ev, Print]; \n\n(* Second handler *)\ncloned = EventClone[ev];\nEventHandler[cloned, Print];\n'})}),"\n",(0,i.jsx)(n.p,{children:"This creates an event router subscribed to the original event object, which is then connected to multiple new event objects:"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n\nsubgraph EventObject\n\tid1["id=evid"]\n\tprop1["props"]\nend\n\nsubgraph EventRouter\n\tsubgraph List\n\t\tid2["id=new1"]\n\t\tid3["id=new2"]\n\tend\n\tprop2["props"]\nend\n\nsubgraph EventHandler1[EventHandler]\n\tPrint1[Print]\nend\n\nsubgraph EventHandler2[EventHandler]\n\tPrint2[Print]\nend\n\nEventObject --"By id"--\x3e EventRouter\nid2 --"By id"--\x3e EventHandler1\nid3 --"By id"--\x3e EventHandler2'}),"\n",(0,i.jsxs)(n.p,{children:["Operations on ",(0,i.jsx)(n.code,{children:"cloned"})," will not affect the original event:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"Delete[cloned] or EventRemove[cloned]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Cloned objects inherit all properties (e.g., initial data) from the original object."})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["If you're sure two ",(0,i.jsx)(n.code,{children:"EventHandler"})," functions won't conflict, you can attach them to the same event object without cloning:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventHandler[ev, {\n\t"Pattern 1" -> func1\n}];\nEventHandler[ev, {\n\t"Pattern 2" -> func2\n}];\n\nEventFire[ev, ..., data];\n'})}),(0,i.jsx)(n.p,{children:"The patterns will be merged."})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Each handler function can return a value, allowing you to pass information back:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventHandler[ev, Function[Null,\n\tNow\n]];\n\nEventFire[ev, Null] // Echo\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Echo"})," will print the current date. This works with a chain of cloned events too:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventHandler[ev, Function[Null, Now]];\nEventHandler[EventClone[ev], Function[Null, Now]];\nEventHandler[EventClone[ev], Function[Null, Now]];\n\nEventFire[ev, Null] // Echo\n"})}),"\n",(0,i.jsx)(n.p,{children:"The returned value will be a list of three nearly identical timestamps."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Use return values to pass ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Misc/Promise",children:"Promise"})," objects when chained handlers need to wait for a deferred event (see ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Misc/Promise#%60Then%60",children:(0,i.jsx)(n.code,{children:"Then"})}),")."]})}),"\n",(0,i.jsx)(n.h2,{id:"merging-events",children:"Merging Events"}),"\n",(0,i.jsx)(n.p,{children:"To update the state based on two independently occurring events:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'ev1 = EventObject[<|"Id" -> "evid1"|>]\nev2 = EventObject[<|"Id" -> "evid2"|>]\n\njoined = Join[ev1, ev2]\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You don't need to clone events before joining \u2014 ",(0,i.jsx)(n.code,{children:"Join"})," does this automatically and preserves all other connections."]})}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n\nsubgraph EventObject1[EventObject]\n\tid1["id=evid1"]\n\tprop1["props1"]\nend\n\nsubgraph EventObject2[EventObject]\n\tid2["id=evid2"]\n\tprop2["props2"]\nend\n\nsubgraph EventRouter\nend\n\nsubgraph EventObject3[EventObject]\n\tid3["id=new"]\n\tprop3["merged props"]\nend\n\nEventObject1 --\x3e EventRouter\nEventObject2 --\x3e EventRouter\n\nEventRouter --Fire--\x3e EventObject3'}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"EventObject"})," can include additional keys. However, it is not a classical OOP object \u2014 handler functions can't access these properties. Only the ",(0,i.jsx)(n.code,{children:'"Id"'})," is globally stored."]}),"\n",(0,i.jsx)(n.h3,{id:"inheritable",children:"Inheritable"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:'"Initial"'})," property specifies data to ship when the event is fired. When you apply ",(0,i.jsx)(n.code,{children:"Join"})," or ",(0,i.jsx)(n.code,{children:"EventClone"}),", the final initial values are merged:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'ev1 = EventObject[<|"Id" -> "ev1", "Initial" -> <|"x" -> 1|>|>]\nev2 = EventObject[<|"Id" -> "ev1", "Initial" -> <|"y" -> 2|>|>]\n\nJoin[ev1, ev2]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Results in:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventObject[<|"Id" -> "generatedId", "Initial" -> <|"x" -> 1, "y" -> 2|>|>]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If no data is passed to ",(0,i.jsx)(n.code,{children:"EventFire"}),", the ",(0,i.jsx)(n.code,{children:'"Initial"'})," value is used:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventFire[ev]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Is equivalent to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventFire[ev, ev[[1]]["Initial"]]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"non-inheritable",children:"Non-Inheritable"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:'"View"'})," property is useful in GUIs:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventObject[<|"Id" -> "evid", "View" -> Graphics3D[Sphere[]]|>]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["It renders the graphic when displayed, instead of showing the raw ",(0,i.jsx)(n.code,{children:"EventObject"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"integration-with-serverclient",children:"Integration with Server/Client"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://jerryi.github.io/wlx-docs/docs/Reference/Misc/WLJSTransport",children:"WLJSTransport"})," framework lets JavaScript code trigger events. Use the global ",(0,i.jsx)(n.code,{children:"server"})," object:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"server.kernel.io.fire('evid', 'message');\n// or\nserver.kernel.io.fire('evid', 'message', 'pattern');\n"})}),"\n",(0,i.jsx)(n.p,{children:"On the server side, handle it as usual:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:'EventHandler["evid", Print]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var i=t(96540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);