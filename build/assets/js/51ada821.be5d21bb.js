"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[60238],{25037:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Screenshot 2024-11-26 at 20.00.41-de477601d61ab51b2b193813b54ef3fb.png"},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},88709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var o=t(74848),s=t(28453);const i={sidebar_position:3,tags:["code"]},r="Code insets",d={id:"frontend/Advanced/Components library/Code insets",title:"Code insets",description:"This component uses EditorView to display Wolfram Language code (including all syntax sugar) on a slide or WLX / Markdown cell",source:"@site/docs/frontend/Advanced/Components library/Code insets.md",sourceDirName:"frontend/Advanced/Components library",slug:"/frontend/Advanced/Components library/Code insets",permalink:"/frontend/Advanced/Components library/Code insets",draft:!1,unlisted:!1,tags:[{label:"code",permalink:"/tags/code"}],version:"current",lastUpdatedAt:1736628819e3,sidebarPosition:3,frontMatter:{sidebar_position:3,tags:["code"]},sidebar:"tutorialSidebar",previous:{title:"Components library",permalink:"/category/components-library"},next:{title:"Focus button",permalink:"/frontend/Advanced/Components library/Focus button"}},l={},a=[{value:"Source code",id:"source-code",level:2},{value:"Layout fixes",id:"layout-fixes",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"code-insets",children:"Code insets"}),"\n",(0,o.jsxs)(n.p,{children:["This component uses ",(0,o.jsx)(n.a,{href:"/frontend/Reference/GUI/EditorView",children:"EditorView"})," to display Wolfram Language code (including all syntax sugar) on a slide or ",(0,o.jsx)(n.a,{href:"/frontend/Cell%20types/WLX",children:"WLX"})," / ",(0,o.jsx)(n.a,{href:"/frontend/Cell%20types/Markdown",children:"Markdown"})," cell"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(25037).A+"",width:"1538",height:"558"})}),"\n",(0,o.jsx)(n.p,{children:"For example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'.slide\n\n# Code on a slide\n\n<CodeInset>\nTable[\n  With[{\n    i = (*SqB[*)Sqrt[Sinc[\\[Phi]]](*]SqB*)\n  },\n    funcion[i, (*VB[*)(RGBColor[1, 0, 0])(*,*)(*"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3ISSxJTWMGyXMgyRcxgMEHeyiDgQHOAAALpBNd"*)(*]VB*)] / i   \n  ]\n, {\\[Phi], 0, n}\n</CodeInset>\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["There is no need in writing ",(0,o.jsx)(n.code,{children:"(*funny comments*)"})," and etc. manually, this is a representation of cell's elements (Boxes) from a normal WL editor. ",(0,o.jsx)(n.strong,{children:"Just copy the text from it"}),"  (input/output cell)"]})}),"\n",(0,o.jsx)(n.h2,{id:"source-code",children:"Source code"}),"\n",(0,o.jsx)(n.p,{children:"Copy and paste it into an input cell"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'.wlx\nCodeInset[str_String] := With[{Fe = EditorView[str]},\n  <div>\n\t  <Fe/> \x3c!-- .element: class="text-left" style="font-size:18px" --\x3e\n  </div>\n]\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to embed other languages, consider to use ",(0,o.jsx)(n.a,{href:"/frontend/Reference/GUI/CellView",children:"CellView"})," instead of ",(0,o.jsx)(n.code,{children:"EditorView"})," and specify ",(0,o.jsx)(n.code,{children:'"Display"'})," property."]})}),"\n",(0,o.jsx)(n.h3,{id:"layout-fixes",children:"Layout fixes"}),"\n",(0,o.jsx)(n.p,{children:"Sometimes the text is aligned to the center. Another way to fix this issue is to apply this patch by evaluating in a new cell the following"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:".html\n\n<style>\n\t.slide-frontend-object .cm-editor\xa0{\n\t\ttext-align: left;\n\t}\n</style>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);