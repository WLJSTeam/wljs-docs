"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[80624],{44376:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(17624),a=t(4552);const i={},r=void 0,l={id:"frontend/Development/API/REST",title:"REST",description:"API is provided by a core extension wljs-api. All communication is done via HTTP POST request in JSON format. In a nutshell it allows to",source:"@site/docs/frontend/Development/API/REST.md",sourceDirName:"frontend/Development/API",slug:"/frontend/Development/API/REST",permalink:"/wljs-docs/frontend/Development/API/REST",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1739462254e3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Iframe",permalink:"/wljs-docs/frontend/Development/API/Iframe"},next:{title:"Contexts",permalink:"/wljs-docs/frontend/Development/Contexts"}},o={},c=[{value:"Steps to set up REPL",id:"steps-to-set-up-repl",level:2},{value:"Routes",id:"routes",level:2},{value:"Link check",id:"link-check",level:3},{value:"Example",id:"example",level:4},{value:"Extensions and assets",id:"extensions-and-assets",level:3},{value:"List of extensions",id:"list-of-extensions",level:4},{value:"Javascript assets",id:"javascript-assets",level:4},{value:"CSS assets",id:"css-assets",level:4},{value:"Example",id:"example-1",level:4},{value:"JS Bundle",id:"js-bundle",level:4},{value:"Example",id:"example-2",level:4},{value:"CSS Bundle",id:"css-bundle",level:4},{value:"Kernels management",id:"kernels-management",level:3},{value:"List of kernels",id:"list-of-kernels",level:4},{value:"Read state of Kernel",id:"read-state-of-kernel",level:4},{value:"Restart Kernel",id:"restart-kernel",level:4},{value:"Initialize Kernel",id:"initialize-kernel",level:4},{value:"Deinitialize Kernel",id:"deinitialize-kernel",level:4},{value:"Abort evaluation",id:"abort-evaluation",level:4},{value:"Example",id:"example-3",level:4},{value:"Transactions",id:"transactions",level:3},{value:"List transactions",id:"list-transactions",level:4},{value:"Create transaction",id:"create-transaction",level:4},{value:"Get transaction",id:"get-transaction",level:4},{value:"Delete transaction",id:"delete-transaction",level:4},{value:"Example",id:"example-4",level:4},{value:"Frontend Objects",id:"frontend-objects",level:3},{value:"Frontend objects interface",id:"frontend-objects-interface",level:4},{value:"Get object",id:"get-object",level:4},{value:"Example",id:"example-5",level:4},{value:"Minimal example of REPL",id:"minimal-example-of-repl",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.M)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["API is provided by a core extension ",(0,s.jsx)(n.code,{children:"wljs-api"}),". All communication is done via HTTP POST request in JSON format. In a nutshell it allows to"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"create transactions to evaluate Wolfram, WLX, any other support languages (see Cell Types) code and get back the result"}),"\n",(0,s.jsx)(n.li,{children:"control evaluation kernels"}),"\n",(0,s.jsxs)(n.li,{children:["fetch ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Advanced/Frontend%20interpretation/Frontend%20Objects",children:"Frontend Objects"})," used for 3D, 2D graphics"]}),"\n",(0,s.jsx)(n.li,{children:"fetch extensions, assets"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In principle public REST API is rich ",(0,s.jsx)(n.strong,{children:"enough to write your own small notebook interface with full support of all available cell types, 3D graphics, sound and etc"}),". However, this is a natural limitation - dynamics or event-based expressions such as ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/GUI/InputRange",children:"InputRange"})," or ",(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Reference/Interpreter/Manipulate",children:"Manipulate"})," ",(0,s.jsx)(n.strong,{children:"are not going to work"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(71477).c+"",width:"1638",height:"1698"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"A basic example of a single HTML file REPL interface made using this API"}),"\n",(0,s.jsx)(n.em,{children:"See at the bottom"})]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["WLJS System due to its architecture requires to have a few objects / interfaces to be exposed to the global ",(0,s.jsx)(n.code,{children:"window"})," scope. ",(0,s.jsx)(n.em,{children:"We are not using ESM-like modules and bundling on purpose."})]})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"WLJS packages includes both Wolfram Language and Javascript code, therefore for the simplicity we inject JS modules to the runtime using IIFE approach or via global scope objects."})}),"\n",(0,s.jsx)(n.h2,{id:"steps-to-set-up-repl",children:"Steps to set up REPL"}),"\n",(0,s.jsx)(n.p,{children:"To make a sort of interactive evaluation environment using REST API and WLJS Notebook runtime you need to"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Wait for link to be ready"}),"\n",(0,s.jsx)(n.li,{children:"Fetch extensions and their Javascript / CSS assets (probably cache it)"}),"\n",(0,s.jsx)(n.li,{children:"Embed extension assets to your page (run them)"}),"\n",(0,s.jsx)(n.li,{children:"Wait for evaluation Kernel to be ready (or create one)"}),"\n",(0,s.jsx)(n.li,{children:"Make transaction for evaluation"}),"\n",(0,s.jsx)(n.li,{children:"Wait for the result"}),"\n",(0,s.jsx)(n.li,{children:"Print the result"}),"\n",(0,s.jsx)(n.li,{children:"(Optional) fetch required frontend objects"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"routes",children:"Routes"}),"\n",(0,s.jsx)(n.p,{children:"You can see all available routes by fetching (GET or POST) via HTTP the address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://id:port/api/\n"})}),"\n",(0,s.jsx)(n.p,{children:"For example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"fetch('http://127.0.0.1:20560/api/', {\n  method:'POST'\n}).then((res) => {\n  res.json().then((r) => {\n    console.log(r); \n  }); \n}) \n"})}),"\n",(0,s.jsx)(n.p,{children:"will return"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"[ '/api/kernels/', '/api/transactions/', '/api/frontendobjects/', '/api/extensions/', '/api/ready/' ]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"link-check",children:"Link check"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/ready/\n"})}),"\n",(0,s.jsx)(n.p,{children:"This route returns a single JSON object"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"{\n\tReadyQ: <state>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"<state>"})," is ",(0,s.jsx)(n.code,{children:"true"}),", system is ready to work."]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"To check connection you might use something like this"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Utility function for delay\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst checkConnection = async () => {\n          try {\n            const res = await fetch('http://127.0.0.1:20560/api/ready/', { method: 'POST' });\n            console.warn(res);\n            const r = await res.json();\n            if (!r.ReadyQ) {\n              await delay(300);\n              await checkConnection();\n            }\n          } catch (err) {\n            await delay(300);\n            await checkConnection();\n          }\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"extensions-and-assets",children:"Extensions and assets"}),"\n",(0,s.jsx)(n.p,{children:"We call assets all 2d, 3d, sound libraries, view-components of cells and other support modules used rendering the output of Wolfram Language."}),"\n",(0,s.jsx)(n.h4,{id:"list-of-extensions",children:"List of extensions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/extensions/list/\n"})}),"\n",(0,s.jsx)(n.p,{children:"lists all extensions and their versions enabled on the system and required for evaluation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"[\n\t{name: <name1>, version: <version1>},\n\t...\n]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"javascript-assets",children:"Javascript assets"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/extensions/get/minjs/\nBody : [<name1>, <name2>, ...] \n"})}),"\n",(0,s.jsxs)(n.p,{children:["it will request all Javascript assets in minified CJS format and return them in the same order as array of ",(0,s.jsx)(n.strong,{children:"url-encoded strings"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"[\n\t<urlEncodedText>,\n\t...\n]\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:'type="module"'})," for each script provided in the response."]})}),"\n",(0,s.jsxs)(n.p,{children:["For example, one can request them first using ",(0,s.jsx)(n.a,{href:"#List",children:"List"})," and embed to head of the document"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Fetch extensions list\nconst listRes = await fetch('http://127.0.0.1:20560/api/extensions/list/', { method: 'POST' });\nconst listData = await listRes.json();\nconsole.log(listData);\n\nconst exts = listData.map((e) => e.name);\nconsole.log(exts);\n\n// Fetch minified JS\nconst jsRes = await fetch('http://127.0.0.1:20560/api/extensions/get/minjs/', {\n  method: 'POST',\n  body: JSON.stringify(exts),\n});\nconst jsData = await jsRes.json();\n\njsData.forEach((src) => {\n  const script = document.createElement('script');\n  script.type = 'module'; //since it is CJS\n  script.innerHTML = decodeURIComponent(src);\n  document.head.appendChild(script);\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"css-assets",children:"CSS assets"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/extensions/get/styles/\nBody : [<name1>, <name2>, ...] \n"})}),"\n",(0,s.jsxs)(n.p,{children:["it will request all CSS assets and return them in the same order as array of ",(0,s.jsx)(n.strong,{children:"url-encoded strings"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"[\n\t<urlEncodedText>,\n\t...\n]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"A minimal example in Javascript to fetch all assets and embed them"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const fetchExtensions = async () => {\n          try {\n            // Fetch extensions list\n            const listRes = await fetch('http://127.0.0.1:20560/api/extensions/list/', { method: 'POST' });\n            const listData = await listRes.json();\n            console.log(listData);\n        \n            const exts = listData.map((e) => e.name);\n            console.log(exts);\n        \n            // Fetch minified JS\n            const jsRes = await fetch('http://127.0.0.1:20560/api/extensions/get/minjs/', {\n              method: 'POST',\n              body: JSON.stringify(exts),\n            });\n            const jsData = await jsRes.json();\n        \n            jsData.forEach((src) => {\n              const script = document.createElement('script');\n              script.type = \"module\";\n              script.innerHTML = decodeURIComponent(src);\n              document.head.appendChild(script);\n            });\n        \n            // Fetch styles\n            const styleRes = await fetch('http://127.0.0.1:20560/api/extensions/get/styles/', {\n              method: 'POST',\n              body: JSON.stringify(exts),\n            });\n            const styleData = await styleRes.json();\n        \n            styleData.forEach((src) => {\n              const style = document.createElement('style');\n              style.innerHTML = decodeURIComponent(src);\n              document.head.appendChild(style);\n            });\n        \n          } catch (err) {\n            console.error('Error fetching extensions:', err);\n          }\n};\n"})}),"\n",(0,s.jsx)(n.h4,{id:"js-bundle",children:"JS Bundle"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Temporary broken. Do not use"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/extensions/bundle/minjs/\n"})}),"\n",(0,s.jsxs)(n.p,{children:["requests a single JS module ",(0,s.jsx)(n.strong,{children:"containing all necessary scripts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"'uriEncodedString'\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"Fetch the bundle and embed it"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"fetch('http://127.0.0.1:20560/api/extensions/bundle/minjs/', {\n  method:'POST'\n}).then((res) => {\n  res.json().then((r) => {\n      const script = document.createElement('script');\n      script.type=\"module\";\n      script.innerHTML = decodeURIComponent(r);\n      document.body.appendChild(script);\n\n      //after it was loaded, you can continue in setting up thing\n  }); \n})\n"})}),"\n",(0,s.jsx)(n.h4,{id:"css-bundle",children:"CSS Bundle"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/extensions/bundle/styles/\n"})}),"\n",(0,s.jsx)(n.h3,{id:"kernels-management",children:"Kernels management"}),"\n",(0,s.jsxs)(n.p,{children:["By the default WLJS Notebook ",(0,s.jsx)(n.strong,{children:"starts and initializes"})," 1 evaluation Kernel. The default WRI license of Wolfram Engine does not allow to spawn more."]}),"\n",(0,s.jsx)(n.h4,{id:"list-of-kernels",children:"List of kernels"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/list/\n"})}),"\n",(0,s.jsx)(n.p,{children:"returns a list of objects representing state of kernels"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"[\n\t{\n\t\tHash: <hash1>,\n\t\tState: <state1>,\n\t\tName: <name1>,\n\t\tReadyQ: <ready1>,\n\t\tContainerReadyQ: <cready1>\n\t},\n\t...\n]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"Hash"})," is used as ",(0,s.jsx)(n.em,{children:"uid"})," of a given Kernel used later in evaluation. ",(0,s.jsx)(n.code,{children:"State"})," field or ",(0,s.jsx)(n.code,{children:"ReadyQ"})," represents the status of the Kernel itself, while ",(0,s.jsx)(n.code,{children:"ContainerReadyQ"})," represents the state of evaluator running inside Kernel standing for different cell types / languages."]}),"\n",(0,s.jsx)(n.p,{children:"For example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="Kernel connected"',children:"ReadyQ: true,\nContainerReadyQ: false\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="Kernel connected and is ready for evaluation"',children:"ReadyQ: true,\nContainerReadyQ: true\n"})}),"\n",(0,s.jsx)(n.h4,{id:"read-state-of-kernel",children:"Read state of Kernel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/get/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"returns the state of a given kernel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"\t{\n\t\tHash: <hash>,\n\t\tState: <state>,\n\t\tName: <name>,\n\t\tReadyQ: <ready>,\n\t\tContainerReadyQ: <cready>\n\t}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"restart-kernel",children:"Restart Kernel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/restart/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["restarts a given kernel. ",(0,s.jsx)(n.strong,{children:"You would need to reinitialize it"})," afterwards"]}),"\n",(0,s.jsx)(n.h4,{id:"initialize-kernel",children:"Initialize Kernel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/init/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"initializes a given kernel"}),"\n",(0,s.jsx)(n.h4,{id:"deinitialize-kernel",children:"Deinitialize Kernel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/deinit/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"deinitializes a given kernel"}),"\n",(0,s.jsx)(n.h4,{id:"abort-evaluation",children:"Abort evaluation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/kernels/abort/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"aborts running evaluation (if there is one)"}),"\n",(0,s.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"A minimal example to find ready kernels"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst findKernel = async () => {\n\tconst res = await fetch('http://127.0.0.1:20560/api/kernels/list/', {\n        method:'POST'\n});\n            \n\tconst body = await res.json();\n   \n\n\tconst valid = body.filter((el) => el.ContainerReadyQ);\n\tif (valid.length == 0) {\n\t    await delay(300);\n\t    return await findKernel();\n\t}\n\n    return valid[0].Hash;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transactions",children:"Transactions"}),"\n",(0,s.jsxs)(n.p,{children:["The evaluation is performed using a so-called transaction. This refers to a type of evaluation query used by cells in the WLJS Notebook. Each created transaction is immediately submitted to the designated Kernel for evaluation. Once the evaluation is complete, its state field changes to ",(0,s.jsx)(n.code,{children:"Idle"}),", and the user can retrieve the result."]}),"\n",(0,s.jsx)(n.h4,{id:"list-transactions",children:"List transactions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/transactions/list/\n"})}),"\n",(0,s.jsx)(n.p,{children:"returns a list in the form"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"[\n\t{\n\t\tHash: <hash>,\n\t\tState: <state>\n\t},\n\t...\n]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"Hash"})," is used as ",(0,s.jsx)(n.em,{children:"uid"})," to refer to individual transaction object."]}),"\n",(0,s.jsx)(n.h4,{id:"create-transaction",children:"Create transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/transactions/create/\nBody: {Kernel: <kernelHash>, Data: <data>}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"<Data>"})," is an input string with your code to be evaluated. Since it uses the same pipeline of evaluation as notebook cells, you can provide not only Wolfram Language code, but any other supported language"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n\tKernel: 'uid of a kernel',\n\tData: 'Plot[x, {x,0,1}]'\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n\tKernel: 'uid of a kernel',\n\tData: '.wlx\\n\\n <div><Now/></div>'\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The response will contain ",(0,s.jsx)(n.em,{children:"uid"})," (or ",(0,s.jsx)(n.code,{children:"Hash"}),") of created transaction"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"<Hash>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"<Hash>"})," is a plain string."]}),"\n",(0,s.jsx)(n.h4,{id:"get-transaction",children:"Get transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/transactions/get/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["requests information about provided transaction. In the case if transaction ",(0,s.jsx)(n.strong,{children:"is still under evaluation"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"{\n\tHash: <hash>,\n\tState: 'Evaluation'\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["when ",(0,s.jsx)(n.strong,{children:"evaluation has finished"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"{\n\tHash: <hash>,\n\tState: 'Idle',\n\tResult: <result>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"<result>"})," is an object"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="<result>"',children:'{\n\tData: <dataString>,\n\tDisplay: <display> || "codemirror"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here the output string is stored in ",(0,s.jsx)(n.code,{children:"Data"})," field, while ",(0,s.jsx)(n.code,{children:"Display"})," defines a key-values of a view-component to render the output content."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"Display"})," is not provided, it is assumed, that it is ",(0,s.jsx)(n.code,{children:'"codemirror"'})," - a default view component available in WLJS (see later)."]}),"\n",(0,s.jsx)(n.h4,{id:"delete-transaction",children:"Delete transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/transactions/delete/\nBody : {Hash: <hash>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"removes a transaction from memory."}),"\n",(0,s.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"A minimal example to evaluate something might look like"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst getResult = async (kernel, transaction) => {\n            await delay(300);\n\n            let result = await fetch('http://127.0.0.1:20560/api/transactions/get/', {\n                method:'POST',\n                body:JSON.stringify({\n                    'Hash': transaction\n                })\n            });\n\n            result = await result.json();\n            console.log(result);\n\n            if (!(result.State == 'Idle')) result = await getResult(kernel, transaction);\n\n            \n            return result.Result;\n\n}\n\nconst evaluate = async (resultsDiv, kernel, text) => {\n\n                const trimmed = text.trim();\n                if (trimmed.length == 0) return;\n\n                let transaction = await fetch('http://127.0.0.1:20560/api/transactions/create/', {\n                    method:'POST',\n                    body:JSON.stringify({\n                        'Kernel': kernel,\n                        'Data': trimmed\n                    })\n                });\n\n                transaction = await transaction.json();\n                \n                const results = await getResult(kernel, transaction);\n\n                console.warn(results);\n                \n                results.forEach((data) => {\n                    \n                    const display = data.Display || 'codemirror';\n                    const parentelement = document.createElement('div');\n                    resultsDiv.appendChild(parentelement);\n\n                    const origin = {\n                        element: parentelement\n                    };\n\n                    const cell = new window.SupportedCells[display].view(origin, data.Data);\n\n\n                    //to remove use\n\n                    //cell.dispose()\n                })\n\n            })\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"window.SupportedCells"})," will automatically be added to the global scope of your app if you do ",(0,s.jsx)(n.a,{href:"#Extensions%20and%20assets",children:"Extensions and assets"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"frontend-objects",children:"Frontend Objects"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/wljs-docs/frontend/Advanced/Frontend%20interpretation/Frontend%20Objects",children:"Frontend Objects"})," are used to compress large expressions from the output / input cells into references to prevent code editors from parsing them. It does not alter the original expression, but only stores it separately in JSON format."]}),"\n",(0,s.jsxs)(n.p,{children:["For example if you evaluate ",(0,s.jsx)(n.code,{children:"Plot[x, {x,0,1}]"})," as a result you will get from the transaction something like this"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n\tHash: <...>\n\tData: "(*VB[*)(FrontEndRef[\\"770b6389-c881-426a-94c4-01e2abc608ee\\"])(*,*)(*1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKm5sbJJkZW1jqJltYGOqaGJkl6lqaJJvoGhimGiUmJZsZWKSmAgB0eRVI*)(*]VB*)"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:'"770b6389-c881-426a-94c4-01e2abc608ee"'})," encoded in Base64-like code inside comments refers a JSON object, which contains Wolfram Language ",(0,s.jsx)(n.code,{children:"Graphics[{Line[...], ...}, ...]"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you create a cell using one of ",(0,s.jsx)(n.code,{children:"window.SupportedCells"})," view-components ",(0,s.jsx)(n.strong,{children:"like in the example above"})," it will use a general (for WLJS) interface to fetch missing frontend objects (in a case if it contains ones) and render to the provided DOM."]}),"\n",(0,s.jsx)(n.h4,{id:"frontend-objects-interface",children:"Frontend objects interface"}),"\n",(0,s.jsxs)(n.p,{children:["The management of those object is done internally, however,  ",(0,s.jsx)(n.code,{children:"get"})," method has to be defined explicitly"]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"This is a global object exposed by WLJS"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window.ObjectStorage.prototype.get = function () {\n                  if (this.cached) return this.cache;\n                  const self = this;\n                  const promise = new Deferred();\n        \n                  getObject(self.uid).then((result) => {\n                    self.cache = result;\n                    promise.resolve(self.cache);\n                  }, (rejected) => {\n                    console.warn('Rejected! Not found');\n                    promise.reject();\n                  })\n              \n                  return promise.promise;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"getObject"})," is a function, which gets the requested object using our API (see the implementation later)."]}),"\n",(0,s.jsx)(n.h4,{id:"get-object",children:"Get object"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-url",metastring:'title="request"',children:"Route: /api/frontendobjects/get/\nBody : {Kernel: <kernelHash>, UId: <uid>}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Objects are stored on Kernels and need to be requested. The first API request usually requests frontend object from Kernel with a corresponding response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"{\n\tResolved: <state>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You will need to pool using this method until ",(0,s.jsx)(n.code,{children:"<state>"})," becomes ",(0,s.jsx)(n.code,{children:"true"}),", then"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:"{\n\tResolved: true,\n\tData: <data>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"<data>"})," is URL-encoded JSON string, which contains the desired object."]}),"\n",(0,s.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["Following the previous example, one can implement ",(0,s.jsx)(n.code,{children:"getObject"})," in the following way assuming that you store Kernel hash in a global variable ",(0,s.jsx)(n.code,{children:"targetKernel"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"\nconst targetKernel = '...';\nconst getObject = async (uid) => {\n                let r = await fetch('http://127.0.0.1:20560/api/frontendobjects/get/', {\n                    method:'POST',\n                    body:JSON.stringify({\n                      'UId': uid,\n                      \"Kernel\": targetKernel\n                    })\n                });\n\n                r = await r.json();\n\n                if (r.Resolved == true) {\n                    return JSON.parse(r.Data);\n                }\n\n                await delay(300);\n\n                return await getObject(kernel, uid)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"minimal-example-of-repl",children:"Minimal example of REPL"}),"\n",(0,s.jsx)(n.p,{children:"Using a single HTML file and a bunch of Javascript code one can make a working REPL interface using our API"}),"\n",(0,s.jsx)(i,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Textarea Template</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            line-height: 1.6;\n        }\n        .container {\n            max-width: 600px;\n            margin: 0 auto;\n        }\n        .state {\n            margin-bottom: 20px;\n            padding: 10px;\n            background-color: #f9f9f9;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n        }\n        textarea {\n            width: 100%;\n            height: 150px;\n            padding: 10px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            resize: vertical;\n        }\n        button {\n            display: block;\n            margin: 10px 0;\n            padding: 10px 20px;\n            background-color: #007bff;\n            color: #fff;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n        }\n        button:hover {\n            background-color: #0056b3;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"state\">\n            <strong>State:</strong> <span id=\"stateField\">Waiting for wljs connection</span>\n        </div>\n\n        <textarea id=\"code_area\" placeholder=\"Type your text here...\">Plot[x, {x,0,1}]</textarea>\n\n        <div id=\"resultsDiv\"></div>\n\n        <button id=\"submit_button\" type=\"button\">Submit</button>\n    </div>\n    <script type=\"module\">\n        const stateField = document.getElementById(\"stateField\");\n        const submitButton = document.getElementById(\"submit_button\");\n        const codeArea = document.getElementById(\"code_area\");\n        const resultsDiv = document.getElementById('resultsDiv')\n\n        // Utility function for delay\n        const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n        const checkConnection = async () => {\n          try {\n            const res = await fetch('http://127.0.0.1:20560/api/ready/', { method: 'POST' });\n            console.warn(res);\n            const r = await res.json();\n            if (!r.ReadyQ) {\n              await delay(300);\n              await checkConnection();\n            }\n          } catch (err) {\n            await delay(300);\n            await checkConnection();\n          }\n        };\n\n        const fetchExtensions = async () => {\n          try {\n            stateField.innerText = 'Fetching extensions...';\n        \n            // Fetch extensions list\n            const listRes = await fetch('http://127.0.0.1:20560/api/extensions/list/', { method: 'POST' });\n            const listData = await listRes.json();\n            console.log(listData);\n        \n            const exts = listData.map((e) => e.name);\n            console.log(exts);\n        \n            // Fetch minified JS\n            const jsRes = await fetch('http://127.0.0.1:20560/api/extensions/get/minjs/', {\n              method: 'POST',\n              body: JSON.stringify(exts),\n            });\n            const jsData = await jsRes.json();\n        \n            jsData.forEach((src) => {\n              const script = document.createElement('script');\n              script.type = \"module\";\n              script.innerHTML = decodeURIComponent(src);\n              document.head.appendChild(script);\n            });\n        \n            // Fetch styles\n            const styleRes = await fetch('http://127.0.0.1:20560/api/extensions/get/styles/', {\n              method: 'POST',\n              body: JSON.stringify(exts),\n            });\n            const styleData = await styleRes.json();\n        \n            styleData.forEach((src) => {\n              const style = document.createElement('style');\n              style.innerHTML = decodeURIComponent(src);\n              document.head.appendChild(style);\n            });\n        \n          } catch (err) {\n            console.error('Error fetching extensions:', err);\n          }\n        };\n\n        let targetKernel;\n\n        const findKernel = async () => {\n            const res = await fetch('http://127.0.0.1:20560/api/kernels/list/', {\n                method:'POST'\n            });\n            \n            const body = await res.json();\n   \n\n            const valid = body.filter((el) => el.ContainerReadyQ);\n            if (valid.length == 0) {\n                await delay(300);\n                return await findKernel();\n            }\n\n            return valid[0].Hash;\n        }\n\n        const getResult = async (kernel, transaction) => {\n            await delay(300);\n\n            let result = await fetch('http://127.0.0.1:20560/api/transactions/get/', {\n                method:'POST',\n                body:JSON.stringify({\n                    'Hash': transaction\n                })\n            });\n\n            result = await result.json();\n            console.log(result);\n\n            if (!(result.State == 'Idle')) result = await getResult(kernel, transaction);\n\n            \n            return result.Result;\n\n        }\n\n        const setUpServerAPI = () => {\n\n            const getObject = async (kernel, uid) => {\n                let r = await fetch('http://127.0.0.1:20560/api/frontendobjects/get/', {\n                    method:'POST',\n                    body:JSON.stringify({\n                      'UId': uid,\n                      \"Kernel\": kernel\n                    })\n                });\n\n                r = await r.json();\n\n                if (r.Resolved == true) {\n                    return JSON.parse(r.Data);\n                }\n\n                await delay(300);\n\n                return await getObject(kernel, uid)\n\n\n\n            }\n\n            //implemetation of get method depends on execution env\n            window.ObjectStorage.prototype.get = function () {\n                  if (this.cached) return this.cache;\n                  const self = this;\n                  const promise = new Deferred();\n        \n                  getObject(targetKernel, self.uid).then((result) => {\n                    self.cache = result;\n                    promise.resolve(self.cache);\n                  }, (rejected) => {\n                    console.warn('Rejected! Not found');\n                    promise.reject();\n                  })\n              \n                  return promise.promise;\n                }\n          }\n        \n        var initializationComplete = async () => {\n\n            setUpServerAPI();\n\n            console.warn('Initialization complete!');\n            stateField.innerText = 'Connecting to Kernel';\n            \n            const kernel = await findKernel();\n            targetKernel = kernel;\n            console.log('Obtained Kernel '+kernel);\n            stateField.innerText = 'Ready!';\n            \n            submitButton.addEventListener('click', async () => {\n\n                const trimmed = codeArea.value.trim();\n                if (trimmed.length == 0) return;\n\n                let transaction = await fetch('http://127.0.0.1:20560/api/transactions/create/', {\n                    method:'POST',\n                    body:JSON.stringify({\n                        'Kernel': kernel,\n                        'Data': trimmed\n                    })\n                });\n\n                transaction = await transaction.json();\n                stateField.innerText = 'Evaluation...';\n                \n                const results = await getResult(kernel, transaction);\n\n                console.warn(results);\n                stateField.innerText = 'Ready!';\n                \n                results.forEach((data) => {\n                    \n                    const display = data.Display || 'codemirror';\n                    const parentelement = document.createElement('div');\n                    resultsDiv.appendChild(parentelement);\n\n                    const origin = {\n                        element: parentelement\n                    };\n\n                    const cell = new window.SupportedCells[display].view(origin, data.Data);\n\n\n                    //to remove use\n\n                    //cell.dispose()\n                })\n\n            })\n        }\n\n\n        (async () => {\n          await delay(300);\n          await checkConnection();\n          await fetchExtensions();\n          await initializationComplete();\n        })();        \n    <\/script>\n</body>\n</html>\n"})})})]})}function h(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},71477:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/Screenshot 2025-01-21 at 10.27.46-8bbf36620108cb51f36576ff8698bc67.png"},4552:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>r});var s=t(11504);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);