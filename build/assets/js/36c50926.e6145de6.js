"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[79917],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},49118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(74848),i=t(28453);const r={env:["WLJS"],package:"wljs-graphics-d3",update:!0,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js"},o=void 0,c={id:"frontend/Reference/Graphics/Inset",title:"Inset",description:"a graphics object, that allows to put another Graphics, Image, EditorView, CellView or anything else for which WLJS execution environment makes sense into the canvas.",source:"@site/docs/frontend/Reference/Graphics/Inset.md",sourceDirName:"frontend/Reference/Graphics",slug:"/frontend/Reference/Graphics/Inset",permalink:"/frontend/Reference/Graphics/Inset",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1747906723e3,frontMatter:{env:["WLJS"],package:"wljs-graphics-d3",update:!0,source:"https://github.com/JerryI/wljs-graphics-d3/blob/dev/src/kernel.js"},sidebar:"tutorialSidebar",previous:{title:"Hue",permalink:"/frontend/Reference/Graphics/Hue"},next:{title:"LABColor",permalink:"/frontend/Reference/Graphics/LABColor"}},a={},l=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Dynamics",id:"dynamics",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{CodeMirror:t,Wl:r}=n;return t||p("CodeMirror",!0),r||p("Wl",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Inset[_Graphics | _Graphics3D | _Image | _EditorView | _, pos_List, opts___]\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:"Inset[_Graphics | _Graphics3D | _Image | _EditorView | _, pos_List, origin_List, size_List, opts___]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["a graphics object, that allows to put another ",(0,s.jsx)(n.a,{href:"/frontend/Reference/Graphics/",children:"Graphics"}),", ",(0,s.jsx)(n.a,{href:"/frontend/Reference/Image/",children:"Image"}),", ",(0,s.jsx)(n.a,{href:"/frontend/Reference/GUI/EditorView",children:"EditorView"}),", ",(0,s.jsx)(n.a,{href:"/frontend/Reference/GUI/CellView",children:"CellView"})," or anything else ",(0,s.jsx)(n.strong,{children:"for which WLJS execution environment makes sense"})," into the canvas."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pos"})," has to be a 2D vector, that specifies the position of the inset in the local coordination system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"origin"})," ",(0,s.jsx)(n.strong,{children:"is optional"})," and specifies the coordinates of the pin point in the local coordinate system of enclosing graphics. By the default ",(0,s.jsx)(n.strong,{children:"it takes the center of calculated size"}),". Set it to ",(0,s.jsx)(n.code,{children:"Center"})," to achieve the same effect."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"size"})," is displayable size in the local coordinate system of parent graphics object (with respect to ",(0,s.jsx)(n.code,{children:"Inset"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mathematica",children:'inset = Graphics[{\n  LightRed,\n  Disk[{0,0},0.1],\n  Black, Directive[FontSize->16], Text["Test", {-1/16,-1/30}]\n}, PlotRange->{{-1,1}, {-1,1}}];\n\nPlot[x, {x,0,10}, Epilog->{Inset[inset]}]\n'})}),"\n",(0,s.jsx)(r,{children:'Plot[x, {x,0,10}, Epilog->{Inset[Graphics[{LightRed,Disk[{0,0},0.1],Black, Directive[FontSize->16], Text["Test", {-1/16,-1/30}]}, ImageSize->350, PlotRange->{{-1,1}, {-1,1}}]]}]'}),"\n",(0,s.jsxs)(n.p,{children:["or put ",(0,s.jsx)(n.a,{href:"/frontend/Reference/GUI/EditorView",children:"EditorView"})]}),"\n",(0,s.jsx)(t,{children:'Plot[x, {x,0,10}, Epilog->{Inset[EditorView["(*FB[*)((1)(*,*)/(*,*)(2))(*]FB*)"], {3,5}]}]'}),"\n",(0,s.jsx)(r,{children:'Plot[x, {x,0,10}, Epilog->{Inset[EditorView["(*FB[*)((1)(*,*)/(*,*)(2))(*]FB*)"], {3,5}]}, ImageSize->350]'}),"\n",(0,s.jsx)(n.h2,{id:"dynamics",children:"Dynamics"}),"\n",(0,s.jsxs)(n.p,{children:["The second arguments ",(0,s.jsx)(n.code,{children:"pos"})," that specifies the position of an inset does support updates."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);