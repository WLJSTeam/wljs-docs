"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[82833],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(o.Provider,{value:n},e.children)}},69089:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var i=t(74848),r=t(28453);const o={env:["WLJS"],source:"https://github.com/JerryI/wljs-editor/blob/dev/src/EditorKernel.wl",update:!0,package:"wljs-editor"},d=void 0,s={id:"frontend/Reference/GUI/EditorView",title:"EditorView",description:"A view component to spawn an code-editor (fully functional)",source:"@site/docs/frontend/Reference/GUI/EditorView.md",sourceDirName:"frontend/Reference/GUI",slug:"/frontend/Reference/GUI/EditorView",permalink:"/frontend/Reference/GUI/EditorView",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1747565443e3,frontMatter:{env:["WLJS"],source:"https://github.com/JerryI/wljs-editor/blob/dev/src/EditorKernel.wl",update:!0,package:"wljs-editor"},sidebar:"tutorialSidebar",previous:{title:"CellView",permalink:"/frontend/Reference/GUI/CellView"},next:{title:"HTMLView",permalink:"/frontend/Reference/GUI/HTMLView"}},l={},a=[{value:"Event generation",id:"event-generation",level:2},{value:"Options",id:"options",level:2},{value:"<code>&quot;Event&quot;</code>",id:"event",level:3},{value:"<code>&quot;ReadOnly&quot;</code>",id:"readonly",level:3},{value:"<code>&quot;Selectable&quot;</code>",id:"selectable",level:3},{value:"<code>&quot;FullReset&quot;</code>",id:"fullreset",level:3},{value:"<code>&quot;KeepMaxHeight&quot;</code>",id:"keepmaxheight",level:3},{value:"Application",id:"application",level:2},{value:"Supported output forms",id:"supported-output-forms",level:2},{value:"Dev notes",id:"dev-notes",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"A view component to spawn an code-editor (fully functional)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EditorView[expr_String | expr_Offload, opts___]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["where ",(0,i.jsx)(n.code,{children:"expr"})," is a string, that represents an expression. It can receive updates and emit, when a user change the inner content."]}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["Editor is usually quite slow, when it comes to updates, because of many decoration widgets used there. Please, ",(0,i.jsx)(n.strong,{children:"do not use it on a rapid changing data"}),", consider ",(0,i.jsx)(n.a,{href:"/frontend/Reference/GUI/TextView",children:"TextView"})," instead."]})}),"\n",(0,i.jsx)(n.h2,{id:"event-generation",children:"Event generation"}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:'"Event"'})," option is provided, it will send a new data in a form of a string."]}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.h3,{id:"event",children:(0,i.jsx)(n.code,{children:'"Event"'})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies an ",(0,i.jsx)(n.code,{children:"uid"})," of an event-object, that will be fired on-change."]}),"\n",(0,i.jsx)(n.h3,{id:"readonly",children:(0,i.jsx)(n.code,{children:'"ReadOnly"'})}),"\n",(0,i.jsxs)(n.p,{children:["Blocks the editing mode. The default value is ",(0,i.jsx)(n.code,{children:"False"})]}),"\n",(0,i.jsx)(n.h3,{id:"selectable",children:(0,i.jsx)(n.code,{children:'"Selectable"'})}),"\n",(0,i.jsxs)(n.p,{children:["Allows or blocks any selection and copying. The default is ",(0,i.jsx)(n.code,{children:"True"})]}),"\n",(0,i.jsx)(n.h3,{id:"fullreset",children:(0,i.jsx)(n.code,{children:'"FullReset"'})}),"\n",(0,i.jsxs)(n.p,{children:["Fully updates an editor when ",(0,i.jsx)(n.code,{children:"expr"})," changes (rebuilds all widgets). By the default it is set to ",(0,i.jsx)(n.code,{children:"False"}),", which simplifies an update strategy and has less overhead. However it might not work on the content with ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Formatting/Row",children:"Row"}),", ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Formatting/Grid",children:"Grid"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"keepmaxheight",children:(0,i.jsx)(n.code,{children:'"KeepMaxHeight"'})}),"\n",(0,i.jsxs)(n.p,{children:["Measures and keep the maximum height. By the default is ",(0,i.jsx)(n.code,{children:"False"})]}),"\n",(0,i.jsx)(n.h2,{id:"application",children:"Application"}),"\n",(0,i.jsxs)(n.p,{children:["If you want to show the dynamic symbols content, use it together with ",(0,i.jsx)(n.code,{children:"ToString[expr, StandardForm]"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mathematica",children:"EventHandler[InputRange[1,10,1,1], Function[n,\n  series = ToString[Series[Sin[x], {x,0,n}] // Normal, StandardForm];\n]]\nEventFire[%, 1];\n\nEditorView[series // Offload]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"supported-output-forms",children:"Supported output forms"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/frontend/Reference/Formatting/StandardForm",children:"StandardForm"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/frontend/Reference/Formatting/WLXForm",children:"WLXForm"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"dev-notes",children:"Dev notes"}),"\n",(0,i.jsxs)(n.p,{children:["This is used in ",(0,i.jsx)(n.a,{href:"/frontend/Reference/Formatting/Low-level/InterpretationBox",children:"InterpretationBox"})," implementation to replace a WL expression using a user-provided WL expression in a code editor."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);