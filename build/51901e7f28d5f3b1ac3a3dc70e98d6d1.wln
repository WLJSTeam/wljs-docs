<|"Notebook" -> <|"FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$1764], 
   "Objects" -> <|"43a61dc6-e46a-46ab-a0e1-140f93d421a9" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"relative shrink-0 gap-y-3 \
pb-2 flex flex-col sm-controls\"><div class=\"flex gap-x-5 \
sm-controls\"><label for=\"default-range\" class=\"block mb-2 text-sm \
font-medium text-gray-900\"></label><input min=\"0\" max=\"1\" step=\"0.1\" \
value=\"0.1\" id=\"n-#instanceId\" type=\"number\" class=\"ml-auto h-2 grow \
max-w-60 block p-2.5 text-xs text-gray-900 bg-gray-50 rounded-md \
border-2-gray-50 border border-gray-300 focus:ring-blue-500 \
focus:border-blue-500\"></input></div><input min=\"0\" max=\"1\" step=\"0.1\" \
value=\"0.1\" id=\"r-#instanceId\" type=\"range\" class=\"sm-controls w-full \
h-1 bg-gray-200 rounded-lg appearance-none cursor-pointer \
\"></input></div>\n<script type=\"module\"> const num = \
document.getElementById('n-#instanceId');\n        const ran = \
document.getElementById('r-#instanceId');\n\n        let harpticQ = true;\n\n \
       function isNumber(value) { return typeof value === 'number'}\n\n       \
 num.addEventListener('input', (event)=> {\n            if (isNaN(num.value)) \
return;\n            ran.value = num.value;\n            \
server.kernel.emitt('779cc45c-7931-400c-a30b-10b1478d8fbd', num.value, \
'Default');      \n        });\n\n        ran.addEventListener('input', \
(event)=> {\n            if (isNaN(ran.value)) return;\n            num.value \
= ran.value;\n            \
server.kernel.emitt('779cc45c-7931-400c-a30b-10b1478d8fbd', ran.value, \
'Default');   \n            if (harpticQ) {\n                if \
(!window.electronAPI) {harpticQ = false; return}\n                if \
(!window.electronAPI.harptic) {harpticQ = false; return}\n                \
window.electronAPI.harptic();\n            }               \n        \
});</script>", Prolog -> HTMLView`TemplateProcessor[Association[
             "instanceId" -> CreateUUID[]]]]]|>|>, 
   "Path" -> "/Users/kirill/Library/Application \
Support/wljs-notebook/Demos/10 - Decorations/Dynamic gauge.wln", 
   "Symbols" -> <|"gvalue" -> 0.1|>, 
   "TOC" -> {Notebook`Editor`TOC`Private`heading[1, "Dynamic gauge", 
      CellObj[JerryI`Notebook`CellObj`$1748]], 
     Notebook`Editor`TOC`Private`heading[2, "Dynamics", 
      CellObj[JerryI`Notebook`CellObj`$1763]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Dynamic gauge\nAn example of advanced \
decoration, which supports changing data", "Display" -> "codemirror", 
    "Hash" -> "38200962-eb84-467b-956f-ec62565bb942", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "# Dynamic gauge\nAn example of advanced decoration, which \
supports changing data", "Display" -> "markdown", 
    "Hash" -> "a7213944-e6ed-436f-a4e9-f1915b6dd624", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, <|"Data" -> ".md\nDefine", 
    "Display" -> "codemirror", "Hash" -> 
     "410809ae-c457-42d6-8089-989a3601e896", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, <|"Data" -> "Define", 
    "Display" -> "markdown", "Hash" -> 
     "03663408-8be9-435b-8a02-c99adf1df410", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "gauge /: MakeBoxes[g_gauge, StandardForm] := ViewBox[g, g]", 
    "Display" -> "codemirror", "Hash" -> 
     "b69441bf-22be-44d0-b2da-5b7075daac95", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> ".md\nNow we need to implement the interpretation function on \
the frontend", "Display" -> "codemirror", 
    "Hash" -> "729f82d2-5b16-47b4-a950-3d778f0cc88e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> 
     "Now we need to implement the interpretation function on the frontend", 
    "Display" -> "markdown", "Hash" -> 
     "aa513893-479a-45c9-b276-84e67553abc5", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> ".js\n\ncore.gauge = async (args, env) => {\n  \n  // Create a \
gauge meter element\n  const gauge = document.createElement('div');\n  \
gauge.style.width = '100px'; // half the original width\n  gauge.style.height \
= '50px'; // half the original height\n  gauge.style.border = '1px solid \
#000';\n  gauge.style.borderRadius = '50px 50px 0 0'; // adjusted for smaller \
size\n  gauge.style.position = 'relative';\n  gauge.style.background = \
'linear-gradient(to right, red 0%, yellow 50%, green 100%)';\n\n  // Create a \
needle for the gauge\n  const needle = document.createElement('div');\n  \
needle.style.width = '2px';\n  needle.style.height = '40px'; // made the \
needle longer for better visibility\n  needle.style.background = '#000';\n  \
needle.style.position = 'absolute';\n  needle.style.bottom = '0';\n  \
needle.style.left = '50%';\n  needle.style.transformOrigin = 'bottom';\n\n  \
// Function to set the needle position based on input value\n  function \
setNeedlePosition(value) {\n    // Ensure value is between 0 and 1\n    value \
= Math.max(0, Math.min(1, value));\n    // Convert value to angle\n    const \
angle = value * 180 - 90; // -90 to 90 degrees\n    needle.style.transform = \
`rotate(${angle}deg)`;\n  }\n\n  // Set initial needle position\n  const pos \
= await interpretate(args[0], env);\n  setNeedlePosition(pos); // Middle \
position\n  \n\n  gauge.appendChild(needle);\n\n  \
env.element.appendChild(gauge);\n  env.local.update = \
setNeedlePosition;\n}\n\ncore.gauge.update = async (args, env) => {\n  const \
val = await interpretate(args[0], env);\n  \
env.local.update(val);\n}\n\ncore.gauge.destroy = () => {\n  \
console.log('Nothing to do');\n}\n\ncore.gauge.virtual = true;", 
    "Display" -> "codemirror", "Hash" -> 
     "5bd603c7-d381-4824-b8d4-c16e256e545e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "\ncore.gauge = async (args, env) => {\n  \n  // Create a \
gauge meter element\n  const gauge = document.createElement('div');\n  \
gauge.style.width = '100px'; // half the original width\n  gauge.style.height \
= '50px'; // half the original height\n  gauge.style.border = '1px solid \
#000';\n  gauge.style.borderRadius = '50px 50px 0 0'; // adjusted for smaller \
size\n  gauge.style.position = 'relative';\n  gauge.style.background = \
'linear-gradient(to right, red 0%, yellow 50%, green 100%)';\n\n  // Create a \
needle for the gauge\n  const needle = document.createElement('div');\n  \
needle.style.width = '2px';\n  needle.style.height = '40px'; // made the \
needle longer for better visibility\n  needle.style.background = '#000';\n  \
needle.style.position = 'absolute';\n  needle.style.bottom = '0';\n  \
needle.style.left = '50%';\n  needle.style.transformOrigin = 'bottom';\n\n  \
// Function to set the needle position based on input value\n  function \
setNeedlePosition(value) {\n    // Ensure value is between 0 and 1\n    value \
= Math.max(0, Math.min(1, value));\n    // Convert value to angle\n    const \
angle = value * 180 - 90; // -90 to 90 degrees\n    needle.style.transform = \
`rotate(${angle}deg)`;\n  }\n\n  // Set initial needle position\n  const pos \
= await interpretate(args[0], env);\n  setNeedlePosition(pos); // Middle \
position\n  \n\n  gauge.appendChild(needle);\n\n  \
env.element.appendChild(gauge);\n  env.local.update = \
setNeedlePosition;\n}\n\ncore.gauge.update = async (args, env) => {\n  const \
val = await interpretate(args[0], env);\n  \
env.local.update(val);\n}\n\ncore.gauge.destroy = () => {\n  \
console.log('Nothing to do');\n}\n\ncore.gauge.virtual = true;", 
    "Display" -> "js", "Hash" -> "622ce004-248c-4620-8783-4276bdf46ce0", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> ".md\nLet us test it!", "Display" -> "codemirror", 
    "Hash" -> "1b6b60f5-5578-44f0-8100-660a4f3f5a5b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, <|"Data" -> "Let us test it!", 
    "Display" -> "markdown", "Hash" -> 
     "6a8388a7-f1bc-4b8a-88b9-e7090593abaf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, <|"Data" -> "gauge[0.3]", 
    "Display" -> "codemirror", "Hash" -> 
     "5958898b-27f8-4249-95d4-4b5f51596552", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "(*VB[*)(gauge[0.3])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRAeK5B\
ITyxNTy0yBoPL9gCxdwlI\"*)(*]VB*)", "Display" -> "codemirror", 
    "Hash" -> "873c5fa4-8a3f-498a-8403-5df5df25c55f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "278de8aa-df0d-4cde-bbf5-5678eaa3efd0", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "", "Display" -> "markdown", 
    "Hash" -> "eae2ad46-ec8f-4f0f-a773-f34cbad7223c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> ".md\n## Dynamics", "Display" -> "codemirror", 
    "Hash" -> "6dbdd47a-c25d-4268-97ec-6803762f6021", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, <|"Data" -> "## Dynamics", 
    "Display" -> "markdown", "Hash" -> 
     "ba2d8304-c8a9-477b-87ff-f1f870a4c4f8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "gvalue = 0.1;\nEventHandler[InputRange[0, 1, 0.1, 0.1], \
(gvalue = #) &]\n\ngauge[gvalue // Offload]", "Display" -> "codemirror", 
    "Hash" -> "8970c1b1-37be-4de1-991b-6b5feb6fc5c7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "(*VB[*)(EventObject[<|\"Id\" -> \
\"779cc45c-7931-400c-a30b-10b1478d8fbd\", \"Initial\" -> 0.1, \"View\" -> \
\"43a61dc6-e46a-46ab-a0e1-140f93d421a9\"|>])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHv\
k5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKmxgnmhmmJJvpppqYJeoCcZJuokGqoa6hiUGapXG\
KiZFhoiUAhbUVjw==\"*)(*]VB*)", "Display" -> "codemirror", 
    "Hash" -> "f2de3cb2-d728-47a1-953b-d917ec6a37a8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>, 
   <|"Data" -> "(*VB[*)(gauge[Offload[gvalue]])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgE\
SHvk5KRAeK5BITyxNT4Vw2YGEf1paTn5iSjEbSKosMac0FQBuxw0r\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "e4f3e0de-88ef-415a-8f9d-0064144631f6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "223ddc85-d735-497a-8ee8-08e0b8c94360"|>}, "serializer" -> "jsfn4"|>
