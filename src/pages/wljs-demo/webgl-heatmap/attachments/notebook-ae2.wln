<|"Notebook" -> <|"Controller" -> "c7a56351-d3ab-4e69-9786-d550fadfe76c", 
   "FocusedCell" -> CoffeeLiqueur`Notebook`Cells`CellObj[
     CoffeeLiqueur`Notebook`Cells`CellObj`$220], "HaveToSaveAs" -> False, 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "1d009f52-c77a-4620-bbfd-37662eb60fa0", 
   "Objects" -> <|"ee52e033-8e00-49d5-9427-91a42d3e707e" -> 
      <|"Public" -> Hold[HeatMap[{{0.20167245124746752, 
            -0.29634719451357766}, {-0.06030205038415557, 
            -0.13739260297290964}, {0.029485017126598092, 
            0.1773676036178184}, {-0.15495869495874917, 0.0867887821552371}, 
           {0.11193746862579237, -0.19698866308522484}, {-0.3065504860028151, 
            0.13012353111867433}, {-0.11965488356474883, 0.3050161464667733}, 
           {0.10564954667261647, -0.1266275833498646}, {0.07116332595411712, 
            0.0871237838242374}, {0.18783942321959243, -0.12715674891910167}, 
           {0.05153634997134482, 0.04860954207049552}, {-0.1095759641862616, 
            0.12289444067809865}, {0.04902962419575388, 0.06073689304108018}, 
           {0.10492710057277932, 0.04729038516661387}, {-0.15343275228119813, 
            0.27448059779862716}, {0.24879094976132135, 
            0.027205269147550507}, {-0.15116107290073047, 
            -0.23466226654114533}, {-0.16779879195116323, 
            -0.0015568202351119078}, {-0.06849155112118543, 
            -0.062465674570145964}, {0.0665053448876869, 
            0.07042462314412146}, {-0.35670250594117764, 
            -0.028678480226359843}, {0.2820610681662536, 
            -0.21939642422393285}, {-0.24116771093087913, 
            0.2774806009722207}, {0.26845374135749606, 0.004438492772850677}, 
           {0.06241763719510077, -0.05397687851160985}, {-0.3419251283058585, 
            0.029655606849070683}, {-0.04990692026287413, 
            0.26348519583047114}, {0.34037222441499854, 
            -0.12567924824628987}, {0.08795844184284755, 
            0.25742970002738313}, {-0.3435446319833173, 
            -0.13018426687923434}}]]|>, 
     "7bdb2f83-0227-44a0-a6ba-cc60256bcc48" -> 
      <|"Public" -> Hold[Graphics[{RGBColor[0.922526, 0.385626, 0.209179], 
           PointSize[0.03], Inset[HeatMap[{{0.023320691144357506, 
               0.3496656032278339}, {0.052714045019209864, 
               -0.20274059579422332}, {-0.10469121934929984, 
               -0.1845407396211145}, {0.16325389255569245, 
               0.024889837351293503}, {0.14754024441721503, 
               -0.18405056100795272}, {0.09834792358944676, 
               -0.1161106886977636}, {-0.24569191175124916, 
               -0.004641419750329271}, {0.0585211799905391, 
               0.054608638664291304}, {0.12659902392045147, 
               -0.12495504813112966}, {0.00416930723259413, 
               0.1716905142758561}, {-0.2580560541238151, 
               -0.22919644391012556}, {-0.1094913060168414, 
               0.04768526912770411}, {0.019959075507645557, 
               -0.20220698562106065}, {0.10445667136297931, 
               -0.08139242920876685}, {0.05720695314597411, 
               0.13249924950012143}, {0.3115686188558119, 
               -0.09271040288814636}, {-0.29314809177578666, 
               0.06765894722217478}, {0.3171252538545289, 
               0.0530293310688979}, {-0.14291316225975176, 
               -0.02898615206385584}, {0.11934343267044602, 
               0.06867654193428739}, {0.16200872993671084, 
               0.08936639051898056}, {0.1939758113095629, 
               0.28283530911572985}, {-0.05109552316227061, 
               0.11743201545402004}, {-0.12268493208796384, 
               0.05863870807342417}, {-0.07628821637090238, 
               0.3266963890398341}, {0.3458490366905725, 
               0.06265478708295454}, {0.18252730830269667, 
               -0.04727774708613433}, {-0.3332146497840457, 
               -0.15118041179429856}, {0.16447673135719434, 
               -0.09443735670484299}, {0.0007575694517208509, 
               0.2504665597967007}, {0.04566243315573134, 
               -0.21575761104119404}, {0.06931581859230276, 
               0.059338953498551214}, {0.2449975871162055, 
               -0.24427889441310865}, {-0.07402080869489483, 
               -0.19211994532672125}, {0.11242129514560083, 
               0.052533698444759844}, {0.13172403375180294, 
               0.16482753426811347}, {-0.07029571531618267, 
               -0.09469137933633633}, {0.22493863850067847, 
               -0.020740137800502562}, {0.16156331811825386, 
               -0.11849063804146834}, {-0.21277646888469032, 
               0.27943646021523855}, {-0.2919544158543384, 
               0.02017010600925497}, {-0.2876073549129986, 
               0.06369515515108984}, {-0.09840566637228067, 
               -0.13006901540538204}, {-0.10714282692496428, 
               0.06500248728480863}, {0.08176272589866113, 
               -0.05234051297962481}, {0.14257276530260138, 
               -0.26421189829942393}, {0.0034062674686168772, 
               -0.2603505797359019}, {-0.09629209110826333, 
               0.13985954784195156}, {0.09233298508932901, 
               -0.05148137677782472}, {-0.2057437444577723, 
               0.10956867874066871}}, 4000, PlotRange -> {{-0.5, 0.5}, {-0.5, 
                0.5}}, ImageSize -> {344, 244}], {0, 0}], 
           Point[{{0.023320691144357506, 0.3496656032278339}, 
             {0.052714045019209864, -0.20274059579422332}, 
             {-0.10469121934929984, -0.1845407396211145}, 
             {0.16325389255569245, 0.024889837351293503}, 
             {0.14754024441721503, -0.18405056100795272}, 
             {0.09834792358944676, -0.1161106886977636}, 
             {-0.24569191175124916, -0.004641419750329271}, 
             {0.0585211799905391, 0.054608638664291304}, 
             {0.12659902392045147, -0.12495504813112966}, 
             {0.00416930723259413, 0.1716905142758561}, {-0.2580560541238151, 
              -0.22919644391012556}, {-0.1094913060168414, 
              0.04768526912770411}, {0.019959075507645557, 
              -0.20220698562106065}, {0.10445667136297931, 
              -0.08139242920876685}, {0.05720695314597411, 
              0.13249924950012143}, {0.3115686188558119, 
              -0.09271040288814636}, {-0.29314809177578666, 
              0.06765894722217478}, {0.3171252538545289, 0.0530293310688979}, 
             {-0.14291316225975176, -0.02898615206385584}, 
             {0.11934343267044602, 0.06867654193428739}, 
             {0.16200872993671084, 0.08936639051898056}, {0.1939758113095629, 
              0.28283530911572985}, {-0.05109552316227061, 
              0.11743201545402004}, {-0.12268493208796384, 
              0.05863870807342417}, {-0.07628821637090238, 
              0.3266963890398341}, {0.3458490366905725, 0.06265478708295454}, 
             {0.18252730830269667, -0.04727774708613433}, 
             {-0.3332146497840457, -0.15118041179429856}, 
             {0.16447673135719434, -0.09443735670484299}, 
             {0.0007575694517208509, 0.2504665597967007}, 
             {0.04566243315573134, -0.21575761104119404}, 
             {0.06931581859230276, 0.059338953498551214}, 
             {0.2449975871162055, -0.24427889441310865}, 
             {-0.07402080869489483, -0.19211994532672125}, 
             {0.11242129514560083, 0.052533698444759844}, 
             {0.13172403375180294, 0.16482753426811347}, 
             {-0.07029571531618267, -0.09469137933633633}, 
             {0.22493863850067847, -0.020740137800502562}, 
             {0.16156331811825386, -0.11849063804146834}, 
             {-0.21277646888469032, 0.27943646021523855}, 
             {-0.2919544158543384, 0.02017010600925497}, 
             {-0.2876073549129986, 0.06369515515108984}, 
             {-0.09840566637228067, -0.13006901540538204}, 
             {-0.10714282692496428, 0.06500248728480863}, 
             {0.08176272589866113, -0.05234051297962481}, 
             {0.14257276530260138, -0.26421189829942393}, 
             {0.0034062674686168772, -0.2603505797359019}, 
             {-0.09629209110826333, 0.13985954784195156}, 
             {0.09233298508932901, -0.05148137677782472}, 
             {-0.2057437444577723, 0.10956867874066871}}]}, 
          PlotRange -> {{-0.5, 0.5}, {-0.5, 0.5}}, ImageSize -> {420, 320}, 
          ImagePadding -> 30, Frame -> True, Axes -> True]]|>, 
     "7ef439b3-8fe6-4931-b1c1-bc133abce56a" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"relative shrink-0 gap-y-3 \
pb-2 flex flex-col sm-controls\"><div class=\"flex gap-x-5 \
sm-controls\"><label for=\"default-range\" class=\"block mb-2 text-sm \
font-medium text-gray-900\"></label><input min=\"0\" max=\"264\" step=\"1\" \
value=\"0\" id=\"n-#instanceId\" type=\"number\" class=\"ml-auto h-2 grow \
max-w-60 block p-2.5 text-xs text-gray-900 bg-gray-50 rounded-md \
border-2-gray-50 border border-gray-300 focus:ring-blue-500 \
focus:border-blue-500\"></input></div><input min=\"0\" max=\"264\" step=\"1\" \
value=\"0\" id=\"r-#instanceId\" type=\"range\" class=\"sm-controls w-full \
h-1 bg-gray-200 rounded-lg appearance-none cursor-pointer \
\"></input></div>\n<script type=\"module\"> const num = \
document.getElementById('n-#instanceId');\n        const ran = \
document.getElementById('r-#instanceId');\n\n        let harpticQ = true;\n\n \
       function isNumber(value) { return typeof value === 'number'}\n\n       \
 num.addEventListener('input', (event)=> {\n            if (isNaN(num.value)) \
return;\n            ran.value = num.value;\n            \
server.kernel.io.fire('d756430f-5796-4fdb-8b7e-e32b9d21c434', \
Number(num.value), 'Default');      \n        });\n\n        \
ran.addEventListener('input', (event)=> {\n            if (isNaN(ran.value)) \
return;\n            num.value = ran.value;\n            \
server.kernel.io.fire('d756430f-5796-4fdb-8b7e-e32b9d21c434', \
Number(ran.value), 'Default');   \n            if (harpticQ) {\n              \
  if (!window.electronAPI) {harpticQ = false; return}\n                if \
(!window.electronAPI.harptic) {harpticQ = false; return}\n                \
window.electronAPI.harptic();\n            }               \n        \
});</script>", Prolog -> 
           CoffeeLiqueur`Extensions`InputsOutputs`Tools`TemplateProcessor[
            Association["instanceId" -> CreateUUID[]]]]]|>|>, 
   "Path" -> "/users/kirill/Github/wljs-demos-archive/Demos/Javascript \
bindings/D - Heatmap GPUjs.wln", "PublicFields" -> {"Properties"}, 
   "Quick" -> True, "Symbols" -> 
    <|"points" -> JSObject[0.13664286300767275[-0.5374785491773012][
        (-1.1736176074390245)[-0.7335318965266359], 0.3672395630911195[
         -1.2714612279509099], 0.400961308062421[-0.75662622913973], 
        1.1063910544561426[-0.1729490578328627], (-0.7367473915481366)[
         -0.4413045413689147], 1.4020942225235589[-0.12091526437292148], 
        1.1140398421233693[0.24436759166277422], (-1.012694070044027)[
         0.7474695088543036], 1.5205604353751065[0.08094718233950664], 
        (-1.1887105173460983)[-0.49988986582501305], 0.0008229938032784353[
         -1.338357094095821], (-1.0860396005176653)[-0.18369144432853224], 
        1.4999991665257266[0.08748610923815472], (-0.5453230397153727)[
         0.5067574862692251], (-1.38738131288593)[0.9270958510364157], 
        (-1.0153338103174814)[-1.208553816922661], (-0.7251809557643522)[
         0.1470383783505789], (-0.6483446293478621)[0.21835328965127948], 
        (-0.7830534252482149)[-1.0721668283144097], 1.1417595723451162[
         -1.1985635562959216], (-0.9755348601546773)[1.0323510364862822], 
        0.43888780702332[-0.6665265384891075], 1.4730513674326422[
         -0.015581519380639024], 1.1780478384638462[0.3840252468695693], 
        (-1.5852146025820701)[0.5505190108065018], (-0.6938299957093736)[
         -1.1108522267394645], 1.3888872598881246[-0.8851404424412536], 
        0.7135718451052275[-0.819750982489159], (-0.5715021358924214)[
         1.2709107928326464], (-1.177802976526729)[0.23508448160480575], 
        0.31351116941719925[-0.7389392368221628], 0.11770866006925841[
         0.9499394140771943], 0.9835673049524026[0.8515788120780452], 
        (-0.8511884390078319)[0.5578319658990363], 1.1188034850898003[
         -1.0935943498189327], (-1.1514707507526696)[0.5024127037615398], 
        0.6379184285536654[0.5852731739777874], 0.6275813824162119[
         -0.6626663260488685], 0.18782751276577223[-1.5185959789586743], 
        0.8566122456612121[1.3411870473595935], 0.9389249138648332[
         1.5451209174694478], (-0.14542030305186296)[0.8708738178994928], 
        1.4671480975335138[-1.0081636400188199], (-0.18650866603001776)[
         -0.9920971666044933], (-0.6254210663134366)[1.5840850937477577], 
        (-0.658083788428138)[0.14796460917125193], 0.9647230191182536[
         0.8912023239079259], (-1.0911779399463342)[-0.13197338590293953], 
        (-0.6901029371393715)[0.6997420137501168], (-0.38046857059905625)[
         0.868315650582781], 0.08625843522204228[-0.6073858685557871], 
        (-0.6158915711660881)[-0.30945441188397016], (-1.3558465355760956)[
         1.121221507569918], 0.6233636048003074[-0.6090454401281483], 
        0.8932309345998042[-0.6088320343077669], (-0.7241818299240134)[
         -0.3707684826575238], 0.9931039751755071[0.6685310707173996], 
        0.937897982715696[0.8127088215606513], (-1.1041762225532321)[
         -0.13243831241421578], 1.1571864892353703[1.1465787302926307], 
        0.31887931312451195[0.7403180565122225], 1.046753703217086[
         -0.19543943545378017], 0.5158366469217266[0.241549905009203], 
        (-1.2250904682179766)[1.3964167738485518], 1.4568395327079606[
         -1.159820184792315], (-0.4399572923997487)[-1.1473974541601213], 
        0.4995362617742226[1.3430606124818887], 0.8199701518687059[
         -0.45606820894218225], (-1.015523014513645)[-1.4095407620970328], 
        0.9944531425921609[-1.2278821260304895], (-1.098498799390622)[
         -0.464738390768537], 0.48653434595082684[-0.9673279807203077], 
        0.8171826069854569[-0.6978197164117288], (-0.9083849453890741)[
         -0.7613080037553703], (-0.8883028043752618)[-0.45701812569985406], 
        (-0.5279352993288636)[0.2026664068225947], 1.4726889294618464[
         0.7548670816582028], 1.5634858159195153[1.331078679113161], 
        (-0.9576401100181131)[1.030375853550337], (-0.6111859062453512)[
         1.4766336273911955], 1.2587922646341438[0.9108583451363497], 
        1.2891480986114439[1.0967530696015717], (-1.2110764824080558)[
         -1.1838045366872014], (-0.3727154743980657)[0.6888301265159013], 
        (-0.6346983232815888)[1.252799459759545], (-0.8398254404667097)[
         -0.7929918735873421], (-1.1072543056213784)[-1.132711143829827], 
        (-0.39419045276871656)[1.3258283553895522], (-1.1847459253305976)[
         0.25282904239312814], 0.08803368817126156[0.9878306278550744], 
        1.1110924236521045[-1.5906997010567054], (-0.6415935417277061)[
         0.17670976993921841], (-1.2272634828376978)[0.8785395706660343], 
        1.3864897989660188[-0.5166870629848722], (-0.11627347753149103)[
         1.0784785033334445], (-0.589404535716069)[-1.4708302405666112], 
        1.2707314297705161[-1.2769191406938316], (-1.3155553131072948)[
         0.6365080037753834], 1.3223365494053216[0.6959006046568164]]]|>, 
   "TOC" -> {CoffeeLiqueur`Extensions`TOC`Private`heading[1, 
      "Heatmap using GPU.js", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$219]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Building common module (optional)", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$219]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Compute shaders", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$223]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Output form", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$228]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Test", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$232]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Integration with Graphics", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$237]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Make it dynamic", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$242]]}, 
   "ZIPArchive" -> "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"|>, 
 "Cells" -> {<|"Data" -> ".md\n# Heatmap using GPU.js\nIn this notebook, we \
use the Javascript framework [GPU.js](https://gpu.rocks/) to compile custom \
WebGL shaders to render and animate the heatmap together with normal Wolfram \
Language graphics primitives.\n\n*All dependencies are kept within this \
notebook and do not require installation or compilation.*\n\n## Building \
common module (optional)\nWe build a simple module, which will hook up a \
CommonJS module to a global variable so that we can continue experimenting \
with compute shader code without needing to rebuild the whole thing.", 
    "Display" -> "codemirror", "Hash" -> 
     "1f2d8e9b-d861-4931-9dd6-97ef5f6cd183", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "# Heatmap using GPU.js\nIn this notebook, we use the \
Javascript framework [GPU.js](https://gpu.rocks/) to compile custom WebGL \
shaders to render and animate the heatmap together with normal Wolfram \
Language graphics primitives.\n\n*All dependencies are kept within this \
notebook and do not require installation or compilation.*\n\n## Building \
common module (optional)\nWe build a simple module, which will hook up a \
CommonJS module to a global variable so that we can continue experimenting \
with compute shader code without needing to rebuild the whole thing.", 
    "Display" -> "markdown", "Hash" -> 
     "0d0dd858-4da7-4025-b171-d8c5e30321e2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".esm\nwindow.gpuJS = require('./js/gpu.js');", 
    "Display" -> "codemirror", "Hash" -> 
     "26bb517b-e1de-446a-8048-59c47db04f83", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "var __getOwnPropNames = Object.getOwnPropertyNames;\nvar \
__require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? \
require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => \
(typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  \
if (typeof require !== \"undefined\") return require.apply(this, \
arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not \
supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  \
return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} \
}).exports, mod), mod.exports;\n};\n\n// js/gpu.js\nvar require_gpu = \
__commonJS({\n  \"js/gpu.js\"(exports, module) {\n    !function(e) {\n      \
if (\"object\" == typeof exports && \"undefined\" != typeof module) \
module.exports = e();\n      else if (\"function\" == typeof define && \
define.amd) define([], e);\n      else {\n        (\"undefined\" != typeof \
window ? window : \"undefined\" != typeof global ? global : \"undefined\" != \
typeof self ? self : this).GPU = e();\n      }\n    }(function() {\n      \
return function e(t, r, n) {\n        function i(a2, o) {\n          if \
(!r[a2]) {\n            if (!t[a2]) {\n              var u = \"function\" == \
typeof __require && __require;\n              if (!o && u) return u(a2, \
true);\n              if (s) return s(a2, true);\n              var l = new \
Error(\"Cannot find module '\" + a2 + \"'\");\n              throw l.code = \
\"MODULE_NOT_FOUND\", l;\n            }\n            var h = r[a2] = { \
exports: {} };\n            t[a2][0].call(h.exports, function(e2) {\n         \
     return i(t[a2][1][e2] || e2);\n            }, h, h.exports, e, t, r, \
n);\n          }\n          return r[a2].exports;\n        }\n        for \
(var s = \"function\" == typeof __require && __require, a = 0; a < n.length; \
a++) i(n[a]);\n        return i;\n      }({ 1: [function(e, t, r) {\n        \
!function(e2, n) {\n          \"object\" == typeof r && void 0 !== t ? n(r) : \
n((e2 = \"undefined\" != typeof globalThis ? globalThis : e2 || self).acorn = \
{});\n        }(this, function(e2) {\n          \"use strict\";\n          \
var t2 = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, \
166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, \
14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, \
0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, \
1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, \
2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, \
16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, \
2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, \
15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, \
0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, \
5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, \
0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, \
5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, \
2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, \
13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239], r2 = \
[0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, \
48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, \
39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, \
310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, \
22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, \
2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, \
111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, \
28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, \
24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, \
24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, \
2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, \
45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, \
42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, \
16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, \
20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, \
0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, \
103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, \
1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, \
63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, \
6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, \
8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, \
3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, \
24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, \
147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, \
2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, \
3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, \
0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, \
2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, \
1507, 4938, 6, 4191], n = \
\"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\\
u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\
\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\\
u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u06\
20-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u\
06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07E\
A\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0\
860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093\
D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\\
u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF\
-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0\
A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\\
u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0\
AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\\
u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3\
D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u\
0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\
\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\\
u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E\
-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u\
0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\
\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\\
u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E4\
0-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\\
u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40\
-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\\
u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A\
0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\
\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u\
12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u13\
10\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\
\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\\
u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1\
780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\
\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\\
u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1\
BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\
\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\\
u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F\
45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\
\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u\
1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u209\
0-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u\
2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C0\
0-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\\
u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2D\
B8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005\
-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\
\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\\
u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA\
60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\
\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\u\
A7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA8\
73\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\
\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\u\
A9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA\
7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\\
uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uA\
B16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE\
2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\
\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\\
uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50\
-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\
\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\\
uFFD7\\uFFDA-\\uFFDC\", i = { 3: \"abstract boolean byte char class double \
enum export extends final float goto implements import int interface long \
native package private protected public short static super synchronized \
throws transient volatile\", 5: \"class enum extends super const export \
import\", 6: \"enum\", strict: \"implements interface let package private \
protected public static yield\", strictBind: \"eval arguments\" }, s = \
\"break case catch continue debugger default do else finally for function if \
return switch throw try var while with null true false instanceof typeof void \
delete new in this\", a = { 5: s, \"5module\": s + \" export import\", 6: s + \
\" const class extends export import super\" }, o = /^in(stanceof)?$/, u = \
new RegExp(\"[\" + n + \"]\"), l = new RegExp(\"[\" + n + \
\"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u0\
5BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\\
u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u07\
11\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\
\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\\
u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0\
957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\
\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0\
A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\
\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u\
0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B4\
4\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u\
0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C0\
0-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\\
u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0C\
C8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\\
u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D6\
2\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\\
u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E5\
0-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\\
u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\
\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\\
u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u1\
08D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u173\
4\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u\
180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D\
0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\
\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\\
u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1\
BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE\
8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2\
054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\
\\u302A-\\u302F\\u3099\\u309A\\u30FB\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA\
69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\u\
A881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA9\
2D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\
\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uA\
AB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\\
uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE2\
0-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\\uFF65]\");\n    \
      function h(e3, t3) {\n            for (var r3 = 65536, n2 = 0; n2 < \
t3.length; n2 += 2) {\n              if ((r3 += t3[n2]) > e3) return false;\n \
             if ((r3 += t3[n2 + 1]) >= e3) return true;\n            }\n      \
      return false;\n          }\n          function c(e3, t3) {\n            \
return e3 < 65 ? 36 === e3 : e3 < 91 || (e3 < 97 ? 95 === e3 : e3 < 123 || \
(e3 <= 65535 ? e3 >= 170 && u.test(String.fromCharCode(e3)) : false !== t3 && \
h(e3, r2)));\n          }\n          function p(e3, n2) {\n            return \
e3 < 48 ? 36 === e3 : e3 < 58 || !(e3 < 65) && (e3 < 91 || (e3 < 97 ? 95 === \
e3 : e3 < 123 || (e3 <= 65535 ? e3 >= 170 && l.test(String.fromCharCode(e3)) \
: false !== n2 && (h(e3, r2) || h(e3, t2)))));\n          }\n          var d \
= function(e3, t3) {\n            void 0 === t3 && (t3 = {}), this.label = \
e3, this.keyword = t3.keyword, this.beforeExpr = !!t3.beforeExpr, \
this.startsExpr = !!t3.startsExpr, this.isLoop = !!t3.isLoop, this.isAssign = \
!!t3.isAssign, this.prefix = !!t3.prefix, this.postfix = !!t3.postfix, \
this.binop = t3.binop || null, this.updateContext = null;\n          };\n     \
     function m(e3, t3) {\n            return new d(e3, { beforeExpr: true, \
binop: t3 });\n          }\n          var f = { beforeExpr: true }, g = { \
startsExpr: true }, x = {};\n          function y(e3, t3) {\n            \
return void 0 === t3 && (t3 = {}), t3.keyword = e3, x[e3] = new d(e3, t3);\n  \
        }\n          var b = { num: new d(\"num\", g), regexp: new \
d(\"regexp\", g), string: new d(\"string\", g), name: new d(\"name\", g), \
privateId: new d(\"privateId\", g), eof: new d(\"eof\"), bracketL: new \
d(\"[\", { beforeExpr: true, startsExpr: true }), bracketR: new d(\"]\"), \
braceL: new d(\"{\", { beforeExpr: true, startsExpr: true }), braceR: new \
d(\"}\"), parenL: new d(\"(\", { beforeExpr: true, startsExpr: true }), \
parenR: new d(\")\"), comma: new d(\",\", f), semi: new d(\";\", f), colon: \
new d(\":\", f), dot: new d(\".\"), question: new d(\"?\", f), questionDot: \
new d(\"?.\"), arrow: new d(\"=>\", f), template: new d(\"template\"), \
invalidTemplate: new d(\"invalidTemplate\"), ellipsis: new d(\"...\", f), \
backQuote: new d(\"`\", g), dollarBraceL: new d(\"${\", { beforeExpr: true, \
startsExpr: true }), eq: new d(\"=\", { beforeExpr: true, isAssign: true }), \
assign: new d(\"_=\", { beforeExpr: true, isAssign: true }), incDec: new \
d(\"++/--\", { prefix: true, postfix: true, startsExpr: true }), prefix: new \
d(\"!/~\", { beforeExpr: true, prefix: true, startsExpr: true }), logicalOR: \
m(\"||\", 1), logicalAND: m(\"&&\", 2), bitwiseOR: m(\"|\", 3), bitwiseXOR: \
m(\"^\", 4), bitwiseAND: m(\"&\", 5), equality: m(\"==/!=/===/!==\", 6), \
relational: m(\"</>/<=/>=\", 7), bitShift: m(\"<</>>/>>>\", 8), plusMin: new \
d(\"+/-\", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }), \
modulo: m(\"%\", 10), star: m(\"*\", 10), slash: m(\"/\", 10), starstar: new \
d(\"**\", { beforeExpr: true }), coalesce: m(\"??\", 1), _break: \
y(\"break\"), _case: y(\"case\", f), _catch: y(\"catch\"), _continue: \
y(\"continue\"), _debugger: y(\"debugger\"), _default: y(\"default\", f), \
_do: y(\"do\", { isLoop: true, beforeExpr: true }), _else: y(\"else\", f), \
_finally: y(\"finally\"), _for: y(\"for\", { isLoop: true }), _function: \
y(\"function\", g), _if: y(\"if\"), _return: y(\"return\", f), _switch: \
y(\"switch\"), _throw: y(\"throw\", f), _try: y(\"try\"), _var: y(\"var\"), \
_const: y(\"const\"), _while: y(\"while\", { isLoop: true }), _with: \
y(\"with\"), _new: y(\"new\", { beforeExpr: true, startsExpr: true }), _this: \
y(\"this\", g), _super: y(\"super\", g), _class: y(\"class\", g), _extends: \
y(\"extends\", f), _export: y(\"export\"), _import: y(\"import\", g), _null: \
y(\"null\", g), _true: y(\"true\", g), _false: y(\"false\", g), _in: \
y(\"in\", { beforeExpr: true, binop: 7 }), _instanceof: y(\"instanceof\", { \
beforeExpr: true, binop: 7 }), _typeof: y(\"typeof\", { beforeExpr: true, \
prefix: true, startsExpr: true }), _void: y(\"void\", { beforeExpr: true, \
prefix: true, startsExpr: true }), _delete: y(\"delete\", { beforeExpr: true, \
prefix: true, startsExpr: true }) }, T = /\\r\\n?|\\n|\\u2028|\\u2029/, v = \
new RegExp(T.source, \"g\");\n          function S(e3) {\n            return \
10 === e3 || 13 === e3 || 8232 === e3 || 8233 === e3;\n          }\n          \
function A(e3, t3, r3) {\n            void 0 === r3 && (r3 = e3.length);\n    \
        for (var n2 = t3; n2 < r3; n2++) {\n              var i2 = \
e3.charCodeAt(n2);\n              if (S(i2)) return n2 < r3 - 1 && 13 === i2 \
&& 10 === e3.charCodeAt(n2 + 1) ? n2 + 2 : n2 + 1;\n            }\n           \
 return -1;\n          }\n          var _ = \
/[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/, E = \
/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g, w = Object.prototype, k = \
w.hasOwnProperty, I = w.toString, D = Object.hasOwn || function(e3, t3) {\n   \
         return k.call(e3, t3);\n          }, C = Array.isArray || \
function(e3) {\n            return \"[object Array]\" === I.call(e3);\n       \
   }, $ = /* @__PURE__ */ Object.create(null);\n          function L(e3) {\n  \
          return $[e3] || ($[e3] = new RegExp(\"^(?:\" + e3.replace(/ /g, \
\"|\") + \")$\"));\n          }\n          function R(e3) {\n            \
return e3 <= 65535 ? String.fromCharCode(e3) : (e3 -= 65536, \
String.fromCharCode(55296 + (e3 >> 10), 56320 + (1023 & e3)));\n          }\n \
         var F = \
/(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\
\\uDFFF])/, N = function(e3, t3) {\n            this.line = e3, this.column = \
t3;\n          };\n          N.prototype.offset = function(e3) {\n            \
return new N(this.line, this.column + e3);\n          };\n          var V = \
function(e3, t3, r3) {\n            this.start = t3, this.end = r3, null !== \
e3.sourceFile && (this.source = e3.sourceFile);\n          };\n          \
function M(e3, t3) {\n            for (var r3 = 1, n2 = 0; ; ) {\n            \
  var i2 = A(e3, n2, t3);\n              if (i2 < 0) return new N(r3, t3 - \
n2);\n              ++r3, n2 = i2;\n            }\n          }\n          var \
O = { ecmaVersion: null, sourceType: \"script\", onInsertedSemicolon: null, \
onTrailingComma: null, allowReserved: null, allowReturnOutsideFunction: \
false, allowImportExportEverywhere: false, allowAwaitOutsideFunction: null, \
allowSuperOutsideMethod: null, allowHashBang: false, checkPrivateFields: \
true, locations: false, onToken: null, onComment: null, ranges: false, \
program: null, sourceFile: null, directSourceFile: null, preserveParens: \
false }, z = false;\n          function P(e3) {\n            var t3 = {};\n   \
         for (var r3 in O) t3[r3] = e3 && D(e3, r3) ? e3[r3] : O[r3];\n       \
     if (\"latest\" === t3.ecmaVersion ? t3.ecmaVersion = 1e8 : null == \
t3.ecmaVersion ? (!z && \"object\" == typeof console && console.warn && (z = \
true, console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is \
required.\\nDefaulting to 2020, but this will stop working in the \
future.\")), t3.ecmaVersion = 11) : t3.ecmaVersion >= 2015 && (t3.ecmaVersion \
-= 2009), null == t3.allowReserved && (t3.allowReserved = t3.ecmaVersion < \
5), e3 && null != e3.allowHashBang || (t3.allowHashBang = t3.ecmaVersion >= \
14), C(t3.onToken)) {\n              var n2 = t3.onToken;\n              \
t3.onToken = function(e4) {\n                return n2.push(e4);\n            \
  };\n            }\n            return C(t3.onComment) && (t3.onComment = /* \
@__PURE__ */ function(e4, t4) {\n              return function(r4, n3, i2, \
s2, a2, o2) {\n                var u2 = { type: r4 ? \"Block\" : \"Line\", \
value: n3, start: i2, end: s2 };\n                e4.locations && (u2.loc = \
new V(this, a2, o2)), e4.ranges && (u2.range = [i2, s2]), t4.push(u2);\n      \
        };\n            }(t3, t3.onComment)), t3;\n          }\n          var \
K = 256;\n          function G(e3, t3) {\n            return 2 | (e3 ? 4 : 0) \
| (t3 ? 8 : 0);\n          }\n          var U = function(e3, t3, r3) {\n      \
      this.options = e3 = P(e3), this.sourceFile = e3.sourceFile, \
this.keywords = L(a[e3.ecmaVersion >= 6 ? 6 : \"module\" === e3.sourceType ? \
\"5module\" : 5]);\n            var n2 = \"\";\n            true !== \
e3.allowReserved && (n2 = i[e3.ecmaVersion >= 6 ? 6 : 5 === e3.ecmaVersion ? \
5 : 3], \"module\" === e3.sourceType && (n2 += \" await\")), \
this.reservedWords = L(n2);\n            var s2 = (n2 ? n2 + \" \" : \"\") + \
i.strict;\n            this.reservedWordsStrict = L(s2), \
this.reservedWordsStrictBind = L(s2 + \" \" + i.strictBind), this.input = \
String(t3), this.containsEsc = false, r3 ? (this.pos = r3, this.lineStart = \
this.input.lastIndexOf(\"\\n\", r3 - 1) + 1, this.curLine = \
this.input.slice(0, this.lineStart).split(T).length) : (this.pos = \
this.lineStart = 0, this.curLine = 1), this.type = b.eof, this.value = null, \
this.start = this.end = this.pos, this.startLoc = this.endLoc = \
this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, \
this.lastTokStart = this.lastTokEnd = this.pos, this.context = \
this.initialContext(), this.exprAllowed = true, this.inModule = \"module\" \
=== e3.sourceType, this.strict = this.inModule || \
this.strictDirective(this.pos), this.potentialArrowAt = -1, \
this.potentialArrowInForAwait = false, this.yieldPos = this.awaitPos = \
this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* \
@__PURE__ */ Object.create(null), 0 === this.pos && e3.allowHashBang && \
\"#!\" === this.input.slice(0, 2) && this.skipLineComment(2), this.scopeStack \
= [], this.enterScope(1), this.regexpState = null, this.privateNameStack = \
[];\n          }, B = { inFunction: { configurable: true }, inGenerator: { \
configurable: true }, inAsync: { configurable: true }, canAwait: { \
configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { \
configurable: true }, treatFunctionsAsVar: { configurable: true }, \
allowNewDotTarget: { configurable: true }, inClassStaticBlock: { \
configurable: true } };\n          U.prototype.parse = function() {\n         \
   var e3 = this.options.program || this.startNode();\n            return \
this.nextToken(), this.parseTopLevel(e3);\n          }, B.inFunction.get = \
function() {\n            return (2 & this.currentVarScope().flags) > 0;\n    \
      }, B.inGenerator.get = function() {\n            return (8 & \
this.currentVarScope().flags) > 0 && \
!this.currentVarScope().inClassFieldInit;\n          }, B.inAsync.get = \
function() {\n            return (4 & this.currentVarScope().flags) > 0 && \
!this.currentVarScope().inClassFieldInit;\n          }, B.canAwait.get = \
function() {\n            for (var e3 = this.scopeStack.length - 1; e3 >= 0; \
e3--) {\n              var t3 = this.scopeStack[e3];\n              if \
(t3.inClassFieldInit || t3.flags & K) return false;\n              if (2 & \
t3.flags) return (4 & t3.flags) > 0;\n            }\n            return \
this.inModule && this.options.ecmaVersion >= 13 || \
this.options.allowAwaitOutsideFunction;\n          }, B.allowSuper.get = \
function() {\n            var e3 = this.currentThisScope(), t3 = e3.flags, r3 \
= e3.inClassFieldInit;\n            return (64 & t3) > 0 || r3 || \
this.options.allowSuperOutsideMethod;\n          }, B.allowDirectSuper.get = \
function() {\n            return (128 & this.currentThisScope().flags) > 0;\n \
         }, B.treatFunctionsAsVar.get = function() {\n            return \
this.treatFunctionsAsVarInScope(this.currentScope());\n          }, \
B.allowNewDotTarget.get = function() {\n            var e3 = \
this.currentThisScope(), t3 = e3.flags, r3 = e3.inClassFieldInit;\n           \
 return (258 & t3) > 0 || r3;\n          }, B.inClassStaticBlock.get = \
function() {\n            return (this.currentVarScope().flags & K) > 0;\n    \
      }, U.extend = function() {\n            for (var e3 = [], t3 = \
arguments.length; t3--; ) e3[t3] = arguments[t3];\n            for (var r3 = \
this, n2 = 0; n2 < e3.length; n2++) r3 = e3[n2](r3);\n            return \
r3;\n          }, U.parse = function(e3, t3) {\n            return new \
this(t3, e3).parse();\n          }, U.parseExpressionAt = function(e3, t3, \
r3) {\n            var n2 = new this(r3, e3, t3);\n            return \
n2.nextToken(), n2.parseExpression();\n          }, U.tokenizer = \
function(e3, t3) {\n            return new this(t3, e3);\n          }, \
Object.defineProperties(U.prototype, B);\n          var W = U.prototype, j = \
/^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\n          \
W.strictDirective = function(e3) {\n            if (this.options.ecmaVersion \
< 5) return false;\n            for (; ; ) {\n              E.lastIndex = e3, \
e3 += E.exec(this.input)[0].length;\n              var t3 = \
j.exec(this.input.slice(e3));\n              if (!t3) return false;\n         \
     if (\"use strict\" === (t3[1] || t3[2])) {\n                E.lastIndex \
= e3 + t3[0].length;\n                var r3 = E.exec(this.input), n2 = \
r3.index + r3[0].length, i2 = this.input.charAt(n2);\n                return \
\";\" === i2 || \"}\" === i2 || T.test(r3[0]) && \
!(/[(`.[+\\-/*%<>=,?^&]/.test(i2) || \"!\" === i2 && \"=\" === \
this.input.charAt(n2 + 1));\n              }\n              e3 += \
t3[0].length, E.lastIndex = e3, e3 += E.exec(this.input)[0].length, \";\" === \
this.input[e3] && e3++;\n            }\n          }, W.eat = function(e3) {\n \
           return this.type === e3 && (this.next(), true);\n          }, \
W.isContextual = function(e3) {\n            return this.type === b.name && \
this.value === e3 && !this.containsEsc;\n          }, W.eatContextual = \
function(e3) {\n            return !!this.isContextual(e3) && (this.next(), \
true);\n          }, W.expectContextual = function(e3) {\n            \
this.eatContextual(e3) || this.unexpected();\n          }, \
W.canInsertSemicolon = function() {\n            return this.type === b.eof \
|| this.type === b.braceR || T.test(this.input.slice(this.lastTokEnd, \
this.start));\n          }, W.insertSemicolon = function() {\n            if \
(this.canInsertSemicolon()) return this.options.onInsertedSemicolon && \
this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), \
true;\n          }, W.semicolon = function() {\n            this.eat(b.semi) \
|| this.insertSemicolon() || this.unexpected();\n          }, \
W.afterTrailingComma = function(e3, t3) {\n            if (this.type === e3) \
return this.options.onTrailingComma && \
this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), t3 || \
this.next(), true;\n          }, W.expect = function(e3) {\n            \
this.eat(e3) || this.unexpected();\n          }, W.unexpected = function(e3) \
{\n            this.raise(null != e3 ? e3 : this.start, \"Unexpected \
token\");\n          };\n          var H = function() {\n            \
this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = \
this.parenthesizedBind = this.doubleProto = -1;\n          };\n          \
W.checkPatternErrors = function(e3, t3) {\n            if (e3) {\n            \
  e3.trailingComma > -1 && this.raiseRecoverable(e3.trailingComma, \"Comma is \
not permitted after the rest element\");\n              var r3 = t3 ? \
e3.parenthesizedAssign : e3.parenthesizedBind;\n              r3 > -1 && \
this.raiseRecoverable(r3, t3 ? \"Assigning to rvalue\" : \"Parenthesized \
pattern\");\n            }\n          }, W.checkExpressionErrors = \
function(e3, t3) {\n            if (!e3) return false;\n            var r3 = \
e3.shorthandAssign, n2 = e3.doubleProto;\n            if (!t3) return r3 >= 0 \
|| n2 >= 0;\n            r3 >= 0 && this.raise(r3, \"Shorthand property \
assignments are valid only in destructuring patterns\"), n2 >= 0 && \
this.raiseRecoverable(n2, \"Redefinition of __proto__ property\");\n          \
}, W.checkYieldAwaitInDefaultParams = function() {\n            this.yieldPos \
&& (!this.awaitPos || this.yieldPos < this.awaitPos) && \
this.raise(this.yieldPos, \"Yield expression cannot be a default value\"), \
this.awaitPos && this.raise(this.awaitPos, \"Await expression cannot be a \
default value\");\n          }, W.isSimpleAssignTarget = function(e3) {\n     \
       return \"ParenthesizedExpression\" === e3.type ? \
this.isSimpleAssignTarget(e3.expression) : \"Identifier\" === e3.type || \
\"MemberExpression\" === e3.type;\n          };\n          var X = \
U.prototype;\n          X.parseTopLevel = function(e3) {\n            var t3 \
= /* @__PURE__ */ Object.create(null);\n            for (e3.body || (e3.body \
= []); this.type !== b.eof; ) {\n              var r3 = \
this.parseStatement(null, true, t3);\n              e3.body.push(r3);\n       \
     }\n            if (this.inModule) for (var n2 = 0, i2 = \
Object.keys(this.undefinedExports); n2 < i2.length; n2 += 1) {\n              \
var s2 = i2[n2];\n              \
this.raiseRecoverable(this.undefinedExports[s2].start, \"Export '\" + s2 + \
\"' is not defined\");\n            }\n            return \
this.adaptDirectivePrologue(e3.body), this.next(), e3.sourceType = \
this.options.sourceType, this.finishNode(e3, \"Program\");\n          };\n    \
      var q = { kind: \"loop\" }, Y = { kind: \"switch\" };\n          \
X.isLet = function(e3) {\n            if (this.options.ecmaVersion < 6 || \
!this.isContextual(\"let\")) return false;\n            E.lastIndex = \
this.pos;\n            var t3 = E.exec(this.input), r3 = this.pos + \
t3[0].length, n2 = this.input.charCodeAt(r3);\n            if (91 === n2 || \
92 === n2) return true;\n            if (e3) return false;\n            if \
(123 === n2 || n2 > 55295 && n2 < 56320) return true;\n            if (c(n2, \
true)) {\n              for (var i2 = r3 + 1; p(n2 = \
this.input.charCodeAt(i2), true); ) ++i2;\n              if (92 === n2 || n2 \
> 55295 && n2 < 56320) return true;\n              var s2 = \
this.input.slice(r3, i2);\n              if (!o.test(s2)) return true;\n      \
      }\n            return false;\n          }, X.isAsyncFunction = \
function() {\n            if (this.options.ecmaVersion < 8 || \
!this.isContextual(\"async\")) return false;\n            E.lastIndex = \
this.pos;\n            var e3, t3 = E.exec(this.input), r3 = this.pos + \
t3[0].length;\n            return !(T.test(this.input.slice(this.pos, r3)) || \
\"function\" !== this.input.slice(r3, r3 + 8) || r3 + 8 !== this.input.length \
&& (p(e3 = this.input.charCodeAt(r3 + 8)) || e3 > 55295 && e3 < 56320));\n    \
      }, X.parseStatement = function(e3, t3, r3) {\n            var n2, i2 = \
this.type, s2 = this.startNode();\n            switch (this.isLet(e3) && (i2 \
= b._var, n2 = \"let\"), i2) {\n              case b._break:\n              \
case b._continue:\n                return \
this.parseBreakContinueStatement(s2, i2.keyword);\n              case \
b._debugger:\n                return this.parseDebuggerStatement(s2);\n       \
       case b._do:\n                return this.parseDoStatement(s2);\n       \
       case b._for:\n                return this.parseForStatement(s2);\n     \
         case b._function:\n                return e3 && (this.strict || \
\"if\" !== e3 && \"label\" !== e3) && this.options.ecmaVersion >= 6 && \
this.unexpected(), this.parseFunctionStatement(s2, false, !e3);\n             \
 case b._class:\n                return e3 && this.unexpected(), \
this.parseClass(s2, true);\n              case b._if:\n                return \
this.parseIfStatement(s2);\n              case b._return:\n                \
return this.parseReturnStatement(s2);\n              case b._switch:\n        \
        return this.parseSwitchStatement(s2);\n              case b._throw:\n \
               return this.parseThrowStatement(s2);\n              case \
b._try:\n                return this.parseTryStatement(s2);\n              \
case b._const:\n              case b._var:\n                return n2 = n2 || \
this.value, e3 && \"var\" !== n2 && this.unexpected(), \
this.parseVarStatement(s2, n2);\n              case b._while:\n               \
 return this.parseWhileStatement(s2);\n              case b._with:\n          \
      return this.parseWithStatement(s2);\n              case b.braceL:\n     \
           return this.parseBlock(true, s2);\n              case b.semi:\n    \
            return this.parseEmptyStatement(s2);\n              case \
b._export:\n              case b._import:\n                if \
(this.options.ecmaVersion > 10 && i2 === b._import) {\n                  \
E.lastIndex = this.pos;\n                  var a2 = E.exec(this.input), o2 = \
this.pos + a2[0].length, u2 = this.input.charCodeAt(o2);\n                  \
if (40 === u2 || 46 === u2) return this.parseExpressionStatement(s2, \
this.parseExpression());\n                }\n                return \
this.options.allowImportExportEverywhere || (t3 || this.raise(this.start, \
\"'import' and 'export' may only appear at the top level\"), this.inModule || \
this.raise(this.start, \"'import' and 'export' may appear only with \
'sourceType: module'\")), i2 === b._import ? this.parseImport(s2) : \
this.parseExport(s2, r3);\n              default:\n                if \
(this.isAsyncFunction()) return e3 && this.unexpected(), this.next(), \
this.parseFunctionStatement(s2, true, !e3);\n                var l2 = \
this.value, h2 = this.parseExpression();\n                return i2 === \
b.name && \"Identifier\" === h2.type && this.eat(b.colon) ? \
this.parseLabeledStatement(s2, l2, h2, e3) : \
this.parseExpressionStatement(s2, h2);\n            }\n          }, \
X.parseBreakContinueStatement = function(e3, t3) {\n            var r3 = \
\"break\" === t3;\n            this.next(), this.eat(b.semi) || \
this.insertSemicolon() ? e3.label = null : this.type !== b.name ? \
this.unexpected() : (e3.label = this.parseIdent(), this.semicolon());\n       \
     for (var n2 = 0; n2 < this.labels.length; ++n2) {\n              var i2 \
= this.labels[n2];\n              if (null == e3.label || i2.name === \
e3.label.name) {\n                if (null != i2.kind && (r3 || \"loop\" === \
i2.kind)) break;\n                if (e3.label && r3) break;\n              \
}\n            }\n            return n2 === this.labels.length && \
this.raise(e3.start, \"Unsyntactic \" + t3), this.finishNode(e3, r3 ? \
\"BreakStatement\" : \"ContinueStatement\");\n          }, \
X.parseDebuggerStatement = function(e3) {\n            return this.next(), \
this.semicolon(), this.finishNode(e3, \"DebuggerStatement\");\n          }, \
X.parseDoStatement = function(e3) {\n            return this.next(), \
this.labels.push(q), e3.body = this.parseStatement(\"do\"), \
this.labels.pop(), this.expect(b._while), e3.test = \
this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(b.semi) \
: this.semicolon(), this.finishNode(e3, \"DoWhileStatement\");\n          }, \
X.parseForStatement = function(e3) {\n            this.next();\n            \
var t3 = this.options.ecmaVersion >= 9 && this.canAwait && \
this.eatContextual(\"await\") ? this.lastTokStart : -1;\n            if \
(this.labels.push(q), this.enterScope(0), this.expect(b.parenL), this.type \
=== b.semi) return t3 > -1 && this.unexpected(t3), this.parseFor(e3, null);\n \
           var r3 = this.isLet();\n            if (this.type === b._var || \
this.type === b._const || r3) {\n              var n2 = this.startNode(), i2 \
= r3 ? \"let\" : this.value;\n              return this.next(), \
this.parseVar(n2, true, i2), this.finishNode(n2, \"VariableDeclaration\"), \
(this.type === b._in || this.options.ecmaVersion >= 6 && \
this.isContextual(\"of\")) && 1 === n2.declarations.length ? \
(this.options.ecmaVersion >= 9 && (this.type === b._in ? t3 > -1 && \
this.unexpected(t3) : e3.await = t3 > -1), this.parseForIn(e3, n2)) : (t3 > \
-1 && this.unexpected(t3), this.parseFor(e3, n2));\n            }\n           \
 var s2 = this.isContextual(\"let\"), a2 = false, o2 = this.containsEsc, u2 = \
new H(), l2 = this.start, h2 = t3 > -1 ? this.parseExprSubscripts(u2, \
\"await\") : this.parseExpression(true, u2);\n            return this.type \
=== b._in || (a2 = this.options.ecmaVersion >= 6 && \
this.isContextual(\"of\")) ? (t3 > -1 ? (this.type === b._in && \
this.unexpected(t3), e3.await = true) : a2 && this.options.ecmaVersion >= 8 \
&& (h2.start !== l2 || o2 || \"Identifier\" !== h2.type || \"async\" !== \
h2.name ? this.options.ecmaVersion >= 9 && (e3.await = false) : \
this.unexpected()), s2 && a2 && this.raise(h2.start, \"The left-hand side of \
a for-of loop may not start with 'let'.\"), this.toAssignable(h2, false, u2), \
this.checkLValPattern(h2), this.parseForIn(e3, h2)) : \
(this.checkExpressionErrors(u2, true), t3 > -1 && this.unexpected(t3), \
this.parseFor(e3, h2));\n          }, X.parseFunctionStatement = function(e3, \
t3, r3) {\n            return this.next(), this.parseFunction(e3, J | (r3 ? 0 \
: Q), false, t3);\n          }, X.parseIfStatement = function(e3) {\n         \
   return this.next(), e3.test = this.parseParenExpression(), e3.consequent = \
this.parseStatement(\"if\"), e3.alternate = this.eat(b._else) ? \
this.parseStatement(\"if\") : null, this.finishNode(e3, \"IfStatement\");\n   \
       }, X.parseReturnStatement = function(e3) {\n            return \
this.inFunction || this.options.allowReturnOutsideFunction || \
this.raise(this.start, \"'return' outside of function\"), this.next(), \
this.eat(b.semi) || this.insertSemicolon() ? e3.argument = null : \
(e3.argument = this.parseExpression(), this.semicolon()), this.finishNode(e3, \
\"ReturnStatement\");\n          }, X.parseSwitchStatement = function(e3) {\n \
           var t3;\n            this.next(), e3.discriminant = \
this.parseParenExpression(), e3.cases = [], this.expect(b.braceL), \
this.labels.push(Y), this.enterScope(0);\n            for (var r3 = false; \
this.type !== b.braceR; ) if (this.type === b._case || this.type === \
b._default) {\n              var n2 = this.type === b._case;\n              \
t3 && this.finishNode(t3, \"SwitchCase\"), e3.cases.push(t3 = \
this.startNode()), t3.consequent = [], this.next(), n2 ? t3.test = \
this.parseExpression() : (r3 && this.raiseRecoverable(this.lastTokStart, \
\"Multiple default clauses\"), r3 = true, t3.test = null), \
this.expect(b.colon);\n            } else t3 || this.unexpected(), \
t3.consequent.push(this.parseStatement(null));\n            return \
this.exitScope(), t3 && this.finishNode(t3, \"SwitchCase\"), this.next(), \
this.labels.pop(), this.finishNode(e3, \"SwitchStatement\");\n          }, \
X.parseThrowStatement = function(e3) {\n            return this.next(), \
T.test(this.input.slice(this.lastTokEnd, this.start)) && \
this.raise(this.lastTokEnd, \"Illegal newline after throw\"), e3.argument = \
this.parseExpression(), this.semicolon(), this.finishNode(e3, \
\"ThrowStatement\");\n          };\n          var Z = [];\n          \
X.parseCatchClauseParam = function() {\n            var e3 = \
this.parseBindingAtom(), t3 = \"Identifier\" === e3.type;\n            return \
this.enterScope(t3 ? 32 : 0), this.checkLValPattern(e3, t3 ? 4 : 2), \
this.expect(b.parenR), e3;\n          }, X.parseTryStatement = function(e3) \
{\n            if (this.next(), e3.block = this.parseBlock(), e3.handler = \
null, this.type === b._catch) {\n              var t3 = this.startNode();\n   \
           this.next(), this.eat(b.parenL) ? t3.param = \
this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && \
this.unexpected(), t3.param = null, this.enterScope(0)), t3.body = \
this.parseBlock(false), this.exitScope(), e3.handler = this.finishNode(t3, \
\"CatchClause\");\n            }\n            return e3.finalizer = \
this.eat(b._finally) ? this.parseBlock() : null, e3.handler || e3.finalizer \
|| this.raise(e3.start, \"Missing catch or finally clause\"), \
this.finishNode(e3, \"TryStatement\");\n          }, X.parseVarStatement = \
function(e3, t3, r3) {\n            return this.next(), this.parseVar(e3, \
false, t3, r3), this.semicolon(), this.finishNode(e3, \
\"VariableDeclaration\");\n          }, X.parseWhileStatement = function(e3) \
{\n            return this.next(), e3.test = this.parseParenExpression(), \
this.labels.push(q), e3.body = this.parseStatement(\"while\"), \
this.labels.pop(), this.finishNode(e3, \"WhileStatement\");\n          }, \
X.parseWithStatement = function(e3) {\n            return this.strict && \
this.raise(this.start, \"'with' in strict mode\"), this.next(), e3.object = \
this.parseParenExpression(), e3.body = this.parseStatement(\"with\"), \
this.finishNode(e3, \"WithStatement\");\n          }, X.parseEmptyStatement = \
function(e3) {\n            return this.next(), this.finishNode(e3, \
\"EmptyStatement\");\n          }, X.parseLabeledStatement = function(e3, t3, \
r3, n2) {\n            for (var i2 = 0, s2 = this.labels; i2 < s2.length; i2 \
+= 1) {\n              s2[i2].name === t3 && this.raise(r3.start, \"Label '\" \
+ t3 + \"' is already declared\");\n            }\n            for (var a2 = \
this.type.isLoop ? \"loop\" : this.type === b._switch ? \"switch\" : null, o2 \
= this.labels.length - 1; o2 >= 0; o2--) {\n              var u2 = \
this.labels[o2];\n              if (u2.statementStart !== e3.start) break;\n  \
            u2.statementStart = this.start, u2.kind = a2;\n            }\n    \
        return this.labels.push({ name: t3, kind: a2, statementStart: \
this.start }), e3.body = this.parseStatement(n2 ? -1 === \
n2.indexOf(\"label\") ? n2 + \"label\" : n2 : \"label\"), this.labels.pop(), \
e3.label = r3, this.finishNode(e3, \"LabeledStatement\");\n          }, \
X.parseExpressionStatement = function(e3, t3) {\n            return \
e3.expression = t3, this.semicolon(), this.finishNode(e3, \
\"ExpressionStatement\");\n          }, X.parseBlock = function(e3, t3, r3) \
{\n            for (void 0 === e3 && (e3 = true), void 0 === t3 && (t3 = \
this.startNode()), t3.body = [], this.expect(b.braceL), e3 && \
this.enterScope(0); this.type !== b.braceR; ) {\n              var n2 = \
this.parseStatement(null);\n              t3.body.push(n2);\n            }\n  \
          return r3 && (this.strict = false), this.next(), e3 && \
this.exitScope(), this.finishNode(t3, \"BlockStatement\");\n          }, \
X.parseFor = function(e3, t3) {\n            return e3.init = t3, \
this.expect(b.semi), e3.test = this.type === b.semi ? null : \
this.parseExpression(), this.expect(b.semi), e3.update = this.type === \
b.parenR ? null : this.parseExpression(), this.expect(b.parenR), e3.body = \
this.parseStatement(\"for\"), this.exitScope(), this.labels.pop(), \
this.finishNode(e3, \"ForStatement\");\n          }, X.parseForIn = \
function(e3, t3) {\n            var r3 = this.type === b._in;\n            \
return this.next(), \"VariableDeclaration\" === t3.type && null != \
t3.declarations[0].init && (!r3 || this.options.ecmaVersion < 8 || \
this.strict || \"var\" !== t3.kind || \"Identifier\" !== \
t3.declarations[0].id.type) && this.raise(t3.start, (r3 ? \"for-in\" : \
\"for-of\") + \" loop variable declaration may not have an initializer\"), \
e3.left = t3, e3.right = r3 ? this.parseExpression() : \
this.parseMaybeAssign(), this.expect(b.parenR), e3.body = \
this.parseStatement(\"for\"), this.exitScope(), this.labels.pop(), \
this.finishNode(e3, r3 ? \"ForInStatement\" : \"ForOfStatement\");\n          \
}, X.parseVar = function(e3, t3, r3, n2) {\n            for (e3.declarations \
= [], e3.kind = r3; ; ) {\n              var i2 = this.startNode();\n         \
     if (this.parseVarId(i2, r3), this.eat(b.eq) ? i2.init = \
this.parseMaybeAssign(t3) : n2 || \"const\" !== r3 || this.type === b._in || \
this.options.ecmaVersion >= 6 && this.isContextual(\"of\") ? n2 || \
\"Identifier\" === i2.id.type || t3 && (this.type === b._in || \
this.isContextual(\"of\")) ? i2.init = null : this.raise(this.lastTokEnd, \
\"Complex binding patterns require an initialization value\") : \
this.unexpected(), e3.declarations.push(this.finishNode(i2, \
\"VariableDeclarator\")), !this.eat(b.comma)) break;\n            }\n         \
   return e3;\n          }, X.parseVarId = function(e3, t3) {\n            \
e3.id = this.parseBindingAtom(), this.checkLValPattern(e3.id, \"var\" === t3 \
? 1 : 2, false);\n          };\n          var J = 1, Q = 2;\n          \
function ee(e3, t3) {\n            var r3 = t3.key.name, n2 = e3[r3], i2 = \
\"true\";\n            return \"MethodDefinition\" !== t3.type || \"get\" !== \
t3.kind && \"set\" !== t3.kind || (i2 = (t3.static ? \"s\" : \"i\") + \
t3.kind), \"iget\" === n2 && \"iset\" === i2 || \"iset\" === n2 && \"iget\" \
=== i2 || \"sget\" === n2 && \"sset\" === i2 || \"sset\" === n2 && \"sget\" \
=== i2 ? (e3[r3] = \"true\", false) : !!n2 || (e3[r3] = i2, false);\n         \
 }\n          function te(e3, t3) {\n            var r3 = e3.computed, n2 = \
e3.key;\n            return !r3 && (\"Identifier\" === n2.type && n2.name === \
t3 || \"Literal\" === n2.type && n2.value === t3);\n          }\n          \
X.parseFunction = function(e3, t3, r3, n2, i2) {\n            \
this.initFunction(e3), (this.options.ecmaVersion >= 9 || \
this.options.ecmaVersion >= 6 && !n2) && (this.type === b.star && t3 & Q && \
this.unexpected(), e3.generator = this.eat(b.star)), this.options.ecmaVersion \
>= 8 && (e3.async = !!n2), t3 & J && (e3.id = 4 & t3 && this.type !== b.name \
? null : this.parseIdent(), !e3.id || t3 & Q || this.checkLValSimple(e3.id, \
this.strict || e3.generator || e3.async ? this.treatFunctionsAsVar ? 1 : 2 : \
3));\n            var s2 = this.yieldPos, a2 = this.awaitPos, o2 = \
this.awaitIdentPos;\n            return this.yieldPos = 0, this.awaitPos = 0, \
this.awaitIdentPos = 0, this.enterScope(G(e3.async, e3.generator)), t3 & J || \
(e3.id = this.type === b.name ? this.parseIdent() : null), \
this.parseFunctionParams(e3), this.parseFunctionBody(e3, r3, false, i2), \
this.yieldPos = s2, this.awaitPos = a2, this.awaitIdentPos = o2, \
this.finishNode(e3, t3 & J ? \"FunctionDeclaration\" : \
\"FunctionExpression\");\n          }, X.parseFunctionParams = function(e3) \
{\n            this.expect(b.parenL), e3.params = \
this.parseBindingList(b.parenR, false, this.options.ecmaVersion >= 8), \
this.checkYieldAwaitInDefaultParams();\n          }, X.parseClass = \
function(e3, t3) {\n            this.next();\n            var r3 = \
this.strict;\n            this.strict = true, this.parseClassId(e3, t3), \
this.parseClassSuper(e3);\n            var n2 = this.enterClassBody(), i2 = \
this.startNode(), s2 = false;\n            for (i2.body = [], \
this.expect(b.braceL); this.type !== b.braceR; ) {\n              var a2 = \
this.parseClassElement(null !== e3.superClass);\n              a2 && \
(i2.body.push(a2), \"MethodDefinition\" === a2.type && \"constructor\" === \
a2.kind ? (s2 && this.raiseRecoverable(a2.start, \"Duplicate constructor in \
the same class\"), s2 = true) : a2.key && \"PrivateIdentifier\" === \
a2.key.type && ee(n2, a2) && this.raiseRecoverable(a2.key.start, \"Identifier \
'#\" + a2.key.name + \"' has already been declared\"));\n            }\n      \
      return this.strict = r3, this.next(), e3.body = this.finishNode(i2, \
\"ClassBody\"), this.exitClassBody(), this.finishNode(e3, t3 ? \
\"ClassDeclaration\" : \"ClassExpression\");\n          }, \
X.parseClassElement = function(e3) {\n            if (this.eat(b.semi)) \
return null;\n            var t3 = this.options.ecmaVersion, r3 = \
this.startNode(), n2 = \"\", i2 = false, s2 = false, a2 = \"method\", o2 = \
false;\n            if (this.eatContextual(\"static\")) {\n              if \
(t3 >= 13 && this.eat(b.braceL)) return this.parseClassStaticBlock(r3), r3;\n \
             this.isClassElementNameStart() || this.type === b.star ? o2 = \
true : n2 = \"static\";\n            }\n            if (r3.static = o2, !n2 \
&& t3 >= 8 && this.eatContextual(\"async\") && \
(!this.isClassElementNameStart() && this.type !== b.star || \
this.canInsertSemicolon() ? n2 = \"async\" : s2 = true), !n2 && (t3 >= 9 || \
!s2) && this.eat(b.star) && (i2 = true), !n2 && !s2 && !i2) {\n              \
var u2 = this.value;\n              (this.eatContextual(\"get\") || \
this.eatContextual(\"set\")) && (this.isClassElementNameStart() ? a2 = u2 : \
n2 = u2);\n            }\n            if (n2 ? (r3.computed = false, r3.key = \
this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), r3.key.name = n2, \
this.finishNode(r3.key, \"Identifier\")) : this.parseClassElementName(r3), t3 \
< 13 || this.type === b.parenL || \"method\" !== a2 || i2 || s2) {\n          \
    var l2 = !r3.static && te(r3, \"constructor\"), h2 = l2 && e3;\n          \
    l2 && \"method\" !== a2 && this.raise(r3.key.start, \"Constructor can't \
have get/set modifier\"), r3.kind = l2 ? \"constructor\" : a2, \
this.parseClassMethod(r3, i2, s2, h2);\n            } else \
this.parseClassField(r3);\n            return r3;\n          }, \
X.isClassElementNameStart = function() {\n            return this.type === \
b.name || this.type === b.privateId || this.type === b.num || this.type === \
b.string || this.type === b.bracketL || this.type.keyword;\n          }, \
X.parseClassElementName = function(e3) {\n            this.type === \
b.privateId ? (\"constructor\" === this.value && this.raise(this.start, \
\"Classes can't have an element named '#constructor'\"), e3.computed = false, \
e3.key = this.parsePrivateIdent()) : this.parsePropertyName(e3);\n          \
}, X.parseClassMethod = function(e3, t3, r3, n2) {\n            var i2 = \
e3.key;\n            \"constructor\" === e3.kind ? (t3 && \
this.raise(i2.start, \"Constructor can't be a generator\"), r3 && \
this.raise(i2.start, \"Constructor can't be an async method\")) : e3.static \
&& te(e3, \"prototype\") && this.raise(i2.start, \"Classes may not have a \
static property named prototype\");\n            var s2 = e3.value = \
this.parseMethod(t3, r3, n2);\n            return \"get\" === e3.kind && 0 \
!== s2.params.length && this.raiseRecoverable(s2.start, \"getter should have \
no params\"), \"set\" === e3.kind && 1 !== s2.params.length && \
this.raiseRecoverable(s2.start, \"setter should have exactly one param\"), \
\"set\" === e3.kind && \"RestElement\" === s2.params[0].type && \
this.raiseRecoverable(s2.params[0].start, \"Setter cannot use rest params\"), \
this.finishNode(e3, \"MethodDefinition\");\n          }, X.parseClassField = \
function(e3) {\n            if (te(e3, \"constructor\") ? \
this.raise(e3.key.start, \"Classes can't have a field named 'constructor'\") \
: e3.static && te(e3, \"prototype\") && this.raise(e3.key.start, \"Classes \
can't have a static field named 'prototype'\"), this.eat(b.eq)) {\n           \
   var t3 = this.currentThisScope(), r3 = t3.inClassFieldInit;\n              \
t3.inClassFieldInit = true, e3.value = this.parseMaybeAssign(), \
t3.inClassFieldInit = r3;\n            } else e3.value = null;\n            \
return this.semicolon(), this.finishNode(e3, \"PropertyDefinition\");\n       \
   }, X.parseClassStaticBlock = function(e3) {\n            e3.body = [];\n   \
         var t3 = this.labels;\n            for (this.labels = [], \
this.enterScope(320); this.type !== b.braceR; ) {\n              var r3 = \
this.parseStatement(null);\n              e3.body.push(r3);\n            }\n  \
          return this.next(), this.exitScope(), this.labels = t3, \
this.finishNode(e3, \"StaticBlock\");\n          }, X.parseClassId = \
function(e3, t3) {\n            this.type === b.name ? (e3.id = \
this.parseIdent(), t3 && this.checkLValSimple(e3.id, 2, false)) : (true === \
t3 && this.unexpected(), e3.id = null);\n          }, X.parseClassSuper = \
function(e3) {\n            e3.superClass = this.eat(b._extends) ? \
this.parseExprSubscripts(null, false) : null;\n          }, X.enterClassBody \
= function() {\n            var e3 = { declared: /* @__PURE__ */ \
Object.create(null), used: [] };\n            return \
this.privateNameStack.push(e3), e3.declared;\n          }, X.exitClassBody = \
function() {\n            var e3 = this.privateNameStack.pop(), t3 = \
e3.declared, r3 = e3.used;\n            if (this.options.checkPrivateFields) \
for (var n2 = this.privateNameStack.length, i2 = 0 === n2 ? null : \
this.privateNameStack[n2 - 1], s2 = 0; s2 < r3.length; ++s2) {\n              \
var a2 = r3[s2];\n              D(t3, a2.name) || (i2 ? i2.used.push(a2) : \
this.raiseRecoverable(a2.start, \"Private field '#\" + a2.name + \"' must be \
declared in an enclosing class\"));\n            }\n          }, \
X.parseExportAllDeclaration = function(e3, t3) {\n            return \
this.options.ecmaVersion >= 11 && (this.eatContextual(\"as\") ? (e3.exported \
= this.parseModuleExportName(), this.checkExport(t3, e3.exported, \
this.lastTokStart)) : e3.exported = null), this.expectContextual(\"from\"), \
this.type !== b.string && this.unexpected(), e3.source = \
this.parseExprAtom(), this.options.ecmaVersion >= 16 && (e3.attributes = \
this.parseWithClause()), this.semicolon(), this.finishNode(e3, \
\"ExportAllDeclaration\");\n          }, X.parseExport = function(e3, t3) {\n \
           if (this.next(), this.eat(b.star)) return \
this.parseExportAllDeclaration(e3, t3);\n            if \
(this.eat(b._default)) return this.checkExport(t3, \"default\", \
this.lastTokStart), e3.declaration = this.parseExportDefaultDeclaration(), \
this.finishNode(e3, \"ExportDefaultDeclaration\");\n            if \
(this.shouldParseExportStatement()) e3.declaration = \
this.parseExportDeclaration(e3), \"VariableDeclaration\" === \
e3.declaration.type ? this.checkVariableExport(t3, \
e3.declaration.declarations) : this.checkExport(t3, e3.declaration.id, \
e3.declaration.id.start), e3.specifiers = [], e3.source = null;\n            \
else {\n              if (e3.declaration = null, e3.specifiers = \
this.parseExportSpecifiers(t3), this.eatContextual(\"from\")) this.type !== \
b.string && this.unexpected(), e3.source = this.parseExprAtom(), \
this.options.ecmaVersion >= 16 && (e3.attributes = this.parseWithClause());\n \
             else {\n                for (var r3 = 0, n2 = e3.specifiers; r3 \
< n2.length; r3 += 1) {\n                  var i2 = n2[r3];\n                 \
 this.checkUnreserved(i2.local), this.checkLocalExport(i2.local), \"Literal\" \
=== i2.local.type && this.raise(i2.local.start, \"A string literal cannot be \
used as an exported binding without `from`.\");\n                }\n          \
      e3.source = null;\n              }\n              this.semicolon();\n   \
         }\n            return this.finishNode(e3, \
\"ExportNamedDeclaration\");\n          }, X.parseExportDeclaration = \
function(e3) {\n            return this.parseStatement(null);\n          }, \
X.parseExportDefaultDeclaration = function() {\n            var e3;\n         \
   if (this.type === b._function || (e3 = this.isAsyncFunction())) {\n        \
      var t3 = this.startNode();\n              return this.next(), e3 && \
this.next(), this.parseFunction(t3, 4 | J, false, e3);\n            }\n       \
     if (this.type === b._class) {\n              var r3 = \
this.startNode();\n              return this.parseClass(r3, \
\"nullableID\");\n            }\n            var n2 = \
this.parseMaybeAssign();\n            return this.semicolon(), n2;\n          \
}, X.checkExport = function(e3, t3, r3) {\n            e3 && (\"string\" != \
typeof t3 && (t3 = \"Identifier\" === t3.type ? t3.name : t3.value), D(e3, \
t3) && this.raiseRecoverable(r3, \"Duplicate export '\" + t3 + \"'\"), e3[t3] \
= true);\n          }, X.checkPatternExport = function(e3, t3) {\n            \
var r3 = t3.type;\n            if (\"Identifier\" === r3) \
this.checkExport(e3, t3, t3.start);\n            else if (\"ObjectPattern\" \
=== r3) for (var n2 = 0, i2 = t3.properties; n2 < i2.length; n2 += 1) {\n     \
         var s2 = i2[n2];\n              this.checkPatternExport(e3, s2);\n   \
         }\n            else if (\"ArrayPattern\" === r3) for (var a2 = 0, o2 \
= t3.elements; a2 < o2.length; a2 += 1) {\n              var u2 = o2[a2];\n   \
           u2 && this.checkPatternExport(e3, u2);\n            }\n            \
else \"Property\" === r3 ? this.checkPatternExport(e3, t3.value) : \
\"AssignmentPattern\" === r3 ? this.checkPatternExport(e3, t3.left) : \
\"RestElement\" === r3 && this.checkPatternExport(e3, t3.argument);\n         \
 }, X.checkVariableExport = function(e3, t3) {\n            if (e3) for (var \
r3 = 0, n2 = t3; r3 < n2.length; r3 += 1) {\n              var i2 = n2[r3];\n \
             this.checkPatternExport(e3, i2.id);\n            }\n          }, \
X.shouldParseExportStatement = function() {\n            return \"var\" === \
this.type.keyword || \"const\" === this.type.keyword || \"class\" === \
this.type.keyword || \"function\" === this.type.keyword || this.isLet() || \
this.isAsyncFunction();\n          }, X.parseExportSpecifier = function(e3) \
{\n            var t3 = this.startNode();\n            return t3.local = \
this.parseModuleExportName(), t3.exported = this.eatContextual(\"as\") ? \
this.parseModuleExportName() : t3.local, this.checkExport(e3, t3.exported, \
t3.exported.start), this.finishNode(t3, \"ExportSpecifier\");\n          }, \
X.parseExportSpecifiers = function(e3) {\n            var t3 = [], r3 = \
true;\n            for (this.expect(b.braceL); !this.eat(b.braceR); ) {\n     \
         if (r3) r3 = false;\n              else if (this.expect(b.comma), \
this.afterTrailingComma(b.braceR)) break;\n              \
t3.push(this.parseExportSpecifier(e3));\n            }\n            return \
t3;\n          }, X.parseImport = function(e3) {\n            return \
this.next(), this.type === b.string ? (e3.specifiers = Z, e3.source = \
this.parseExprAtom()) : (e3.specifiers = this.parseImportSpecifiers(), \
this.expectContextual(\"from\"), e3.source = this.type === b.string ? \
this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >= 16 && \
(e3.attributes = this.parseWithClause()), this.semicolon(), \
this.finishNode(e3, \"ImportDeclaration\");\n          }, \
X.parseImportSpecifier = function() {\n            var e3 = \
this.startNode();\n            return e3.imported = \
this.parseModuleExportName(), this.eatContextual(\"as\") ? e3.local = \
this.parseIdent() : (this.checkUnreserved(e3.imported), e3.local = \
e3.imported), this.checkLValSimple(e3.local, 2), this.finishNode(e3, \
\"ImportSpecifier\");\n          }, X.parseImportDefaultSpecifier = \
function() {\n            var e3 = this.startNode();\n            return \
e3.local = this.parseIdent(), this.checkLValSimple(e3.local, 2), \
this.finishNode(e3, \"ImportDefaultSpecifier\");\n          }, \
X.parseImportNamespaceSpecifier = function() {\n            var e3 = \
this.startNode();\n            return this.next(), \
this.expectContextual(\"as\"), e3.local = this.parseIdent(), \
this.checkLValSimple(e3.local, 2), this.finishNode(e3, \
\"ImportNamespaceSpecifier\");\n          }, X.parseImportSpecifiers = \
function() {\n            var e3 = [], t3 = true;\n            if (this.type \
=== b.name && (e3.push(this.parseImportDefaultSpecifier()), \
!this.eat(b.comma))) return e3;\n            if (this.type === b.star) return \
e3.push(this.parseImportNamespaceSpecifier()), e3;\n            for \
(this.expect(b.braceL); !this.eat(b.braceR); ) {\n              if (t3) t3 = \
false;\n              else if (this.expect(b.comma), \
this.afterTrailingComma(b.braceR)) break;\n              \
e3.push(this.parseImportSpecifier());\n            }\n            return \
e3;\n          }, X.parseWithClause = function() {\n            var e3 = \
[];\n            if (!this.eat(b._with)) return e3;\n            \
this.expect(b.braceL);\n            for (var t3 = {}, r3 = true; \
!this.eat(b.braceR); ) {\n              if (r3) r3 = false;\n              \
else if (this.expect(b.comma), this.afterTrailingComma(b.braceR)) break;\n    \
          var n2 = this.parseImportAttribute(), i2 = \"Identifier\" === \
n2.key.type ? n2.key.name : n2.key.value;\n              D(t3, i2) && \
this.raiseRecoverable(n2.key.start, \"Duplicate attribute key '\" + i2 + \
\"'\"), t3[i2] = true, e3.push(n2);\n            }\n            return e3;\n  \
        }, X.parseImportAttribute = function() {\n            var e3 = \
this.startNode();\n            return e3.key = this.type === b.string ? \
this.parseExprAtom() : this.parseIdent(\"never\" !== \
this.options.allowReserved), this.expect(b.colon), this.type !== b.string && \
this.unexpected(), e3.value = this.parseExprAtom(), this.finishNode(e3, \
\"ImportAttribute\");\n          }, X.parseModuleExportName = function() {\n  \
          if (this.options.ecmaVersion >= 13 && this.type === b.string) {\n   \
           var e3 = this.parseLiteral(this.value);\n              return \
F.test(e3.value) && this.raise(e3.start, \"An export name cannot include a \
lone surrogate.\"), e3;\n            }\n            return \
this.parseIdent(true);\n          }, X.adaptDirectivePrologue = function(e3) \
{\n            for (var t3 = 0; t3 < e3.length && \
this.isDirectiveCandidate(e3[t3]); ++t3) e3[t3].directive = \
e3[t3].expression.raw.slice(1, -1);\n          }, X.isDirectiveCandidate = \
function(e3) {\n            return this.options.ecmaVersion >= 5 && \
\"ExpressionStatement\" === e3.type && \"Literal\" === e3.expression.type && \
\"string\" == typeof e3.expression.value && ('\"' === this.input[e3.start] || \
\"'\" === this.input[e3.start]);\n          };\n          var re = \
U.prototype;\n          re.toAssignable = function(e3, t3, r3) {\n            \
if (this.options.ecmaVersion >= 6 && e3) switch (e3.type) {\n              \
case \"Identifier\":\n                this.inAsync && \"await\" === e3.name \
&& this.raise(e3.start, \"Cannot use 'await' as identifier inside an async \
function\");\n                break;\n              case \"ObjectPattern\":\n \
             case \"ArrayPattern\":\n              case \
\"AssignmentPattern\":\n              case \"RestElement\":\n                \
break;\n              case \"ObjectExpression\":\n                e3.type = \
\"ObjectPattern\", r3 && this.checkPatternErrors(r3, true);\n                \
for (var n2 = 0, i2 = e3.properties; n2 < i2.length; n2 += 1) {\n             \
     var s2 = i2[n2];\n                  this.toAssignable(s2, t3), \
\"RestElement\" !== s2.type || \"ArrayPattern\" !== s2.argument.type && \
\"ObjectPattern\" !== s2.argument.type || this.raise(s2.argument.start, \
\"Unexpected token\");\n                }\n                break;\n           \
   case \"Property\":\n                \"init\" !== e3.kind && \
this.raise(e3.key.start, \"Object pattern can't contain getter or setter\"), \
this.toAssignable(e3.value, t3);\n                break;\n              case \
\"ArrayExpression\":\n                e3.type = \"ArrayPattern\", r3 && \
this.checkPatternErrors(r3, true), this.toAssignableList(e3.elements, t3);\n  \
              break;\n              case \"SpreadElement\":\n                \
e3.type = \"RestElement\", this.toAssignable(e3.argument, t3), \
\"AssignmentPattern\" === e3.argument.type && this.raise(e3.argument.start, \
\"Rest elements cannot have a default value\");\n                break;\n     \
         case \"AssignmentExpression\":\n                \"=\" !== \
e3.operator && this.raise(e3.left.end, \"Only '=' operator can be used for \
specifying default value.\"), e3.type = \"AssignmentPattern\", delete \
e3.operator, this.toAssignable(e3.left, t3);\n                break;\n        \
      case \"ParenthesizedExpression\":\n                \
this.toAssignable(e3.expression, t3, r3);\n                break;\n           \
   case \"ChainExpression\":\n                this.raiseRecoverable(e3.start, \
\"Optional chaining cannot appear in left-hand side\");\n                \
break;\n              case \"MemberExpression\":\n                if (!t3) \
break;\n              default:\n                this.raise(e3.start, \
\"Assigning to rvalue\");\n            }\n            else r3 && \
this.checkPatternErrors(r3, true);\n            return e3;\n          }, \
re.toAssignableList = function(e3, t3) {\n            for (var r3 = \
e3.length, n2 = 0; n2 < r3; n2++) {\n              var i2 = e3[n2];\n         \
     i2 && this.toAssignable(i2, t3);\n            }\n            if (r3) {\n \
             var s2 = e3[r3 - 1];\n              6 === \
this.options.ecmaVersion && t3 && s2 && \"RestElement\" === s2.type && \
\"Identifier\" !== s2.argument.type && this.unexpected(s2.argument.start);\n  \
          }\n            return e3;\n          }, re.parseSpread = \
function(e3) {\n            var t3 = this.startNode();\n            return \
this.next(), t3.argument = this.parseMaybeAssign(false, e3), \
this.finishNode(t3, \"SpreadElement\");\n          }, re.parseRestBinding = \
function() {\n            var e3 = this.startNode();\n            return \
this.next(), 6 === this.options.ecmaVersion && this.type !== b.name && \
this.unexpected(), e3.argument = this.parseBindingAtom(), this.finishNode(e3, \
\"RestElement\");\n          }, re.parseBindingAtom = function() {\n          \
  if (this.options.ecmaVersion >= 6) switch (this.type) {\n              case \
b.bracketL:\n                var e3 = this.startNode();\n                \
return this.next(), e3.elements = this.parseBindingList(b.bracketR, true, \
true), this.finishNode(e3, \"ArrayPattern\");\n              case b.braceL:\n \
               return this.parseObj(true);\n            }\n            return \
this.parseIdent();\n          }, re.parseBindingList = function(e3, t3, r3, \
n2) {\n            for (var i2 = [], s2 = true; !this.eat(e3); ) if (s2 ? s2 \
= false : this.expect(b.comma), t3 && this.type === b.comma) i2.push(null);\n \
           else {\n              if (r3 && this.afterTrailingComma(e3)) \
break;\n              if (this.type === b.ellipsis) {\n                var a2 \
= this.parseRestBinding();\n                this.parseBindingListItem(a2), \
i2.push(a2), this.type === b.comma && this.raiseRecoverable(this.start, \
\"Comma is not permitted after the rest element\"), this.expect(e3);\n        \
        break;\n              }\n              \
i2.push(this.parseAssignableListItem(n2));\n            }\n            return \
i2;\n          }, re.parseAssignableListItem = function(e3) {\n            \
var t3 = this.parseMaybeDefault(this.start, this.startLoc);\n            \
return this.parseBindingListItem(t3), t3;\n          }, \
re.parseBindingListItem = function(e3) {\n            return e3;\n          \
}, re.parseMaybeDefault = function(e3, t3, r3) {\n            if (r3 = r3 || \
this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(b.eq)) \
return r3;\n            var n2 = this.startNodeAt(e3, t3);\n            \
return n2.left = r3, n2.right = this.parseMaybeAssign(), this.finishNode(n2, \
\"AssignmentPattern\");\n          }, re.checkLValSimple = function(e3, t3, \
r3) {\n            void 0 === t3 && (t3 = 0);\n            var n2 = 0 !== \
t3;\n            switch (e3.type) {\n              case \"Identifier\":\n     \
           this.strict && this.reservedWordsStrictBind.test(e3.name) && \
this.raiseRecoverable(e3.start, (n2 ? \"Binding \" : \"Assigning to \") + \
e3.name + \" in strict mode\"), n2 && (2 === t3 && \"let\" === e3.name && \
this.raiseRecoverable(e3.start, \"let is disallowed as a lexically bound \
name\"), r3 && (D(r3, e3.name) && this.raiseRecoverable(e3.start, \"Argument \
name clash\"), r3[e3.name] = true), 5 !== t3 && this.declareName(e3.name, t3, \
e3.start));\n                break;\n              case \
\"ChainExpression\":\n                this.raiseRecoverable(e3.start, \
\"Optional chaining cannot appear in left-hand side\");\n                \
break;\n              case \"MemberExpression\":\n                n2 && \
this.raiseRecoverable(e3.start, \"Binding member expression\");\n             \
   break;\n              case \"ParenthesizedExpression\":\n                \
return n2 && this.raiseRecoverable(e3.start, \"Binding parenthesized \
expression\"), this.checkLValSimple(e3.expression, t3, r3);\n              \
default:\n                this.raise(e3.start, (n2 ? \"Binding\" : \
\"Assigning to\") + \" rvalue\");\n            }\n          }, \
re.checkLValPattern = function(e3, t3, r3) {\n            switch (void 0 === \
t3 && (t3 = 0), e3.type) {\n              case \"ObjectPattern\":\n           \
     for (var n2 = 0, i2 = e3.properties; n2 < i2.length; n2 += 1) {\n        \
          var s2 = i2[n2];\n                  this.checkLValInnerPattern(s2, \
t3, r3);\n                }\n                break;\n              case \
\"ArrayPattern\":\n                for (var a2 = 0, o2 = e3.elements; a2 < \
o2.length; a2 += 1) {\n                  var u2 = o2[a2];\n                  \
u2 && this.checkLValInnerPattern(u2, t3, r3);\n                }\n            \
    break;\n              default:\n                this.checkLValSimple(e3, \
t3, r3);\n            }\n          }, re.checkLValInnerPattern = function(e3, \
t3, r3) {\n            switch (void 0 === t3 && (t3 = 0), e3.type) {\n        \
      case \"Property\":\n                \
this.checkLValInnerPattern(e3.value, t3, r3);\n                break;\n       \
       case \"AssignmentPattern\":\n                \
this.checkLValPattern(e3.left, t3, r3);\n                break;\n             \
 case \"RestElement\":\n                this.checkLValPattern(e3.argument, \
t3, r3);\n                break;\n              default:\n                \
this.checkLValPattern(e3, t3, r3);\n            }\n          };\n          \
var ne = function(e3, t3, r3, n2, i2) {\n            this.token = e3, \
this.isExpr = !!t3, this.preserveSpace = !!r3, this.override = n2, \
this.generator = !!i2;\n          }, ie = { b_stat: new ne(\"{\", false), \
b_expr: new ne(\"{\", true), b_tmpl: new ne(\"${\", false), p_stat: new \
ne(\"(\", false), p_expr: new ne(\"(\", true), q_tmpl: new ne(\"`\", true, \
true, function(e3) {\n            return e3.tryReadTemplateToken();\n         \
 }), f_stat: new ne(\"function\", false), f_expr: new ne(\"function\", true), \
f_expr_gen: new ne(\"function\", true, false, null, true), f_gen: new \
ne(\"function\", false, false, null, true) }, se = U.prototype;\n          \
se.initialContext = function() {\n            return [ie.b_stat];\n          \
}, se.curContext = function() {\n            return \
this.context[this.context.length - 1];\n          }, se.braceIsBlock = \
function(e3) {\n            var t3 = this.curContext();\n            return \
t3 === ie.f_expr || t3 === ie.f_stat || (e3 !== b.colon || t3 !== ie.b_stat \
&& t3 !== ie.b_expr ? e3 === b._return || e3 === b.name && this.exprAllowed ? \
T.test(this.input.slice(this.lastTokEnd, this.start)) : e3 === b._else || e3 \
=== b.semi || e3 === b.eof || e3 === b.parenR || e3 === b.arrow || (e3 === \
b.braceL ? t3 === ie.b_stat : e3 !== b._var && e3 !== b._const && e3 !== \
b.name && !this.exprAllowed) : !t3.isExpr);\n          }, \
se.inGeneratorContext = function() {\n            for (var e3 = \
this.context.length - 1; e3 >= 1; e3--) {\n              var t3 = \
this.context[e3];\n              if (\"function\" === t3.token) return \
t3.generator;\n            }\n            return false;\n          }, \
se.updateContext = function(e3) {\n            var t3, r3 = this.type;\n      \
      r3.keyword && e3 === b.dot ? this.exprAllowed = false : (t3 = \
r3.updateContext) ? t3.call(this, e3) : this.exprAllowed = r3.beforeExpr;\n   \
       }, se.overrideContext = function(e3) {\n            this.curContext() \
!== e3 && (this.context[this.context.length - 1] = e3);\n          }, \
b.parenR.updateContext = b.braceR.updateContext = function() {\n            \
if (1 !== this.context.length) {\n              var e3 = \
this.context.pop();\n              e3 === ie.b_stat && \"function\" === \
this.curContext().token && (e3 = this.context.pop()), this.exprAllowed = \
!e3.isExpr;\n            } else this.exprAllowed = true;\n          }, \
b.braceL.updateContext = function(e3) {\n            \
this.context.push(this.braceIsBlock(e3) ? ie.b_stat : ie.b_expr), \
this.exprAllowed = true;\n          }, b.dollarBraceL.updateContext = \
function() {\n            this.context.push(ie.b_tmpl), this.exprAllowed = \
true;\n          }, b.parenL.updateContext = function(e3) {\n            var \
t3 = e3 === b._if || e3 === b._for || e3 === b._with || e3 === b._while;\n    \
        this.context.push(t3 ? ie.p_stat : ie.p_expr), this.exprAllowed = \
true;\n          }, b.incDec.updateContext = function() {\n          }, \
b._function.updateContext = b._class.updateContext = function(e3) {\n         \
   !e3.beforeExpr || e3 === b._else || e3 === b.semi && this.curContext() !== \
ie.p_stat || e3 === b._return && T.test(this.input.slice(this.lastTokEnd, \
this.start)) || (e3 === b.colon || e3 === b.braceL) && this.curContext() === \
ie.b_stat ? this.context.push(ie.f_stat) : this.context.push(ie.f_expr), \
this.exprAllowed = false;\n          }, b.colon.updateContext = function() \
{\n            \"function\" === this.curContext().token && \
this.context.pop(), this.exprAllowed = true;\n          }, \
b.backQuote.updateContext = function() {\n            this.curContext() === \
ie.q_tmpl ? this.context.pop() : this.context.push(ie.q_tmpl), \
this.exprAllowed = false;\n          }, b.star.updateContext = function(e3) \
{\n            if (e3 === b._function) {\n              var t3 = \
this.context.length - 1;\n              this.context[t3] === ie.f_expr ? \
this.context[t3] = ie.f_expr_gen : this.context[t3] = ie.f_gen;\n            \
}\n            this.exprAllowed = true;\n          }, b.name.updateContext = \
function(e3) {\n            var t3 = false;\n            \
this.options.ecmaVersion >= 6 && e3 !== b.dot && (\"of\" === this.value && \
!this.exprAllowed || \"yield\" === this.value && this.inGeneratorContext()) \
&& (t3 = true), this.exprAllowed = t3;\n          };\n          var ae = \
U.prototype;\n          function oe(e3) {\n            return \"Identifier\" \
=== e3.type || \"ParenthesizedExpression\" === e3.type && \
oe(e3.expression);\n          }\n          function ue(e3) {\n            \
return \"MemberExpression\" === e3.type && \"PrivateIdentifier\" === \
e3.property.type || \"ChainExpression\" === e3.type && ue(e3.expression) || \
\"ParenthesizedExpression\" === e3.type && ue(e3.expression);\n          }\n  \
        ae.checkPropClash = function(e3, t3, r3) {\n            if \
(!(this.options.ecmaVersion >= 9 && \"SpreadElement\" === e3.type || \
this.options.ecmaVersion >= 6 && (e3.computed || e3.method || e3.shorthand))) \
{\n              var n2, i2 = e3.key;\n              switch (i2.type) {\n     \
           case \"Identifier\":\n                  n2 = i2.name;\n            \
      break;\n                case \"Literal\":\n                  n2 = \
String(i2.value);\n                  break;\n                default:\n       \
           return;\n              }\n              var s2 = e3.kind;\n        \
      if (this.options.ecmaVersion >= 6) \"__proto__\" === n2 && \"init\" === \
s2 && (t3.proto && (r3 ? r3.doubleProto < 0 && (r3.doubleProto = i2.start) : \
this.raiseRecoverable(i2.start, \"Redefinition of __proto__ property\")), \
t3.proto = true);\n              else {\n                var a2 = t3[n2 = \
\"$\" + n2];\n                if (a2) (\"init\" === s2 ? this.strict && \
a2.init || a2.get || a2.set : a2.init || a2[s2]) && \
this.raiseRecoverable(i2.start, \"Redefinition of property\");\n              \
  else a2 = t3[n2] = { init: false, get: false, set: false };\n               \
 a2[s2] = true;\n              }\n            }\n          }, \
ae.parseExpression = function(e3, t3) {\n            var r3 = this.start, n2 \
= this.startLoc, i2 = this.parseMaybeAssign(e3, t3);\n            if \
(this.type === b.comma) {\n              var s2 = this.startNodeAt(r3, n2);\n \
             for (s2.expressions = [i2]; this.eat(b.comma); ) \
s2.expressions.push(this.parseMaybeAssign(e3, t3));\n              return \
this.finishNode(s2, \"SequenceExpression\");\n            }\n            \
return i2;\n          }, ae.parseMaybeAssign = function(e3, t3, r3) {\n       \
     if (this.isContextual(\"yield\")) {\n              if (this.inGenerator) \
return this.parseYield(e3);\n              this.exprAllowed = false;\n        \
    }\n            var n2 = false, i2 = -1, s2 = -1, a2 = -1;\n            t3 \
? (i2 = t3.parenthesizedAssign, s2 = t3.trailingComma, a2 = t3.doubleProto, \
t3.parenthesizedAssign = t3.trailingComma = -1) : (t3 = new H(), n2 = \
true);\n            var o2 = this.start, u2 = this.startLoc;\n            \
this.type !== b.parenL && this.type !== b.name || (this.potentialArrowAt = \
this.start, this.potentialArrowInForAwait = \"await\" === e3);\n            \
var l2 = this.parseMaybeConditional(e3, t3);\n            if (r3 && (l2 = \
r3.call(this, l2, o2, u2)), this.type.isAssign) {\n              var h2 = \
this.startNodeAt(o2, u2);\n              return h2.operator = this.value, \
this.type === b.eq && (l2 = this.toAssignable(l2, false, t3)), n2 || \
(t3.parenthesizedAssign = t3.trailingComma = t3.doubleProto = -1), \
t3.shorthandAssign >= l2.start && (t3.shorthandAssign = -1), this.type === \
b.eq ? this.checkLValPattern(l2) : this.checkLValSimple(l2), h2.left = l2, \
this.next(), h2.right = this.parseMaybeAssign(e3), a2 > -1 && (t3.doubleProto \
= a2), this.finishNode(h2, \"AssignmentExpression\");\n            }\n        \
    return n2 && this.checkExpressionErrors(t3, true), i2 > -1 && \
(t3.parenthesizedAssign = i2), s2 > -1 && (t3.trailingComma = s2), l2;\n      \
    }, ae.parseMaybeConditional = function(e3, t3) {\n            var r3 = \
this.start, n2 = this.startLoc, i2 = this.parseExprOps(e3, t3);\n            \
if (this.checkExpressionErrors(t3)) return i2;\n            if \
(this.eat(b.question)) {\n              var s2 = this.startNodeAt(r3, n2);\n  \
            return s2.test = i2, s2.consequent = this.parseMaybeAssign(), \
this.expect(b.colon), s2.alternate = this.parseMaybeAssign(e3), \
this.finishNode(s2, \"ConditionalExpression\");\n            }\n            \
return i2;\n          }, ae.parseExprOps = function(e3, t3) {\n            \
var r3 = this.start, n2 = this.startLoc, i2 = this.parseMaybeUnary(t3, false, \
false, e3);\n            return this.checkExpressionErrors(t3) || i2.start \
=== r3 && \"ArrowFunctionExpression\" === i2.type ? i2 : this.parseExprOp(i2, \
r3, n2, -1, e3);\n          }, ae.parseExprOp = function(e3, t3, r3, n2, i2) \
{\n            var s2 = this.type.binop;\n            if (null != s2 && (!i2 \
|| this.type !== b._in) && s2 > n2) {\n              var a2 = this.type === \
b.logicalOR || this.type === b.logicalAND, o2 = this.type === b.coalesce;\n   \
           o2 && (s2 = b.logicalAND.binop);\n              var u2 = \
this.value;\n              this.next();\n              var l2 = this.start, \
h2 = this.startLoc, c2 = this.parseExprOp(this.parseMaybeUnary(null, false, \
false, i2), l2, h2, s2, i2), p2 = this.buildBinary(t3, r3, e3, c2, u2, a2 || \
o2);\n              return (a2 && this.type === b.coalesce || o2 && \
(this.type === b.logicalOR || this.type === b.logicalAND)) && \
this.raiseRecoverable(this.start, \"Logical expressions and coalesce \
expressions cannot be mixed. Wrap either by parentheses\"), \
this.parseExprOp(p2, t3, r3, n2, i2);\n            }\n            return \
e3;\n          }, ae.buildBinary = function(e3, t3, r3, n2, i2, s2) {\n       \
     \"PrivateIdentifier\" === n2.type && this.raise(n2.start, \"Private \
identifier can only be left side of binary expression\");\n            var a2 \
= this.startNodeAt(e3, t3);\n            return a2.left = r3, a2.operator = \
i2, a2.right = n2, this.finishNode(a2, s2 ? \"LogicalExpression\" : \
\"BinaryExpression\");\n          }, ae.parseMaybeUnary = function(e3, t3, \
r3, n2) {\n            var i2, s2 = this.start, a2 = this.startLoc;\n         \
   if (this.isContextual(\"await\") && this.canAwait) i2 = \
this.parseAwait(n2), t3 = true;\n            else if (this.type.prefix) {\n   \
           var o2 = this.startNode(), u2 = this.type === b.incDec;\n          \
    o2.operator = this.value, o2.prefix = true, this.next(), o2.argument = \
this.parseMaybeUnary(null, true, u2, n2), this.checkExpressionErrors(e3, \
true), u2 ? this.checkLValSimple(o2.argument) : this.strict && \"delete\" === \
o2.operator && oe(o2.argument) ? this.raiseRecoverable(o2.start, \"Deleting \
local variable in strict mode\") : \"delete\" === o2.operator && \
ue(o2.argument) ? this.raiseRecoverable(o2.start, \"Private fields can not be \
deleted\") : t3 = true, i2 = this.finishNode(o2, u2 ? \"UpdateExpression\" : \
\"UnaryExpression\");\n            } else if (t3 || this.type !== \
b.privateId) {\n              if (i2 = this.parseExprSubscripts(e3, n2), \
this.checkExpressionErrors(e3)) return i2;\n              for (; \
this.type.postfix && !this.canInsertSemicolon(); ) {\n                var l2 \
= this.startNodeAt(s2, a2);\n                l2.operator = this.value, \
l2.prefix = false, l2.argument = i2, this.checkLValSimple(i2), this.next(), \
i2 = this.finishNode(l2, \"UpdateExpression\");\n              }\n            \
} else (n2 || 0 === this.privateNameStack.length) && \
this.options.checkPrivateFields && this.unexpected(), i2 = \
this.parsePrivateIdent(), this.type !== b._in && this.unexpected();\n         \
   return r3 || !this.eat(b.starstar) ? i2 : t3 ? void \
this.unexpected(this.lastTokStart) : this.buildBinary(s2, a2, i2, \
this.parseMaybeUnary(null, false, false, n2), \"**\", false);\n          }, \
ae.parseExprSubscripts = function(e3, t3) {\n            var r3 = this.start, \
n2 = this.startLoc, i2 = this.parseExprAtom(e3, t3);\n            if \
(\"ArrowFunctionExpression\" === i2.type && \")\" !== \
this.input.slice(this.lastTokStart, this.lastTokEnd)) return i2;\n            \
var s2 = this.parseSubscripts(i2, r3, n2, false, t3);\n            return e3 \
&& \"MemberExpression\" === s2.type && (e3.parenthesizedAssign >= s2.start && \
(e3.parenthesizedAssign = -1), e3.parenthesizedBind >= s2.start && \
(e3.parenthesizedBind = -1), e3.trailingComma >= s2.start && \
(e3.trailingComma = -1)), s2;\n          }, ae.parseSubscripts = function(e3, \
t3, r3, n2, i2) {\n            for (var s2 = this.options.ecmaVersion >= 8 && \
\"Identifier\" === e3.type && \"async\" === e3.name && this.lastTokEnd === \
e3.end && !this.canInsertSemicolon() && e3.end - e3.start == 5 && \
this.potentialArrowAt === e3.start, a2 = false; ; ) {\n              var o2 = \
this.parseSubscript(e3, t3, r3, n2, s2, a2, i2);\n              if \
(o2.optional && (a2 = true), o2 === e3 || \"ArrowFunctionExpression\" === \
o2.type) {\n                if (a2) {\n                  var u2 = \
this.startNodeAt(t3, r3);\n                  u2.expression = o2, o2 = \
this.finishNode(u2, \"ChainExpression\");\n                }\n                \
return o2;\n              }\n              e3 = o2;\n            }\n          \
}, ae.shouldParseAsyncArrow = function() {\n            return \
!this.canInsertSemicolon() && this.eat(b.arrow);\n          }, \
ae.parseSubscriptAsyncArrow = function(e3, t3, r3, n2) {\n            return \
this.parseArrowExpression(this.startNodeAt(e3, t3), r3, true, n2);\n          \
}, ae.parseSubscript = function(e3, t3, r3, n2, i2, s2, a2) {\n            \
var o2 = this.options.ecmaVersion >= 11, u2 = o2 && \
this.eat(b.questionDot);\n            n2 && u2 && \
this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee \
of new expressions\");\n            var l2 = this.eat(b.bracketL);\n          \
  if (l2 || u2 && this.type !== b.parenL && this.type !== b.backQuote || \
this.eat(b.dot)) {\n              var h2 = this.startNodeAt(t3, r3);\n        \
      h2.object = e3, l2 ? (h2.property = this.parseExpression(), \
this.expect(b.bracketR)) : this.type === b.privateId && \"Super\" !== e3.type \
? h2.property = this.parsePrivateIdent() : h2.property = \
this.parseIdent(\"never\" !== this.options.allowReserved), h2.computed = \
!!l2, o2 && (h2.optional = u2), e3 = this.finishNode(h2, \
\"MemberExpression\");\n            } else if (!n2 && this.eat(b.parenL)) {\n \
             var c2 = new H(), p2 = this.yieldPos, d2 = this.awaitPos, m2 = \
this.awaitIdentPos;\n              this.yieldPos = 0, this.awaitPos = 0, \
this.awaitIdentPos = 0;\n              var f2 = this.parseExprList(b.parenR, \
this.options.ecmaVersion >= 8, false, c2);\n              if (i2 && !u2 && \
this.shouldParseAsyncArrow()) return this.checkPatternErrors(c2, false), \
this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && \
this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an \
async function\"), this.yieldPos = p2, this.awaitPos = d2, this.awaitIdentPos \
= m2, this.parseSubscriptAsyncArrow(t3, r3, f2, a2);\n              \
this.checkExpressionErrors(c2, true), this.yieldPos = p2 || this.yieldPos, \
this.awaitPos = d2 || this.awaitPos, this.awaitIdentPos = m2 || \
this.awaitIdentPos;\n              var g2 = this.startNodeAt(t3, r3);\n       \
       g2.callee = e3, g2.arguments = f2, o2 && (g2.optional = u2), e3 = \
this.finishNode(g2, \"CallExpression\");\n            } else if (this.type \
=== b.backQuote) {\n              (u2 || s2) && this.raise(this.start, \
\"Optional chaining cannot appear in the tag of tagged template \
expressions\");\n              var x2 = this.startNodeAt(t3, r3);\n           \
   x2.tag = e3, x2.quasi = this.parseTemplate({ isTagged: true }), e3 = \
this.finishNode(x2, \"TaggedTemplateExpression\");\n            }\n           \
 return e3;\n          }, ae.parseExprAtom = function(e3, t3, r3) {\n         \
   this.type === b.slash && this.readRegexp();\n            var n2, i2 = \
this.potentialArrowAt === this.start;\n            switch (this.type) {\n     \
         case b._super:\n                return this.allowSuper || \
this.raise(this.start, \"'super' keyword outside a method\"), n2 = \
this.startNode(), this.next(), this.type !== b.parenL || \
this.allowDirectSuper || this.raise(n2.start, \"super() call outside \
constructor of a subclass\"), this.type !== b.dot && this.type !== b.bracketL \
&& this.type !== b.parenL && this.unexpected(), this.finishNode(n2, \
\"Super\");\n              case b._this:\n                return n2 = \
this.startNode(), this.next(), this.finishNode(n2, \"ThisExpression\");\n     \
         case b.name:\n                var s2 = this.start, a2 = \
this.startLoc, o2 = this.containsEsc, u2 = this.parseIdent(false);\n          \
      if (this.options.ecmaVersion >= 8 && !o2 && \"async\" === u2.name && \
!this.canInsertSemicolon() && this.eat(b._function)) return \
this.overrideContext(ie.f_expr), this.parseFunction(this.startNodeAt(s2, a2), \
0, false, true, t3);\n                if (i2 && !this.canInsertSemicolon()) \
{\n                  if (this.eat(b.arrow)) return \
this.parseArrowExpression(this.startNodeAt(s2, a2), [u2], false, t3);\n       \
           if (this.options.ecmaVersion >= 8 && \"async\" === u2.name && \
this.type === b.name && !o2 && (!this.potentialArrowInForAwait || \"of\" !== \
this.value || this.containsEsc)) return u2 = this.parseIdent(false), \
!this.canInsertSemicolon() && this.eat(b.arrow) || this.unexpected(), \
this.parseArrowExpression(this.startNodeAt(s2, a2), [u2], true, t3);\n        \
        }\n                return u2;\n              case b.regexp:\n         \
       var l2 = this.value;\n                return (n2 = \
this.parseLiteral(l2.value)).regex = { pattern: l2.pattern, flags: l2.flags \
}, n2;\n              case b.num:\n              case b.string:\n             \
   return this.parseLiteral(this.value);\n              case b._null:\n       \
       case b._true:\n              case b._false:\n                return \
(n2 = this.startNode()).value = this.type === b._null ? null : this.type === \
b._true, n2.raw = this.type.keyword, this.next(), this.finishNode(n2, \
\"Literal\");\n              case b.parenL:\n                var h2 = \
this.start, c2 = this.parseParenAndDistinguishExpression(i2, t3);\n           \
     return e3 && (e3.parenthesizedAssign < 0 && \
!this.isSimpleAssignTarget(c2) && (e3.parenthesizedAssign = h2), \
e3.parenthesizedBind < 0 && (e3.parenthesizedBind = h2)), c2;\n              \
case b.bracketL:\n                return n2 = this.startNode(), this.next(), \
n2.elements = this.parseExprList(b.bracketR, true, true, e3), \
this.finishNode(n2, \"ArrayExpression\");\n              case b.braceL:\n     \
           return this.overrideContext(ie.b_expr), this.parseObj(false, \
e3);\n              case b._function:\n                return n2 = \
this.startNode(), this.next(), this.parseFunction(n2, 0);\n              case \
b._class:\n                return this.parseClass(this.startNode(), false);\n \
             case b._new:\n                return this.parseNew();\n          \
    case b.backQuote:\n                return this.parseTemplate();\n         \
     case b._import:\n                return this.options.ecmaVersion >= 11 ? \
this.parseExprImport(r3) : this.unexpected();\n              default:\n       \
         return this.parseExprAtomDefault();\n            }\n          }, \
ae.parseExprAtomDefault = function() {\n            this.unexpected();\n      \
    }, ae.parseExprImport = function(e3) {\n            var t3 = \
this.startNode();\n            if (this.containsEsc && \
this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"), \
this.next(), this.type === b.parenL && !e3) return \
this.parseDynamicImport(t3);\n            if (this.type === b.dot) {\n        \
      var r3 = this.startNodeAt(t3.start, t3.loc && t3.loc.start);\n          \
    return r3.name = \"import\", t3.meta = this.finishNode(r3, \
\"Identifier\"), this.parseImportMeta(t3);\n            }\n            \
this.unexpected();\n          }, ae.parseDynamicImport = function(e3) {\n     \
       if (this.next(), e3.source = this.parseMaybeAssign(), \
this.options.ecmaVersion >= 16) this.eat(b.parenR) ? e3.options = null : \
(this.expect(b.comma), this.afterTrailingComma(b.parenR) ? e3.options = null \
: (e3.options = this.parseMaybeAssign(), this.eat(b.parenR) || \
(this.expect(b.comma), this.afterTrailingComma(b.parenR) || \
this.unexpected())));\n            else if (!this.eat(b.parenR)) {\n          \
    var t3 = this.start;\n              this.eat(b.comma) && \
this.eat(b.parenR) ? this.raiseRecoverable(t3, \"Trailing comma is not \
allowed in import()\") : this.unexpected(t3);\n            }\n            \
return this.finishNode(e3, \"ImportExpression\");\n          }, \
ae.parseImportMeta = function(e3) {\n            this.next();\n            \
var t3 = this.containsEsc;\n            return e3.property = \
this.parseIdent(true), \"meta\" !== e3.property.name && \
this.raiseRecoverable(e3.property.start, \"The only valid meta property for \
import is 'import.meta'\"), t3 && this.raiseRecoverable(e3.start, \
\"'import.meta' must not contain escaped characters\"), \"module\" === \
this.options.sourceType || this.options.allowImportExportEverywhere || \
this.raiseRecoverable(e3.start, \"Cannot use 'import.meta' outside a \
module\"), this.finishNode(e3, \"MetaProperty\");\n          }, \
ae.parseLiteral = function(e3) {\n            var t3 = this.startNode();\n    \
        return t3.value = e3, t3.raw = this.input.slice(this.start, \
this.end), 110 === t3.raw.charCodeAt(t3.raw.length - 1) && (t3.bigint = \
t3.raw.slice(0, -1).replace(/_/g, \"\")), this.next(), this.finishNode(t3, \
\"Literal\");\n          }, ae.parseParenExpression = function() {\n          \
  this.expect(b.parenL);\n            var e3 = this.parseExpression();\n      \
      return this.expect(b.parenR), e3;\n          }, ae.shouldParseArrow = \
function(e3) {\n            return !this.canInsertSemicolon();\n          }, \
ae.parseParenAndDistinguishExpression = function(e3, t3) {\n            var \
r3, n2 = this.start, i2 = this.startLoc, s2 = this.options.ecmaVersion >= \
8;\n            if (this.options.ecmaVersion >= 6) {\n              \
this.next();\n              var a2, o2 = this.start, u2 = this.startLoc, l2 = \
[], h2 = true, c2 = false, p2 = new H(), d2 = this.yieldPos, m2 = \
this.awaitPos;\n              for (this.yieldPos = 0, this.awaitPos = 0; \
this.type !== b.parenR; ) {\n                if (h2 ? h2 = false : \
this.expect(b.comma), s2 && this.afterTrailingComma(b.parenR, true)) {\n      \
            c2 = true;\n                  break;\n                }\n         \
       if (this.type === b.ellipsis) {\n                  a2 = this.start, \
l2.push(this.parseParenItem(this.parseRestBinding())), this.type === b.comma \
&& this.raiseRecoverable(this.start, \"Comma is not permitted after the rest \
element\");\n                  break;\n                }\n                \
l2.push(this.parseMaybeAssign(false, p2, this.parseParenItem));\n             \
 }\n              var f2 = this.lastTokEnd, g2 = this.lastTokEndLoc;\n        \
      if (this.expect(b.parenR), e3 && this.shouldParseArrow(l2) && \
this.eat(b.arrow)) return this.checkPatternErrors(p2, false), \
this.checkYieldAwaitInDefaultParams(), this.yieldPos = d2, this.awaitPos = \
m2, this.parseParenArrowList(n2, i2, l2, t3);\n              l2.length && !c2 \
|| this.unexpected(this.lastTokStart), a2 && this.unexpected(a2), \
this.checkExpressionErrors(p2, true), this.yieldPos = d2 || this.yieldPos, \
this.awaitPos = m2 || this.awaitPos, l2.length > 1 ? ((r3 = \
this.startNodeAt(o2, u2)).expressions = l2, this.finishNodeAt(r3, \
\"SequenceExpression\", f2, g2)) : r3 = l2[0];\n            } else r3 = \
this.parseParenExpression();\n            if (this.options.preserveParens) \
{\n              var x2 = this.startNodeAt(n2, i2);\n              return \
x2.expression = r3, this.finishNode(x2, \"ParenthesizedExpression\");\n       \
     }\n            return r3;\n          }, ae.parseParenItem = function(e3) \
{\n            return e3;\n          }, ae.parseParenArrowList = function(e3, \
t3, r3, n2) {\n            return \
this.parseArrowExpression(this.startNodeAt(e3, t3), r3, false, n2);\n         \
 };\n          var le = [];\n          ae.parseNew = function() {\n           \
 this.containsEsc && this.raiseRecoverable(this.start, \"Escape sequence in \
keyword new\");\n            var e3 = this.startNode();\n            if \
(this.next(), this.options.ecmaVersion >= 6 && this.type === b.dot) {\n       \
       var t3 = this.startNodeAt(e3.start, e3.loc && e3.loc.start);\n         \
     t3.name = \"new\", e3.meta = this.finishNode(t3, \"Identifier\"), \
this.next();\n              var r3 = this.containsEsc;\n              return \
e3.property = this.parseIdent(true), \"target\" !== e3.property.name && \
this.raiseRecoverable(e3.property.start, \"The only valid meta property for \
new is 'new.target'\"), r3 && this.raiseRecoverable(e3.start, \"'new.target' \
must not contain escaped characters\"), this.allowNewDotTarget || \
this.raiseRecoverable(e3.start, \"'new.target' can only be used in functions \
and class static block\"), this.finishNode(e3, \"MetaProperty\");\n           \
 }\n            var n2 = this.start, i2 = this.startLoc;\n            return \
e3.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), n2, \
i2, true, false), this.eat(b.parenL) ? e3.arguments = \
this.parseExprList(b.parenR, this.options.ecmaVersion >= 8, false) : \
e3.arguments = le, this.finishNode(e3, \"NewExpression\");\n          }, \
ae.parseTemplateElement = function(e3) {\n            var t3 = e3.isTagged, \
r3 = this.startNode();\n            return this.type === b.invalidTemplate ? \
(t3 || this.raiseRecoverable(this.start, \"Bad escape sequence in untagged \
template literal\"), r3.value = { raw: this.value.replace(/\\r\\n?/g, \
\"\\n\"), cooked: null }) : r3.value = { raw: this.input.slice(this.start, \
this.end).replace(/\\r\\n?/g, \"\\n\"), cooked: this.value }, this.next(), \
r3.tail = this.type === b.backQuote, this.finishNode(r3, \
\"TemplateElement\");\n          }, ae.parseTemplate = function(e3) {\n       \
     void 0 === e3 && (e3 = {});\n            var t3 = e3.isTagged;\n         \
   void 0 === t3 && (t3 = false);\n            var r3 = this.startNode();\n   \
         this.next(), r3.expressions = [];\n            var n2 = \
this.parseTemplateElement({ isTagged: t3 });\n            for (r3.quasis = \
[n2]; !n2.tail; ) this.type === b.eof && this.raise(this.pos, \"Unterminated \
template literal\"), this.expect(b.dollarBraceL), \
r3.expressions.push(this.parseExpression()), this.expect(b.braceR), \
r3.quasis.push(n2 = this.parseTemplateElement({ isTagged: t3 }));\n           \
 return this.next(), this.finishNode(r3, \"TemplateLiteral\");\n          }, \
ae.isAsyncProp = function(e3) {\n            return !e3.computed && \
\"Identifier\" === e3.key.type && \"async\" === e3.key.name && (this.type === \
b.name || this.type === b.num || this.type === b.string || this.type === \
b.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type \
=== b.star) && !T.test(this.input.slice(this.lastTokEnd, this.start));\n      \
    }, ae.parseObj = function(e3, t3) {\n            var r3 = \
this.startNode(), n2 = true, i2 = {};\n            for (r3.properties = [], \
this.next(); !this.eat(b.braceR); ) {\n              if (n2) n2 = false;\n    \
          else if (this.expect(b.comma), this.options.ecmaVersion >= 5 && \
this.afterTrailingComma(b.braceR)) break;\n              var s2 = \
this.parseProperty(e3, t3);\n              e3 || this.checkPropClash(s2, i2, \
t3), r3.properties.push(s2);\n            }\n            return \
this.finishNode(r3, e3 ? \"ObjectPattern\" : \"ObjectExpression\");\n         \
 }, ae.parseProperty = function(e3, t3) {\n            var r3, n2, i2, s2, a2 \
= this.startNode();\n            if (this.options.ecmaVersion >= 9 && \
this.eat(b.ellipsis)) return e3 ? (a2.argument = this.parseIdent(false), \
this.type === b.comma && this.raiseRecoverable(this.start, \"Comma is not \
permitted after the rest element\"), this.finishNode(a2, \"RestElement\")) : \
(a2.argument = this.parseMaybeAssign(false, t3), this.type === b.comma && t3 \
&& t3.trailingComma < 0 && (t3.trailingComma = this.start), \
this.finishNode(a2, \"SpreadElement\"));\n            \
this.options.ecmaVersion >= 6 && (a2.method = false, a2.shorthand = false, \
(e3 || t3) && (i2 = this.start, s2 = this.startLoc), e3 || (r3 = \
this.eat(b.star)));\n            var o2 = this.containsEsc;\n            \
return this.parsePropertyName(a2), !e3 && !o2 && this.options.ecmaVersion >= \
8 && !r3 && this.isAsyncProp(a2) ? (n2 = true, r3 = this.options.ecmaVersion \
>= 9 && this.eat(b.star), this.parsePropertyName(a2)) : n2 = false, \
this.parsePropertyValue(a2, e3, r3, n2, i2, s2, t3, o2), this.finishNode(a2, \
\"Property\");\n          }, ae.parseGetterSetter = function(e3) {\n          \
  e3.kind = e3.key.name, this.parsePropertyName(e3), e3.value = \
this.parseMethod(false);\n            var t3 = \"get\" === e3.kind ? 0 : 1;\n \
           if (e3.value.params.length !== t3) {\n              var r3 = \
e3.value.start;\n              \"get\" === e3.kind ? \
this.raiseRecoverable(r3, \"getter should have no params\") : \
this.raiseRecoverable(r3, \"setter should have exactly one param\");\n        \
    } else \"set\" === e3.kind && \"RestElement\" === e3.value.params[0].type \
&& this.raiseRecoverable(e3.value.params[0].start, \"Setter cannot use rest \
params\");\n          }, ae.parsePropertyValue = function(e3, t3, r3, n2, i2, \
s2, a2, o2) {\n            (r3 || n2) && this.type === b.colon && \
this.unexpected(), this.eat(b.colon) ? (e3.value = t3 ? \
this.parseMaybeDefault(this.start, this.startLoc) : \
this.parseMaybeAssign(false, a2), e3.kind = \"init\") : \
this.options.ecmaVersion >= 6 && this.type === b.parenL ? (t3 && \
this.unexpected(), e3.kind = \"init\", e3.method = true, e3.value = \
this.parseMethod(r3, n2)) : t3 || o2 || !(this.options.ecmaVersion >= 5) || \
e3.computed || \"Identifier\" !== e3.key.type || \"get\" !== e3.key.name && \
\"set\" !== e3.key.name || this.type === b.comma || this.type === b.braceR || \
this.type === b.eq ? this.options.ecmaVersion >= 6 && !e3.computed && \
\"Identifier\" === e3.key.type ? ((r3 || n2) && this.unexpected(), \
this.checkUnreserved(e3.key), \"await\" !== e3.key.name || this.awaitIdentPos \
|| (this.awaitIdentPos = i2), e3.kind = \"init\", t3 ? e3.value = \
this.parseMaybeDefault(i2, s2, this.copyNode(e3.key)) : this.type === b.eq && \
a2 ? (a2.shorthandAssign < 0 && (a2.shorthandAssign = this.start), e3.value = \
this.parseMaybeDefault(i2, s2, this.copyNode(e3.key))) : e3.value = \
this.copyNode(e3.key), e3.shorthand = true) : this.unexpected() : ((r3 || n2) \
&& this.unexpected(), this.parseGetterSetter(e3));\n          }, \
ae.parsePropertyName = function(e3) {\n            if \
(this.options.ecmaVersion >= 6) {\n              if (this.eat(b.bracketL)) \
return e3.computed = true, e3.key = this.parseMaybeAssign(), \
this.expect(b.bracketR), e3.key;\n              e3.computed = false;\n        \
    }\n            return e3.key = this.type === b.num || this.type === \
b.string ? this.parseExprAtom() : this.parseIdent(\"never\" !== \
this.options.allowReserved);\n          }, ae.initFunction = function(e3) {\n \
           e3.id = null, this.options.ecmaVersion >= 6 && (e3.generator = \
e3.expression = false), this.options.ecmaVersion >= 8 && (e3.async = \
false);\n          }, ae.parseMethod = function(e3, t3, r3) {\n            \
var n2 = this.startNode(), i2 = this.yieldPos, s2 = this.awaitPos, a2 = \
this.awaitIdentPos;\n            return this.initFunction(n2), \
this.options.ecmaVersion >= 6 && (n2.generator = e3), \
this.options.ecmaVersion >= 8 && (n2.async = !!t3), this.yieldPos = 0, \
this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(64 | G(t3, \
n2.generator) | (r3 ? 128 : 0)), this.expect(b.parenL), n2.params = \
this.parseBindingList(b.parenR, false, this.options.ecmaVersion >= 8), \
this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(n2, false, \
true, false), this.yieldPos = i2, this.awaitPos = s2, this.awaitIdentPos = \
a2, this.finishNode(n2, \"FunctionExpression\");\n          }, \
ae.parseArrowExpression = function(e3, t3, r3, n2) {\n            var i2 = \
this.yieldPos, s2 = this.awaitPos, a2 = this.awaitIdentPos;\n            \
return this.enterScope(16 | G(r3, false)), this.initFunction(e3), \
this.options.ecmaVersion >= 8 && (e3.async = !!r3), this.yieldPos = 0, \
this.awaitPos = 0, this.awaitIdentPos = 0, e3.params = \
this.toAssignableList(t3, true), this.parseFunctionBody(e3, true, false, n2), \
this.yieldPos = i2, this.awaitPos = s2, this.awaitIdentPos = a2, \
this.finishNode(e3, \"ArrowFunctionExpression\");\n          }, \
ae.parseFunctionBody = function(e3, t3, r3, n2) {\n            var i2 = t3 && \
this.type !== b.braceL, s2 = this.strict, a2 = false;\n            if (i2) \
e3.body = this.parseMaybeAssign(n2), e3.expression = true, \
this.checkParams(e3, false);\n            else {\n              var o2 = \
this.options.ecmaVersion >= 7 && !this.isSimpleParamList(e3.params);\n        \
      s2 && !o2 || (a2 = this.strictDirective(this.end)) && o2 && \
this.raiseRecoverable(e3.start, \"Illegal 'use strict' directive in function \
with non-simple parameter list\");\n              var u2 = this.labels;\n     \
         this.labels = [], a2 && (this.strict = true), this.checkParams(e3, \
!s2 && !a2 && !t3 && !r3 && this.isSimpleParamList(e3.params)), this.strict \
&& e3.id && this.checkLValSimple(e3.id, 5), e3.body = this.parseBlock(false, \
void 0, a2 && !s2), e3.expression = false, \
this.adaptDirectivePrologue(e3.body.body), this.labels = u2;\n            }\n \
           this.exitScope();\n          }, ae.isSimpleParamList = \
function(e3) {\n            for (var t3 = 0, r3 = e3; t3 < r3.length; t3 += \
1) {\n              if (\"Identifier\" !== r3[t3].type) return false;\n       \
     }\n            return true;\n          }, ae.checkParams = function(e3, \
t3) {\n            for (var r3 = /* @__PURE__ */ Object.create(null), n2 = 0, \
i2 = e3.params; n2 < i2.length; n2 += 1) {\n              var s2 = i2[n2];\n  \
            this.checkLValInnerPattern(s2, 1, t3 ? null : r3);\n            \
}\n          }, ae.parseExprList = function(e3, t3, r3, n2) {\n            \
for (var i2 = [], s2 = true; !this.eat(e3); ) {\n              if (s2) s2 = \
false;\n              else if (this.expect(b.comma), t3 && \
this.afterTrailingComma(e3)) break;\n              var a2 = void 0;\n         \
     r3 && this.type === b.comma ? a2 = null : this.type === b.ellipsis ? (a2 \
= this.parseSpread(n2), n2 && this.type === b.comma && n2.trailingComma < 0 \
&& (n2.trailingComma = this.start)) : a2 = this.parseMaybeAssign(false, n2), \
i2.push(a2);\n            }\n            return i2;\n          }, \
ae.checkUnreserved = function(e3) {\n            var t3 = e3.start, r3 = \
e3.end, n2 = e3.name;\n            (this.inGenerator && \"yield\" === n2 && \
this.raiseRecoverable(t3, \"Cannot use 'yield' as identifier inside a \
generator\"), this.inAsync && \"await\" === n2 && this.raiseRecoverable(t3, \
\"Cannot use 'await' as identifier inside an async function\"), \
this.currentThisScope().inClassFieldInit && \"arguments\" === n2 && \
this.raiseRecoverable(t3, \"Cannot use 'arguments' in class field \
initializer\"), !this.inClassStaticBlock || \"arguments\" !== n2 && \"await\" \
!== n2 || this.raise(t3, \"Cannot use \" + n2 + \" in class static \
initialization block\"), this.keywords.test(n2) && this.raise(t3, \
\"Unexpected keyword '\" + n2 + \"'\"), this.options.ecmaVersion < 6 && -1 \
!== this.input.slice(t3, r3).indexOf(\"\\\\\")) || (this.strict ? \
this.reservedWordsStrict : this.reservedWords).test(n2) && (this.inAsync || \
\"await\" !== n2 || this.raiseRecoverable(t3, \"Cannot use keyword 'await' \
outside an async function\"), this.raiseRecoverable(t3, \"The keyword '\" + \
n2 + \"' is reserved\"));\n          }, ae.parseIdent = function(e3) {\n      \
      var t3 = this.parseIdentNode();\n            return this.next(!!e3), \
this.finishNode(t3, \"Identifier\"), e3 || (this.checkUnreserved(t3), \
\"await\" !== t3.name || this.awaitIdentPos || (this.awaitIdentPos = \
t3.start)), t3;\n          }, ae.parseIdentNode = function() {\n            \
var e3 = this.startNode();\n            return this.type === b.name ? e3.name \
= this.value : this.type.keyword ? (e3.name = this.type.keyword, \"class\" \
!== e3.name && \"function\" !== e3.name || this.lastTokEnd === \
this.lastTokStart + 1 && 46 === this.input.charCodeAt(this.lastTokStart) || \
this.context.pop(), this.type = b.name) : this.unexpected(), e3;\n          \
}, ae.parsePrivateIdent = function() {\n            var e3 = \
this.startNode();\n            return this.type === b.privateId ? e3.name = \
this.value : this.unexpected(), this.next(), this.finishNode(e3, \
\"PrivateIdentifier\"), this.options.checkPrivateFields && (0 === \
this.privateNameStack.length ? this.raise(e3.start, \"Private field '#\" + \
e3.name + \"' must be declared in an enclosing class\") : \
this.privateNameStack[this.privateNameStack.length - 1].used.push(e3)), e3;\n \
         }, ae.parseYield = function(e3) {\n            this.yieldPos || \
(this.yieldPos = this.start);\n            var t3 = this.startNode();\n       \
     return this.next(), this.type === b.semi || this.canInsertSemicolon() || \
this.type !== b.star && !this.type.startsExpr ? (t3.delegate = false, \
t3.argument = null) : (t3.delegate = this.eat(b.star), t3.argument = \
this.parseMaybeAssign(e3)), this.finishNode(t3, \"YieldExpression\");\n       \
   }, ae.parseAwait = function(e3) {\n            this.awaitPos || \
(this.awaitPos = this.start);\n            var t3 = this.startNode();\n       \
     return this.next(), t3.argument = this.parseMaybeUnary(null, true, \
false, e3), this.finishNode(t3, \"AwaitExpression\");\n          };\n         \
 var he = U.prototype;\n          he.raise = function(e3, t3) {\n            \
var r3 = M(this.input, e3);\n            t3 += \" (\" + r3.line + \":\" + \
r3.column + \")\";\n            var n2 = new SyntaxError(t3);\n            \
throw n2.pos = e3, n2.loc = r3, n2.raisedAt = this.pos, n2;\n          }, \
he.raiseRecoverable = he.raise, he.curPosition = function() {\n            if \
(this.options.locations) return new N(this.curLine, this.pos - \
this.lineStart);\n          };\n          var ce = U.prototype, pe = \
function(e3) {\n            this.flags = e3, this.var = [], this.lexical = \
[], this.functions = [], this.inClassFieldInit = false;\n          };\n       \
   ce.enterScope = function(e3) {\n            this.scopeStack.push(new \
pe(e3));\n          }, ce.exitScope = function() {\n            \
this.scopeStack.pop();\n          }, ce.treatFunctionsAsVarInScope = \
function(e3) {\n            return 2 & e3.flags || !this.inModule && 1 & \
e3.flags;\n          }, ce.declareName = function(e3, t3, r3) {\n            \
var n2 = false;\n            if (2 === t3) {\n              var i2 = \
this.currentScope();\n              n2 = i2.lexical.indexOf(e3) > -1 || \
i2.functions.indexOf(e3) > -1 || i2.var.indexOf(e3) > -1, \
i2.lexical.push(e3), this.inModule && 1 & i2.flags && delete \
this.undefinedExports[e3];\n            } else if (4 === t3) {\n              \
this.currentScope().lexical.push(e3);\n            } else if (3 === t3) {\n   \
           var s2 = this.currentScope();\n              n2 = \
this.treatFunctionsAsVar ? s2.lexical.indexOf(e3) > -1 : \
s2.lexical.indexOf(e3) > -1 || s2.var.indexOf(e3) > -1, \
s2.functions.push(e3);\n            } else for (var a2 = \
this.scopeStack.length - 1; a2 >= 0; --a2) {\n              var o2 = \
this.scopeStack[a2];\n              if (o2.lexical.indexOf(e3) > -1 && !(32 & \
o2.flags && o2.lexical[0] === e3) || !this.treatFunctionsAsVarInScope(o2) && \
o2.functions.indexOf(e3) > -1) {\n                n2 = true;\n                \
break;\n              }\n              if (o2.var.push(e3), this.inModule && \
1 & o2.flags && delete this.undefinedExports[e3], 259 & o2.flags) break;\n    \
        }\n            n2 && this.raiseRecoverable(r3, \"Identifier '\" + e3 \
+ \"' has already been declared\");\n          }, ce.checkLocalExport = \
function(e3) {\n            -1 === \
this.scopeStack[0].lexical.indexOf(e3.name) && -1 === \
this.scopeStack[0].var.indexOf(e3.name) && (this.undefinedExports[e3.name] = \
e3);\n          }, ce.currentScope = function() {\n            return \
this.scopeStack[this.scopeStack.length - 1];\n          }, ce.currentVarScope \
= function() {\n            for (var e3 = this.scopeStack.length - 1; ; e3--) \
{\n              var t3 = this.scopeStack[e3];\n              if (259 & \
t3.flags) return t3;\n            }\n          }, ce.currentThisScope = \
function() {\n            for (var e3 = this.scopeStack.length - 1; ; e3--) \
{\n              var t3 = this.scopeStack[e3];\n              if (259 & \
t3.flags && !(16 & t3.flags)) return t3;\n            }\n          };\n       \
   var de = function(e3, t3, r3) {\n            this.type = \"\", this.start \
= t3, this.end = 0, e3.options.locations && (this.loc = new V(e3, r3)), \
e3.options.directSourceFile && (this.sourceFile = \
e3.options.directSourceFile), e3.options.ranges && (this.range = [t3, 0]);\n  \
        }, me = U.prototype;\n          function fe(e3, t3, r3, n2) {\n       \
     return e3.type = t3, e3.end = r3, this.options.locations && (e3.loc.end \
= n2), this.options.ranges && (e3.range[1] = r3), e3;\n          }\n          \
me.startNode = function() {\n            return new de(this, this.start, \
this.startLoc);\n          }, me.startNodeAt = function(e3, t3) {\n           \
 return new de(this, e3, t3);\n          }, me.finishNode = function(e3, t3) \
{\n            return fe.call(this, e3, t3, this.lastTokEnd, \
this.lastTokEndLoc);\n          }, me.finishNodeAt = function(e3, t3, r3, n2) \
{\n            return fe.call(this, e3, t3, r3, n2);\n          }, \
me.copyNode = function(e3) {\n            var t3 = new de(this, e3.start, \
this.startLoc);\n            for (var r3 in e3) t3[r3] = e3[r3];\n            \
return t3;\n          };\n          var ge = \"ASCII ASCII_Hex_Digit AHex \
Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M \
Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped \
CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF \
Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash \
Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji \
Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation \
Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex \
IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start \
IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE \
Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn \
Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI \
Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term \
Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space \
space XID_Continue XIDC XID_Start XIDS\", xe = ge + \" \
Extended_Pictographic\", ye = xe + \" EBase EComp EMod EPres ExtPict\", be = \
{ 9: ge, 10: xe, 11: xe, 12: ye, 13: ye, 14: ye }, Te = { 9: \"\", 10: \"\", \
11: \"\", 12: \"\", 13: \"\", 14: \"Basic_Emoji Emoji_Keycap_Sequence \
RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence \
RGI_Emoji_ZWJ_Sequence RGI_Emoji\" }, ve = \"Cased_Letter LC \
Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl \
Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark \
Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L \
Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark \
Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn \
Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No \
Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co \
Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate \
Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\", Se = \
\"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn \
Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng \
Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid \
Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm \
Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot \
Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl \
Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic \
Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani \
Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira \
Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli \
Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana \
Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao \
Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu \
Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean \
Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend \
Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong \
Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa \
Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic \
Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo \
Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma \
Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician \
Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra \
Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh \
Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc \
Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr \
Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt \
Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii \
Zanabazar_Square Zanb\", Ae = Se + \" Dogra Dogr Gunjala_Gondi Gong \
Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian \
Sogd\", _e = Ae + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong \
Hmnp Wancho Wcho\", Ee = _e + \" Chorasmian Chrs Diak Dives_Akuru \
Khitan_Small_Script Kits Yezi Yezidi\", we = Ee + \" Cypro_Minoan Cpmn \
Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\", ke = { 9: Se, 10: Ae, 11: \
_e, 12: Ee, 13: we, 14: we + \" Gara Garay Gukh Gurung_Khema Hrkt \
Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu \
Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\" }, Ie = {};\n          \
function De(e3) {\n            var t3 = Ie[e3] = { binary: L(be[e3] + \" \" + \
ve), binaryOfStrings: L(Te[e3]), nonBinary: { General_Category: L(ve), \
Script: L(ke[e3]) } };\n            t3.nonBinary.Script_Extensions = \
t3.nonBinary.Script, t3.nonBinary.gc = t3.nonBinary.General_Category, \
t3.nonBinary.sc = t3.nonBinary.Script, t3.nonBinary.scx = \
t3.nonBinary.Script_Extensions;\n          }\n          for (var Ce = 0, $e = \
[9, 10, 11, 12, 13, 14]; Ce < $e.length; Ce += 1) {\n            \
De($e[Ce]);\n          }\n          var Le = U.prototype, Re = function(e3, \
t3) {\n            this.parent = e3, this.base = t3 || this;\n          };\n  \
        Re.prototype.separatedFrom = function(e3) {\n            for (var t3 \
= this; t3; t3 = t3.parent) for (var r3 = e3; r3; r3 = r3.parent) if (t3.base \
=== r3.base && t3 !== r3) return true;\n            return false;\n          \
}, Re.prototype.sibling = function() {\n            return new \
Re(this.parent, this.base);\n          };\n          var Fe = function(e3) \
{\n            this.parser = e3, this.validFlags = \"gim\" + \
(e3.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (e3.options.ecmaVersion >= 9 \
? \"s\" : \"\") + (e3.options.ecmaVersion >= 13 ? \"d\" : \"\") + \
(e3.options.ecmaVersion >= 15 ? \"v\" : \"\"), this.unicodeProperties = \
Ie[e3.options.ecmaVersion >= 14 ? 14 : e3.options.ecmaVersion], this.source = \
\"\", this.flags = \"\", this.start = 0, this.switchU = false, this.switchV = \
false, this.switchN = false, this.pos = 0, this.lastIntValue = 0, \
this.lastStringValue = \"\", this.lastAssertionIsQuantifiable = false, \
this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = /* \
@__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID \
= null;\n          };\n          function Ne(e3) {\n            return 105 \
=== e3 || 109 === e3 || 115 === e3;\n          }\n          function Ve(e3) \
{\n            return 36 === e3 || e3 >= 40 && e3 <= 43 || 46 === e3 || 63 \
=== e3 || e3 >= 91 && e3 <= 94 || e3 >= 123 && e3 <= 125;\n          }\n      \
    function Me(e3) {\n            return e3 >= 65 && e3 <= 90 || e3 >= 97 && \
e3 <= 122;\n          }\n          Fe.prototype.reset = function(e3, t3, r3) \
{\n            var n2 = -1 !== r3.indexOf(\"v\"), i2 = -1 !== \
r3.indexOf(\"u\");\n            this.start = 0 | e3, this.source = t3 + \"\", \
this.flags = r3, n2 && this.parser.options.ecmaVersion >= 15 ? (this.switchU \
= true, this.switchV = true, this.switchN = true) : (this.switchU = i2 && \
this.parser.options.ecmaVersion >= 6, this.switchV = false, this.switchN = i2 \
&& this.parser.options.ecmaVersion >= 9);\n          }, Fe.prototype.raise = \
function(e3) {\n            this.parser.raiseRecoverable(this.start, \
\"Invalid regular expression: /\" + this.source + \"/: \" + e3);\n          \
}, Fe.prototype.at = function(e3, t3) {\n            void 0 === t3 && (t3 = \
false);\n            var r3 = this.source, n2 = r3.length;\n            if \
(e3 >= n2) return -1;\n            var i2 = r3.charCodeAt(e3);\n            \
if (!t3 && !this.switchU || i2 <= 55295 || i2 >= 57344 || e3 + 1 >= n2) \
return i2;\n            var s2 = r3.charCodeAt(e3 + 1);\n            return \
s2 >= 56320 && s2 <= 57343 ? (i2 << 10) + s2 - 56613888 : i2;\n          }, \
Fe.prototype.nextIndex = function(e3, t3) {\n            void 0 === t3 && (t3 \
= false);\n            var r3 = this.source, n2 = r3.length;\n            if \
(e3 >= n2) return n2;\n            var i2, s2 = r3.charCodeAt(e3);\n          \
  return !t3 && !this.switchU || s2 <= 55295 || s2 >= 57344 || e3 + 1 >= n2 \
|| (i2 = r3.charCodeAt(e3 + 1)) < 56320 || i2 > 57343 ? e3 + 1 : e3 + 2;\n    \
      }, Fe.prototype.current = function(e3) {\n            return void 0 === \
e3 && (e3 = false), this.at(this.pos, e3);\n          }, \
Fe.prototype.lookahead = function(e3) {\n            return void 0 === e3 && \
(e3 = false), this.at(this.nextIndex(this.pos, e3), e3);\n          }, \
Fe.prototype.advance = function(e3) {\n            void 0 === e3 && (e3 = \
false), this.pos = this.nextIndex(this.pos, e3);\n          }, \
Fe.prototype.eat = function(e3, t3) {\n            return void 0 === t3 && \
(t3 = false), this.current(t3) === e3 && (this.advance(t3), true);\n          \
}, Fe.prototype.eatChars = function(e3, t3) {\n            void 0 === t3 && \
(t3 = false);\n            for (var r3 = this.pos, n2 = 0, i2 = e3; n2 < \
i2.length; n2 += 1) {\n              var s2 = i2[n2], a2 = this.at(r3, t3);\n \
             if (-1 === a2 || a2 !== s2) return false;\n              r3 = \
this.nextIndex(r3, t3);\n            }\n            return this.pos = r3, \
true;\n          }, Le.validateRegExpFlags = function(e3) {\n            for \
(var t3 = e3.validFlags, r3 = e3.flags, n2 = false, i2 = false, s2 = 0; s2 < \
r3.length; s2++) {\n              var a2 = r3.charAt(s2);\n              -1 \
=== t3.indexOf(a2) && this.raise(e3.start, \"Invalid regular expression \
flag\"), r3.indexOf(a2, s2 + 1) > -1 && this.raise(e3.start, \"Duplicate \
regular expression flag\"), \"u\" === a2 && (n2 = true), \"v\" === a2 && (i2 \
= true);\n            }\n            this.options.ecmaVersion >= 15 && n2 && \
i2 && this.raise(e3.start, \"Invalid regular expression flag\");\n          \
}, Le.validateRegExpPattern = function(e3) {\n            \
this.regexp_pattern(e3), !e3.switchN && this.options.ecmaVersion >= 9 && \
function(e4) {\n              for (var t3 in e4) return true;\n              \
return false;\n            }(e3.groupNames) && (e3.switchN = true, \
this.regexp_pattern(e3));\n          }, Le.regexp_pattern = function(e3) {\n  \
          e3.pos = 0, e3.lastIntValue = 0, e3.lastStringValue = \"\", \
e3.lastAssertionIsQuantifiable = false, e3.numCapturingParens = 0, \
e3.maxBackReference = 0, e3.groupNames = /* @__PURE__ */ Object.create(null), \
e3.backReferenceNames.length = 0, e3.branchID = null, \
this.regexp_disjunction(e3), e3.pos !== e3.source.length && (e3.eat(41) && \
e3.raise(\"Unmatched ')'\"), (e3.eat(93) || e3.eat(125)) && e3.raise(\"Lone \
quantifier brackets\")), e3.maxBackReference > e3.numCapturingParens && \
e3.raise(\"Invalid escape\");\n            for (var t3 = 0, r3 = \
e3.backReferenceNames; t3 < r3.length; t3 += 1) {\n              var n2 = \
r3[t3];\n              e3.groupNames[n2] || e3.raise(\"Invalid named capture \
referenced\");\n            }\n          }, Le.regexp_disjunction = \
function(e3) {\n            var t3 = this.options.ecmaVersion >= 16;\n        \
    for (t3 && (e3.branchID = new Re(e3.branchID, null)), \
this.regexp_alternative(e3); e3.eat(124); ) t3 && (e3.branchID = \
e3.branchID.sibling()), this.regexp_alternative(e3);\n            t3 && \
(e3.branchID = e3.branchID.parent), this.regexp_eatQuantifier(e3, true) && \
e3.raise(\"Nothing to repeat\"), e3.eat(123) && e3.raise(\"Lone quantifier \
brackets\");\n          }, Le.regexp_alternative = function(e3) {\n           \
 for (; e3.pos < e3.source.length && this.regexp_eatTerm(e3); ) ;\n          \
}, Le.regexp_eatTerm = function(e3) {\n            return \
this.regexp_eatAssertion(e3) ? (e3.lastAssertionIsQuantifiable && \
this.regexp_eatQuantifier(e3) && e3.switchU && e3.raise(\"Invalid \
quantifier\"), true) : !!(e3.switchU ? this.regexp_eatAtom(e3) : \
this.regexp_eatExtendedAtom(e3)) && (this.regexp_eatQuantifier(e3), true);\n  \
        }, Le.regexp_eatAssertion = function(e3) {\n            var t3 = \
e3.pos;\n            if (e3.lastAssertionIsQuantifiable = false, e3.eat(94) \
|| e3.eat(36)) return true;\n            if (e3.eat(92)) {\n              if \
(e3.eat(66) || e3.eat(98)) return true;\n              e3.pos = t3;\n         \
   }\n            if (e3.eat(40) && e3.eat(63)) {\n              var r3 = \
false;\n              if (this.options.ecmaVersion >= 9 && (r3 = e3.eat(60)), \
e3.eat(61) || e3.eat(33)) return this.regexp_disjunction(e3), e3.eat(41) || \
e3.raise(\"Unterminated group\"), e3.lastAssertionIsQuantifiable = !r3, \
true;\n            }\n            return e3.pos = t3, false;\n          }, \
Le.regexp_eatQuantifier = function(e3, t3) {\n            return void 0 === \
t3 && (t3 = false), !!this.regexp_eatQuantifierPrefix(e3, t3) && (e3.eat(63), \
true);\n          }, Le.regexp_eatQuantifierPrefix = function(e3, t3) {\n     \
       return e3.eat(42) || e3.eat(43) || e3.eat(63) || \
this.regexp_eatBracedQuantifier(e3, t3);\n          }, \
Le.regexp_eatBracedQuantifier = function(e3, t3) {\n            var r3 = \
e3.pos;\n            if (e3.eat(123)) {\n              var n2 = 0, i2 = -1;\n \
             if (this.regexp_eatDecimalDigits(e3) && (n2 = e3.lastIntValue, \
e3.eat(44) && this.regexp_eatDecimalDigits(e3) && (i2 = e3.lastIntValue), \
e3.eat(125))) return -1 !== i2 && i2 < n2 && !t3 && e3.raise(\"numbers out of \
order in {} quantifier\"), true;\n              e3.switchU && !t3 && \
e3.raise(\"Incomplete quantifier\"), e3.pos = r3;\n            }\n            \
return false;\n          }, Le.regexp_eatAtom = function(e3) {\n            \
return this.regexp_eatPatternCharacters(e3) || e3.eat(46) || \
this.regexp_eatReverseSolidusAtomEscape(e3) || \
this.regexp_eatCharacterClass(e3) || this.regexp_eatUncapturingGroup(e3) || \
this.regexp_eatCapturingGroup(e3);\n          }, \
Le.regexp_eatReverseSolidusAtomEscape = function(e3) {\n            var t3 = \
e3.pos;\n            if (e3.eat(92)) {\n              if \
(this.regexp_eatAtomEscape(e3)) return true;\n              e3.pos = t3;\n    \
        }\n            return false;\n          }, \
Le.regexp_eatUncapturingGroup = function(e3) {\n            var t3 = \
e3.pos;\n            if (e3.eat(40)) {\n              if (e3.eat(63)) {\n     \
           if (this.options.ecmaVersion >= 16) {\n                  var r3 = \
this.regexp_eatModifiers(e3), n2 = e3.eat(45);\n                  if (r3 || \
n2) {\n                    for (var i2 = 0; i2 < r3.length; i2++) {\n         \
             var s2 = r3.charAt(i2);\n                      r3.indexOf(s2, i2 \
+ 1) > -1 && e3.raise(\"Duplicate regular expression modifiers\");\n          \
          }\n                    if (n2) {\n                      var a2 = \
this.regexp_eatModifiers(e3);\n                      r3 || a2 || 58 !== \
e3.current() || e3.raise(\"Invalid regular expression modifiers\");\n         \
             for (var o2 = 0; o2 < a2.length; o2++) {\n                       \
 var u2 = a2.charAt(o2);\n                        (a2.indexOf(u2, o2 + 1) > \
-1 || r3.indexOf(u2) > -1) && e3.raise(\"Duplicate regular expression \
modifiers\");\n                      }\n                    }\n               \
   }\n                }\n                if (e3.eat(58)) {\n                  \
if (this.regexp_disjunction(e3), e3.eat(41)) return true;\n                  \
e3.raise(\"Unterminated group\");\n                }\n              }\n       \
       e3.pos = t3;\n            }\n            return false;\n          }, \
Le.regexp_eatCapturingGroup = function(e3) {\n            if (e3.eat(40)) {\n \
             if (this.options.ecmaVersion >= 9 ? \
this.regexp_groupSpecifier(e3) : 63 === e3.current() && e3.raise(\"Invalid \
group\"), this.regexp_disjunction(e3), e3.eat(41)) return \
e3.numCapturingParens += 1, true;\n              e3.raise(\"Unterminated \
group\");\n            }\n            return false;\n          }, \
Le.regexp_eatModifiers = function(e3) {\n            for (var t3 = \"\", r3 = \
0; -1 !== (r3 = e3.current()) && Ne(r3); ) t3 += R(r3), e3.advance();\n       \
     return t3;\n          }, Le.regexp_eatExtendedAtom = function(e3) {\n    \
        return e3.eat(46) || this.regexp_eatReverseSolidusAtomEscape(e3) || \
this.regexp_eatCharacterClass(e3) || this.regexp_eatUncapturingGroup(e3) || \
this.regexp_eatCapturingGroup(e3) || \
this.regexp_eatInvalidBracedQuantifier(e3) || \
this.regexp_eatExtendedPatternCharacter(e3);\n          }, \
Le.regexp_eatInvalidBracedQuantifier = function(e3) {\n            return \
this.regexp_eatBracedQuantifier(e3, true) && e3.raise(\"Nothing to repeat\"), \
false;\n          }, Le.regexp_eatSyntaxCharacter = function(e3) {\n          \
  var t3 = e3.current();\n            return !!Ve(t3) && (e3.lastIntValue = \
t3, e3.advance(), true);\n          }, Le.regexp_eatPatternCharacters = \
function(e3) {\n            for (var t3 = e3.pos, r3 = 0; -1 !== (r3 = \
e3.current()) && !Ve(r3); ) e3.advance();\n            return e3.pos !== \
t3;\n          }, Le.regexp_eatExtendedPatternCharacter = function(e3) {\n    \
        var t3 = e3.current();\n            return !(-1 === t3 || 36 === t3 \
|| t3 >= 40 && t3 <= 43 || 46 === t3 || 63 === t3 || 91 === t3 || 94 === t3 \
|| 124 === t3) && (e3.advance(), true);\n          }, \
Le.regexp_groupSpecifier = function(e3) {\n            if (e3.eat(63)) {\n    \
          this.regexp_eatGroupName(e3) || e3.raise(\"Invalid group\");\n      \
        var t3 = this.options.ecmaVersion >= 16, r3 = \
e3.groupNames[e3.lastStringValue];\n              if (r3) if (t3) for (var n2 \
= 0, i2 = r3; n2 < i2.length; n2 += 1) {\n                \
i2[n2].separatedFrom(e3.branchID) || e3.raise(\"Duplicate capture group \
name\");\n              }\n              else e3.raise(\"Duplicate capture \
group name\");\n              t3 ? (r3 || (e3.groupNames[e3.lastStringValue] \
= [])).push(e3.branchID) : e3.groupNames[e3.lastStringValue] = true;\n        \
    }\n          }, Le.regexp_eatGroupName = function(e3) {\n            if \
(e3.lastStringValue = \"\", e3.eat(60)) {\n              if \
(this.regexp_eatRegExpIdentifierName(e3) && e3.eat(62)) return true;\n        \
      e3.raise(\"Invalid capture group name\");\n            }\n            \
return false;\n          }, Le.regexp_eatRegExpIdentifierName = function(e3) \
{\n            if (e3.lastStringValue = \"\", \
this.regexp_eatRegExpIdentifierStart(e3)) {\n              for \
(e3.lastStringValue += R(e3.lastIntValue); \
this.regexp_eatRegExpIdentifierPart(e3); ) e3.lastStringValue += \
R(e3.lastIntValue);\n              return true;\n            }\n            \
return false;\n          }, Le.regexp_eatRegExpIdentifierStart = function(e3) \
{\n            var t3 = e3.pos, r3 = this.options.ecmaVersion >= 11, n2 = \
e3.current(r3);\n            return e3.advance(r3), 92 === n2 && \
this.regexp_eatRegExpUnicodeEscapeSequence(e3, r3) && (n2 = e3.lastIntValue), \
function(e4) {\n              return c(e4, true) || 36 === e4 || 95 === e4;\n \
           }(n2) ? (e3.lastIntValue = n2, true) : (e3.pos = t3, false);\n     \
     }, Le.regexp_eatRegExpIdentifierPart = function(e3) {\n            var \
t3 = e3.pos, r3 = this.options.ecmaVersion >= 11, n2 = e3.current(r3);\n      \
      return e3.advance(r3), 92 === n2 && \
this.regexp_eatRegExpUnicodeEscapeSequence(e3, r3) && (n2 = e3.lastIntValue), \
function(e4) {\n              return p(e4, true) || 36 === e4 || 95 === e4 || \
8204 === e4 || 8205 === e4;\n            }(n2) ? (e3.lastIntValue = n2, true) \
: (e3.pos = t3, false);\n          }, Le.regexp_eatAtomEscape = function(e3) \
{\n            return !!(this.regexp_eatBackReference(e3) || \
this.regexp_eatCharacterClassEscape(e3) || this.regexp_eatCharacterEscape(e3) \
|| e3.switchN && this.regexp_eatKGroupName(e3)) || (e3.switchU && (99 === \
e3.current() && e3.raise(\"Invalid unicode escape\"), e3.raise(\"Invalid \
escape\")), false);\n          }, Le.regexp_eatBackReference = function(e3) \
{\n            var t3 = e3.pos;\n            if \
(this.regexp_eatDecimalEscape(e3)) {\n              var r3 = \
e3.lastIntValue;\n              if (e3.switchU) return r3 > \
e3.maxBackReference && (e3.maxBackReference = r3), true;\n              if \
(r3 <= e3.numCapturingParens) return true;\n              e3.pos = t3;\n      \
      }\n            return false;\n          }, Le.regexp_eatKGroupName = \
function(e3) {\n            if (e3.eat(107)) {\n              if \
(this.regexp_eatGroupName(e3)) return \
e3.backReferenceNames.push(e3.lastStringValue), true;\n              \
e3.raise(\"Invalid named reference\");\n            }\n            return \
false;\n          }, Le.regexp_eatCharacterEscape = function(e3) {\n          \
  return this.regexp_eatControlEscape(e3) || \
this.regexp_eatCControlLetter(e3) || this.regexp_eatZero(e3) || \
this.regexp_eatHexEscapeSequence(e3) || \
this.regexp_eatRegExpUnicodeEscapeSequence(e3, false) || !e3.switchU && \
this.regexp_eatLegacyOctalEscapeSequence(e3) || \
this.regexp_eatIdentityEscape(e3);\n          }, Le.regexp_eatCControlLetter \
= function(e3) {\n            var t3 = e3.pos;\n            if (e3.eat(99)) \
{\n              if (this.regexp_eatControlLetter(e3)) return true;\n         \
     e3.pos = t3;\n            }\n            return false;\n          }, \
Le.regexp_eatZero = function(e3) {\n            return 48 === e3.current() && \
!Pe(e3.lookahead()) && (e3.lastIntValue = 0, e3.advance(), true);\n          \
}, Le.regexp_eatControlEscape = function(e3) {\n            var t3 = \
e3.current();\n            return 116 === t3 ? (e3.lastIntValue = 9, \
e3.advance(), true) : 110 === t3 ? (e3.lastIntValue = 10, e3.advance(), true) \
: 118 === t3 ? (e3.lastIntValue = 11, e3.advance(), true) : 102 === t3 ? \
(e3.lastIntValue = 12, e3.advance(), true) : 114 === t3 && (e3.lastIntValue = \
13, e3.advance(), true);\n          }, Le.regexp_eatControlLetter = \
function(e3) {\n            var t3 = e3.current();\n            return \
!!Me(t3) && (e3.lastIntValue = t3 % 32, e3.advance(), true);\n          }, \
Le.regexp_eatRegExpUnicodeEscapeSequence = function(e3, t3) {\n            \
void 0 === t3 && (t3 = false);\n            var r3, n2 = e3.pos, i2 = t3 || \
e3.switchU;\n            if (e3.eat(117)) {\n              if \
(this.regexp_eatFixedHexDigits(e3, 4)) {\n                var s2 = \
e3.lastIntValue;\n                if (i2 && s2 >= 55296 && s2 <= 56319) {\n   \
               var a2 = e3.pos;\n                  if (e3.eat(92) && \
e3.eat(117) && this.regexp_eatFixedHexDigits(e3, 4)) {\n                    \
var o2 = e3.lastIntValue;\n                    if (o2 >= 56320 && o2 <= \
57343) return e3.lastIntValue = 1024 * (s2 - 55296) + (o2 - 56320) + 65536, \
true;\n                  }\n                  e3.pos = a2, e3.lastIntValue = \
s2;\n                }\n                return true;\n              }\n       \
       if (i2 && e3.eat(123) && this.regexp_eatHexDigits(e3) && e3.eat(125) \
&& ((r3 = e3.lastIntValue) >= 0 && r3 <= 1114111)) return true;\n             \
 i2 && e3.raise(\"Invalid unicode escape\"), e3.pos = n2;\n            }\n    \
        return false;\n          }, Le.regexp_eatIdentityEscape = \
function(e3) {\n            if (e3.switchU) return \
!!this.regexp_eatSyntaxCharacter(e3) || !!e3.eat(47) && (e3.lastIntValue = \
47, true);\n            var t3 = e3.current();\n            return !(99 === \
t3 || e3.switchN && 107 === t3) && (e3.lastIntValue = t3, e3.advance(), \
true);\n          }, Le.regexp_eatDecimalEscape = function(e3) {\n            \
e3.lastIntValue = 0;\n            var t3 = e3.current();\n            if (t3 \
>= 49 && t3 <= 57) {\n              do {\n                e3.lastIntValue = \
10 * e3.lastIntValue + (t3 - 48), e3.advance();\n              } while ((t3 = \
e3.current()) >= 48 && t3 <= 57);\n              return true;\n            \
}\n            return false;\n          };\n          function Oe(e3) {\n     \
       return Me(e3) || 95 === e3;\n          }\n          function ze(e3) \
{\n            return Oe(e3) || Pe(e3);\n          }\n          function \
Pe(e3) {\n            return e3 >= 48 && e3 <= 57;\n          }\n          \
function Ke(e3) {\n            return e3 >= 48 && e3 <= 57 || e3 >= 65 && e3 \
<= 70 || e3 >= 97 && e3 <= 102;\n          }\n          function Ge(e3) {\n   \
         return e3 >= 65 && e3 <= 70 ? e3 - 65 + 10 : e3 >= 97 && e3 <= 102 ? \
e3 - 97 + 10 : e3 - 48;\n          }\n          function Ue(e3) {\n           \
 return e3 >= 48 && e3 <= 55;\n          }\n          \
Le.regexp_eatCharacterClassEscape = function(e3) {\n            var t3 = \
e3.current();\n            if (/* @__PURE__ */ function(e4) {\n              \
return 100 === e4 || 68 === e4 || 115 === e4 || 83 === e4 || 119 === e4 || 87 \
=== e4;\n            }(t3)) return e3.lastIntValue = -1, e3.advance(), 1;\n   \
         var r3 = false;\n            if (e3.switchU && \
this.options.ecmaVersion >= 9 && ((r3 = 80 === t3) || 112 === t3)) {\n        \
      var n2;\n              if (e3.lastIntValue = -1, e3.advance(), \
e3.eat(123) && (n2 = this.regexp_eatUnicodePropertyValueExpression(e3)) && \
e3.eat(125)) return r3 && 2 === n2 && e3.raise(\"Invalid property name\"), \
n2;\n              e3.raise(\"Invalid property name\");\n            }\n      \
      return 0;\n          }, Le.regexp_eatUnicodePropertyValueExpression = \
function(e3) {\n            var t3 = e3.pos;\n            if \
(this.regexp_eatUnicodePropertyName(e3) && e3.eat(61)) {\n              var \
r3 = e3.lastStringValue;\n              if \
(this.regexp_eatUnicodePropertyValue(e3)) {\n                var n2 = \
e3.lastStringValue;\n                return \
this.regexp_validateUnicodePropertyNameAndValue(e3, r3, n2), 1;\n             \
 }\n            }\n            if (e3.pos = t3, \
this.regexp_eatLoneUnicodePropertyNameOrValue(e3)) {\n              var i2 = \
e3.lastStringValue;\n              return \
this.regexp_validateUnicodePropertyNameOrValue(e3, i2);\n            }\n      \
      return 0;\n          }, Le.regexp_validateUnicodePropertyNameAndValue = \
function(e3, t3, r3) {\n            D(e3.unicodeProperties.nonBinary, t3) || \
e3.raise(\"Invalid property name\"), \
e3.unicodeProperties.nonBinary[t3].test(r3) || e3.raise(\"Invalid property \
value\");\n          }, Le.regexp_validateUnicodePropertyNameOrValue = \
function(e3, t3) {\n            return e3.unicodeProperties.binary.test(t3) ? \
1 : e3.switchV && e3.unicodeProperties.binaryOfStrings.test(t3) ? 2 : void \
e3.raise(\"Invalid property name\");\n          }, \
Le.regexp_eatUnicodePropertyName = function(e3) {\n            var t3 = 0;\n  \
          for (e3.lastStringValue = \"\"; Oe(t3 = e3.current()); ) \
e3.lastStringValue += R(t3), e3.advance();\n            return \"\" !== \
e3.lastStringValue;\n          }, Le.regexp_eatUnicodePropertyValue = \
function(e3) {\n            var t3 = 0;\n            for (e3.lastStringValue \
= \"\"; ze(t3 = e3.current()); ) e3.lastStringValue += R(t3), e3.advance();\n \
           return \"\" !== e3.lastStringValue;\n          }, \
Le.regexp_eatLoneUnicodePropertyNameOrValue = function(e3) {\n            \
return this.regexp_eatUnicodePropertyValue(e3);\n          }, \
Le.regexp_eatCharacterClass = function(e3) {\n            if (e3.eat(91)) {\n \
             var t3 = e3.eat(94), r3 = this.regexp_classContents(e3);\n       \
       return e3.eat(93) || e3.raise(\"Unterminated character class\"), t3 && \
2 === r3 && e3.raise(\"Negated character class may contain strings\"), \
true;\n            }\n            return false;\n          }, \
Le.regexp_classContents = function(e3) {\n            return 93 === \
e3.current() ? 1 : e3.switchV ? this.regexp_classSetExpression(e3) : \
(this.regexp_nonEmptyClassRanges(e3), 1);\n          }, \
Le.regexp_nonEmptyClassRanges = function(e3) {\n            for (; \
this.regexp_eatClassAtom(e3); ) {\n              var t3 = e3.lastIntValue;\n  \
            if (e3.eat(45) && this.regexp_eatClassAtom(e3)) {\n               \
 var r3 = e3.lastIntValue;\n                !e3.switchU || -1 !== t3 && -1 \
!== r3 || e3.raise(\"Invalid character class\"), -1 !== t3 && -1 !== r3 && t3 \
> r3 && e3.raise(\"Range out of order in character class\");\n              \
}\n            }\n          }, Le.regexp_eatClassAtom = function(e3) {\n      \
      var t3 = e3.pos;\n            if (e3.eat(92)) {\n              if \
(this.regexp_eatClassEscape(e3)) return true;\n              if (e3.switchU) \
{\n                var r3 = e3.current();\n                (99 === r3 || \
Ue(r3)) && e3.raise(\"Invalid class escape\"), e3.raise(\"Invalid \
escape\");\n              }\n              e3.pos = t3;\n            }\n      \
      var n2 = e3.current();\n            return 93 !== n2 && \
(e3.lastIntValue = n2, e3.advance(), true);\n          }, \
Le.regexp_eatClassEscape = function(e3) {\n            var t3 = e3.pos;\n     \
       if (e3.eat(98)) return e3.lastIntValue = 8, true;\n            if \
(e3.switchU && e3.eat(45)) return e3.lastIntValue = 45, true;\n            if \
(!e3.switchU && e3.eat(99)) {\n              if \
(this.regexp_eatClassControlLetter(e3)) return true;\n              e3.pos = \
t3;\n            }\n            return \
this.regexp_eatCharacterClassEscape(e3) || \
this.regexp_eatCharacterEscape(e3);\n          }, \
Le.regexp_classSetExpression = function(e3) {\n            var t3, r3 = 1;\n  \
          if (this.regexp_eatClassSetRange(e3)) ;\n            else if (t3 = \
this.regexp_eatClassSetOperand(e3)) {\n              2 === t3 && (r3 = 2);\n  \
            for (var n2 = e3.pos; e3.eatChars([38, 38]); ) 38 !== \
e3.current() && (t3 = this.regexp_eatClassSetOperand(e3)) ? 2 !== t3 && (r3 = \
1) : e3.raise(\"Invalid character in character class\");\n              if \
(n2 !== e3.pos) return r3;\n              for (; e3.eatChars([45, 45]); ) \
this.regexp_eatClassSetOperand(e3) || e3.raise(\"Invalid character in \
character class\");\n              if (n2 !== e3.pos) return r3;\n            \
} else e3.raise(\"Invalid character in character class\");\n            for \
(; ; ) if (!this.regexp_eatClassSetRange(e3)) {\n              if (!(t3 = \
this.regexp_eatClassSetOperand(e3))) return r3;\n              2 === t3 && \
(r3 = 2);\n            }\n          }, Le.regexp_eatClassSetRange = \
function(e3) {\n            var t3 = e3.pos;\n            if \
(this.regexp_eatClassSetCharacter(e3)) {\n              var r3 = \
e3.lastIntValue;\n              if (e3.eat(45) && \
this.regexp_eatClassSetCharacter(e3)) {\n                var n2 = \
e3.lastIntValue;\n                return -1 !== r3 && -1 !== n2 && r3 > n2 && \
e3.raise(\"Range out of order in character class\"), true;\n              }\n \
             e3.pos = t3;\n            }\n            return false;\n         \
 }, Le.regexp_eatClassSetOperand = function(e3) {\n            return \
this.regexp_eatClassSetCharacter(e3) ? 1 : \
this.regexp_eatClassStringDisjunction(e3) || \
this.regexp_eatNestedClass(e3);\n          }, Le.regexp_eatNestedClass = \
function(e3) {\n            var t3 = e3.pos;\n            if (e3.eat(91)) {\n \
             var r3 = e3.eat(94), n2 = this.regexp_classContents(e3);\n       \
       if (e3.eat(93)) return r3 && 2 === n2 && e3.raise(\"Negated character \
class may contain strings\"), n2;\n              e3.pos = t3;\n            \
}\n            if (e3.eat(92)) {\n              var i2 = \
this.regexp_eatCharacterClassEscape(e3);\n              if (i2) return i2;\n  \
            e3.pos = t3;\n            }\n            return null;\n          \
}, Le.regexp_eatClassStringDisjunction = function(e3) {\n            var t3 = \
e3.pos;\n            if (e3.eatChars([92, 113])) {\n              if \
(e3.eat(123)) {\n                var r3 = \
this.regexp_classStringDisjunctionContents(e3);\n                if \
(e3.eat(125)) return r3;\n              } else e3.raise(\"Invalid \
escape\");\n              e3.pos = t3;\n            }\n            return \
null;\n          }, Le.regexp_classStringDisjunctionContents = function(e3) \
{\n            for (var t3 = this.regexp_classString(e3); e3.eat(124); ) 2 \
=== this.regexp_classString(e3) && (t3 = 2);\n            return t3;\n        \
  }, Le.regexp_classString = function(e3) {\n            for (var t3 = 0; \
this.regexp_eatClassSetCharacter(e3); ) t3++;\n            return 1 === t3 ? \
1 : 2;\n          }, Le.regexp_eatClassSetCharacter = function(e3) {\n        \
    var t3 = e3.pos;\n            if (e3.eat(92)) return \
!(!this.regexp_eatCharacterEscape(e3) && \
!this.regexp_eatClassSetReservedPunctuator(e3)) || (e3.eat(98) ? \
(e3.lastIntValue = 8, true) : (e3.pos = t3, false));\n            var r3 = \
e3.current();\n            return !(r3 < 0 || r3 === e3.lookahead() && \
function(e4) {\n              return 33 === e4 || e4 >= 35 && e4 <= 38 || e4 \
>= 42 && e4 <= 44 || 46 === e4 || e4 >= 58 && e4 <= 64 || 94 === e4 || 96 === \
e4 || 126 === e4;\n            }(r3)) && (!function(e4) {\n              \
return 40 === e4 || 41 === e4 || 45 === e4 || 47 === e4 || e4 >= 91 && e4 <= \
93 || e4 >= 123 && e4 <= 125;\n            }(r3) && (e3.advance(), \
e3.lastIntValue = r3, true));\n          }, \
Le.regexp_eatClassSetReservedPunctuator = function(e3) {\n            var t3 \
= e3.current();\n            return !!function(e4) {\n              return 33 \
=== e4 || 35 === e4 || 37 === e4 || 38 === e4 || 44 === e4 || 45 === e4 || e4 \
>= 58 && e4 <= 62 || 64 === e4 || 96 === e4 || 126 === e4;\n            }(t3) \
&& (e3.lastIntValue = t3, e3.advance(), true);\n          }, \
Le.regexp_eatClassControlLetter = function(e3) {\n            var t3 = \
e3.current();\n            return !(!Pe(t3) && 95 !== t3) && (e3.lastIntValue \
= t3 % 32, e3.advance(), true);\n          }, Le.regexp_eatHexEscapeSequence \
= function(e3) {\n            var t3 = e3.pos;\n            if (e3.eat(120)) \
{\n              if (this.regexp_eatFixedHexDigits(e3, 2)) return true;\n     \
         e3.switchU && e3.raise(\"Invalid escape\"), e3.pos = t3;\n           \
 }\n            return false;\n          }, Le.regexp_eatDecimalDigits = \
function(e3) {\n            var t3 = e3.pos, r3 = 0;\n            for \
(e3.lastIntValue = 0; Pe(r3 = e3.current()); ) e3.lastIntValue = 10 * \
e3.lastIntValue + (r3 - 48), e3.advance();\n            return e3.pos !== \
t3;\n          }, Le.regexp_eatHexDigits = function(e3) {\n            var t3 \
= e3.pos, r3 = 0;\n            for (e3.lastIntValue = 0; Ke(r3 = \
e3.current()); ) e3.lastIntValue = 16 * e3.lastIntValue + Ge(r3), \
e3.advance();\n            return e3.pos !== t3;\n          }, \
Le.regexp_eatLegacyOctalEscapeSequence = function(e3) {\n            if \
(this.regexp_eatOctalDigit(e3)) {\n              var t3 = e3.lastIntValue;\n  \
            if (this.regexp_eatOctalDigit(e3)) {\n                var r3 = \
e3.lastIntValue;\n                t3 <= 3 && this.regexp_eatOctalDigit(e3) ? \
e3.lastIntValue = 64 * t3 + 8 * r3 + e3.lastIntValue : e3.lastIntValue = 8 * \
t3 + r3;\n              } else e3.lastIntValue = t3;\n              return \
true;\n            }\n            return false;\n          }, \
Le.regexp_eatOctalDigit = function(e3) {\n            var t3 = \
e3.current();\n            return Ue(t3) ? (e3.lastIntValue = t3 - 48, \
e3.advance(), true) : (e3.lastIntValue = 0, false);\n          }, \
Le.regexp_eatFixedHexDigits = function(e3, t3) {\n            var r3 = \
e3.pos;\n            e3.lastIntValue = 0;\n            for (var n2 = 0; n2 < \
t3; ++n2) {\n              var i2 = e3.current();\n              if (!Ke(i2)) \
return e3.pos = r3, false;\n              e3.lastIntValue = 16 * \
e3.lastIntValue + Ge(i2), e3.advance();\n            }\n            return \
true;\n          };\n          var Be = function(e3) {\n            this.type \
= e3.type, this.value = e3.value, this.start = e3.start, this.end = e3.end, \
e3.options.locations && (this.loc = new V(e3, e3.startLoc, e3.endLoc)), \
e3.options.ranges && (this.range = [e3.start, e3.end]);\n          }, We = \
U.prototype;\n          function je(e3) {\n            return \"function\" != \
typeof BigInt ? null : BigInt(e3.replace(/_/g, \"\"));\n          }\n         \
 We.next = function(e3) {\n            !e3 && this.type.keyword && \
this.containsEsc && this.raiseRecoverable(this.start, \"Escape sequence in \
keyword \" + this.type.keyword), this.options.onToken && \
this.options.onToken(new Be(this)), this.lastTokEnd = this.end, \
this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, \
this.lastTokStartLoc = this.startLoc, this.nextToken();\n          }, \
We.getToken = function() {\n            return this.next(), new Be(this);\n   \
       }, \"undefined\" != typeof Symbol && (We[Symbol.iterator] = function() \
{\n            var e3 = this;\n            return { next: function() {\n      \
        var t3 = e3.getToken();\n              return { done: t3.type === \
b.eof, value: t3 };\n            } };\n          }), We.nextToken = \
function() {\n            var e3 = this.curContext();\n            return e3 \
&& e3.preserveSpace || this.skipSpace(), this.start = this.pos, \
this.options.locations && (this.startLoc = this.curPosition()), this.pos >= \
this.input.length ? this.finishToken(b.eof) : e3.override ? e3.override(this) \
: void this.readToken(this.fullCharCodeAtPos());\n          }, We.readToken = \
function(e3) {\n            return c(e3, this.options.ecmaVersion >= 6) || 92 \
=== e3 ? this.readWord() : this.getTokenFromCode(e3);\n          }, \
We.fullCharCodeAtPos = function() {\n            var e3 = \
this.input.charCodeAt(this.pos);\n            if (e3 <= 55295 || e3 >= 56320) \
return e3;\n            var t3 = this.input.charCodeAt(this.pos + 1);\n       \
     return t3 <= 56319 || t3 >= 57344 ? e3 : (e3 << 10) + t3 - 56613888;\n   \
       }, We.skipBlockComment = function() {\n            var e3 = \
this.options.onComment && this.curPosition(), t3 = this.pos, r3 = \
this.input.indexOf(\"*/\", this.pos += 2);\n            if (-1 === r3 && \
this.raise(this.pos - 2, \"Unterminated comment\"), this.pos = r3 + 2, \
this.options.locations) for (var n2 = void 0, i2 = t3; (n2 = A(this.input, \
i2, this.pos)) > -1; ) ++this.curLine, i2 = this.lineStart = n2;\n            \
this.options.onComment && this.options.onComment(true, this.input.slice(t3 + \
2, r3), t3, this.pos, e3, this.curPosition());\n          }, \
We.skipLineComment = function(e3) {\n            for (var t3 = this.pos, r3 = \
this.options.onComment && this.curPosition(), n2 = \
this.input.charCodeAt(this.pos += e3); this.pos < this.input.length && \
!S(n2); ) n2 = this.input.charCodeAt(++this.pos);\n            \
this.options.onComment && this.options.onComment(false, this.input.slice(t3 + \
e3, this.pos), t3, this.pos, r3, this.curPosition());\n          }, \
We.skipSpace = function() {\n            e: for (; this.pos < \
this.input.length; ) {\n              var e3 = \
this.input.charCodeAt(this.pos);\n              switch (e3) {\n               \
 case 32:\n                case 160:\n                  ++this.pos;\n         \
         break;\n                case 13:\n                  10 === \
this.input.charCodeAt(this.pos + 1) && ++this.pos;\n                case \
10:\n                case 8232:\n                case 8233:\n                 \
 ++this.pos, this.options.locations && (++this.curLine, this.lineStart = \
this.pos);\n                  break;\n                case 47:\n              \
    switch (this.input.charCodeAt(this.pos + 1)) {\n                    case \
42:\n                      this.skipBlockComment();\n                      \
break;\n                    case 47:\n                      \
this.skipLineComment(2);\n                      break;\n                    \
default:\n                      break e;\n                  }\n               \
   break;\n                default:\n                  if (!(e3 > 8 && e3 < \
14 || e3 >= 5760 && _.test(String.fromCharCode(e3)))) break e;\n              \
    ++this.pos;\n              }\n            }\n          }, We.finishToken \
= function(e3, t3) {\n            this.end = this.pos, this.options.locations \
&& (this.endLoc = this.curPosition());\n            var r3 = this.type;\n     \
       this.type = e3, this.value = t3, this.updateContext(r3);\n          }, \
We.readToken_dot = function() {\n            var e3 = \
this.input.charCodeAt(this.pos + 1);\n            if (e3 >= 48 && e3 <= 57) \
return this.readNumber(true);\n            var t3 = \
this.input.charCodeAt(this.pos + 2);\n            return \
this.options.ecmaVersion >= 6 && 46 === e3 && 46 === t3 ? (this.pos += 3, \
this.finishToken(b.ellipsis)) : (++this.pos, this.finishToken(b.dot));\n      \
    }, We.readToken_slash = function() {\n            var e3 = \
this.input.charCodeAt(this.pos + 1);\n            return this.exprAllowed ? \
(++this.pos, this.readRegexp()) : 61 === e3 ? this.finishOp(b.assign, 2) : \
this.finishOp(b.slash, 1);\n          }, We.readToken_mult_modulo_exp = \
function(e3) {\n            var t3 = this.input.charCodeAt(this.pos + 1), r3 \
= 1, n2 = 42 === e3 ? b.star : b.modulo;\n            return \
this.options.ecmaVersion >= 7 && 42 === e3 && 42 === t3 && (++r3, n2 = \
b.starstar, t3 = this.input.charCodeAt(this.pos + 2)), 61 === t3 ? \
this.finishOp(b.assign, r3 + 1) : this.finishOp(n2, r3);\n          }, \
We.readToken_pipe_amp = function(e3) {\n            var t3 = \
this.input.charCodeAt(this.pos + 1);\n            if (t3 === e3) {\n          \
    if (this.options.ecmaVersion >= 12) {\n                if (61 === \
this.input.charCodeAt(this.pos + 2)) return this.finishOp(b.assign, 3);\n     \
         }\n              return this.finishOp(124 === e3 ? b.logicalOR : \
b.logicalAND, 2);\n            }\n            return 61 === t3 ? \
this.finishOp(b.assign, 2) : this.finishOp(124 === e3 ? b.bitwiseOR : \
b.bitwiseAND, 1);\n          }, We.readToken_caret = function() {\n           \
 return 61 === this.input.charCodeAt(this.pos + 1) ? this.finishOp(b.assign, \
2) : this.finishOp(b.bitwiseXOR, 1);\n          }, We.readToken_plus_min = \
function(e3) {\n            var t3 = this.input.charCodeAt(this.pos + 1);\n   \
         return t3 === e3 ? 45 !== t3 || this.inModule || 62 !== \
this.input.charCodeAt(this.pos + 2) || 0 !== this.lastTokEnd && \
!T.test(this.input.slice(this.lastTokEnd, this.pos)) ? \
this.finishOp(b.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), \
this.nextToken()) : 61 === t3 ? this.finishOp(b.assign, 2) : \
this.finishOp(b.plusMin, 1);\n          }, We.readToken_lt_gt = function(e3) \
{\n            var t3 = this.input.charCodeAt(this.pos + 1), r3 = 1;\n        \
    return t3 === e3 ? (r3 = 62 === e3 && 62 === \
this.input.charCodeAt(this.pos + 2) ? 3 : 2, 61 === \
this.input.charCodeAt(this.pos + r3) ? this.finishOp(b.assign, r3 + 1) : \
this.finishOp(b.bitShift, r3)) : 33 !== t3 || 60 !== e3 || this.inModule || \
45 !== this.input.charCodeAt(this.pos + 2) || 45 !== \
this.input.charCodeAt(this.pos + 3) ? (61 === t3 && (r3 = 2), \
this.finishOp(b.relational, r3)) : (this.skipLineComment(4), \
this.skipSpace(), this.nextToken());\n          }, We.readToken_eq_excl = \
function(e3) {\n            var t3 = this.input.charCodeAt(this.pos + 1);\n   \
         return 61 === t3 ? this.finishOp(b.equality, 61 === \
this.input.charCodeAt(this.pos + 2) ? 3 : 2) : 61 === e3 && 62 === t3 && \
this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(b.arrow)) : \
this.finishOp(61 === e3 ? b.eq : b.prefix, 1);\n          }, \
We.readToken_question = function() {\n            var e3 = \
this.options.ecmaVersion;\n            if (e3 >= 11) {\n              var t3 \
= this.input.charCodeAt(this.pos + 1);\n              if (46 === t3) {\n      \
          var r3 = this.input.charCodeAt(this.pos + 2);\n                if \
(r3 < 48 || r3 > 57) return this.finishOp(b.questionDot, 2);\n              \
}\n              if (63 === t3) {\n                if (e3 >= 12) {\n          \
        if (61 === this.input.charCodeAt(this.pos + 2)) return \
this.finishOp(b.assign, 3);\n                }\n                return \
this.finishOp(b.coalesce, 2);\n              }\n            }\n            \
return this.finishOp(b.question, 1);\n          }, We.readToken_numberSign = \
function() {\n            var e3 = 35;\n            if \
(this.options.ecmaVersion >= 13 && (++this.pos, c(e3 = \
this.fullCharCodeAtPos(), true) || 92 === e3)) return \
this.finishToken(b.privateId, this.readWord1());\n            \
this.raise(this.pos, \"Unexpected character '\" + R(e3) + \"'\");\n          \
}, We.getTokenFromCode = function(e3) {\n            switch (e3) {\n          \
    case 46:\n                return this.readToken_dot();\n              \
case 40:\n                return ++this.pos, this.finishToken(b.parenL);\n    \
          case 41:\n                return ++this.pos, \
this.finishToken(b.parenR);\n              case 59:\n                return \
++this.pos, this.finishToken(b.semi);\n              case 44:\n               \
 return ++this.pos, this.finishToken(b.comma);\n              case 91:\n      \
          return ++this.pos, this.finishToken(b.bracketL);\n              \
case 93:\n                return ++this.pos, this.finishToken(b.bracketR);\n  \
            case 123:\n                return ++this.pos, \
this.finishToken(b.braceL);\n              case 125:\n                return \
++this.pos, this.finishToken(b.braceR);\n              case 58:\n             \
   return ++this.pos, this.finishToken(b.colon);\n              case 96:\n    \
            if (this.options.ecmaVersion < 6) break;\n                return \
++this.pos, this.finishToken(b.backQuote);\n              case 48:\n          \
      var t3 = this.input.charCodeAt(this.pos + 1);\n                if (120 \
=== t3 || 88 === t3) return this.readRadixNumber(16);\n                if \
(this.options.ecmaVersion >= 6) {\n                  if (111 === t3 || 79 === \
t3) return this.readRadixNumber(8);\n                  if (98 === t3 || 66 \
=== t3) return this.readRadixNumber(2);\n                }\n              \
case 49:\n              case 50:\n              case 51:\n              case \
52:\n              case 53:\n              case 54:\n              case 55:\n \
             case 56:\n              case 57:\n                return \
this.readNumber(false);\n              case 34:\n              case 39:\n     \
           return this.readString(e3);\n              case 47:\n              \
  return this.readToken_slash();\n              case 37:\n              case \
42:\n                return this.readToken_mult_modulo_exp(e3);\n             \
 case 124:\n              case 38:\n                return \
this.readToken_pipe_amp(e3);\n              case 94:\n                return \
this.readToken_caret();\n              case 43:\n              case 45:\n     \
           return this.readToken_plus_min(e3);\n              case 60:\n      \
        case 62:\n                return this.readToken_lt_gt(e3);\n          \
    case 61:\n              case 33:\n                return \
this.readToken_eq_excl(e3);\n              case 63:\n                return \
this.readToken_question();\n              case 126:\n                return \
this.finishOp(b.prefix, 1);\n              case 35:\n                return \
this.readToken_numberSign();\n            }\n            this.raise(this.pos, \
\"Unexpected character '\" + R(e3) + \"'\");\n          }, We.finishOp = \
function(e3, t3) {\n            var r3 = this.input.slice(this.pos, this.pos \
+ t3);\n            return this.pos += t3, this.finishToken(e3, r3);\n        \
  }, We.readRegexp = function() {\n            for (var e3, t3, r3 = \
this.pos; ; ) {\n              this.pos >= this.input.length && \
this.raise(r3, \"Unterminated regular expression\");\n              var n2 = \
this.input.charAt(this.pos);\n              if (T.test(n2) && this.raise(r3, \
\"Unterminated regular expression\"), e3) e3 = false;\n              else {\n \
               if (\"[\" === n2) t3 = true;\n                else if (\"]\" \
=== n2 && t3) t3 = false;\n                else if (\"/\" === n2 && !t3) \
break;\n                e3 = \"\\\\\" === n2;\n              }\n              \
++this.pos;\n            }\n            var i2 = this.input.slice(r3, \
this.pos);\n            ++this.pos;\n            var s2 = this.pos, a2 = \
this.readWord1();\n            this.containsEsc && this.unexpected(s2);\n     \
       var o2 = this.regexpState || (this.regexpState = new Fe(this));\n      \
      o2.reset(r3, i2, a2), this.validateRegExpFlags(o2), \
this.validateRegExpPattern(o2);\n            var u2 = null;\n            try \
{\n              u2 = new RegExp(i2, a2);\n            } catch (e4) {\n       \
     }\n            return this.finishToken(b.regexp, { pattern: i2, flags: \
a2, value: u2 });\n          }, We.readInt = function(e3, t3, r3) {\n         \
   for (var n2 = this.options.ecmaVersion >= 12 && void 0 === t3, i2 = r3 && \
48 === this.input.charCodeAt(this.pos), s2 = this.pos, a2 = 0, o2 = 0, u2 = \
0, l2 = null == t3 ? 1 / 0 : t3; u2 < l2; ++u2, ++this.pos) {\n              \
var h2 = this.input.charCodeAt(this.pos), c2 = void 0;\n              if (n2 \
&& 95 === h2) i2 && this.raiseRecoverable(this.pos, \"Numeric separator is \
not allowed in legacy octal numeric literals\"), 95 === o2 && \
this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one \
underscore\"), 0 === u2 && this.raiseRecoverable(this.pos, \"Numeric \
separator is not allowed at the first of digits\"), o2 = h2;\n              \
else {\n                if ((c2 = h2 >= 97 ? h2 - 97 + 10 : h2 >= 65 ? h2 - \
65 + 10 : h2 >= 48 && h2 <= 57 ? h2 - 48 : 1 / 0) >= e3) break;\n             \
   o2 = h2, a2 = a2 * e3 + c2;\n              }\n            }\n            \
return n2 && 95 === o2 && this.raiseRecoverable(this.pos - 1, \"Numeric \
separator is not allowed at the last of digits\"), this.pos === s2 || null != \
t3 && this.pos - s2 !== t3 ? null : a2;\n          }, We.readRadixNumber = \
function(e3) {\n            var t3 = this.pos;\n            this.pos += 2;\n  \
          var r3 = this.readInt(e3);\n            return null == r3 && \
this.raise(this.start + 2, \"Expected number in radix \" + e3), \
this.options.ecmaVersion >= 11 && 110 === this.input.charCodeAt(this.pos) ? \
(r3 = je(this.input.slice(t3, this.pos)), ++this.pos) : \
c(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly \
after number\"), this.finishToken(b.num, r3);\n          }, We.readNumber = \
function(e3) {\n            var t3 = this.pos;\n            e3 || null !== \
this.readInt(10, void 0, true) || this.raise(t3, \"Invalid number\");\n       \
     var r3 = this.pos - t3 >= 2 && 48 === this.input.charCodeAt(t3);\n       \
     r3 && this.strict && this.raise(t3, \"Invalid number\");\n            \
var n2 = this.input.charCodeAt(this.pos);\n            if (!r3 && !e3 && \
this.options.ecmaVersion >= 11 && 110 === n2) {\n              var i2 = \
je(this.input.slice(t3, this.pos));\n              return ++this.pos, \
c(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly \
after number\"), this.finishToken(b.num, i2);\n            }\n            r3 \
&& /[89]/.test(this.input.slice(t3, this.pos)) && (r3 = false), 46 !== n2 || \
r3 || (++this.pos, this.readInt(10), n2 = this.input.charCodeAt(this.pos)), \
69 !== n2 && 101 !== n2 || r3 || (43 !== (n2 = \
this.input.charCodeAt(++this.pos)) && 45 !== n2 || ++this.pos, null === \
this.readInt(10) && this.raise(t3, \"Invalid number\")), \
c(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly \
after number\");\n            var s2, a2 = (s2 = this.input.slice(t3, \
this.pos), r3 ? parseInt(s2, 8) : parseFloat(s2.replace(/_/g, \"\")));\n      \
      return this.finishToken(b.num, a2);\n          }, We.readCodePoint = \
function() {\n            var e3;\n            if (123 === \
this.input.charCodeAt(this.pos)) {\n              this.options.ecmaVersion < \
6 && this.unexpected();\n              var t3 = ++this.pos;\n              e3 \
= this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos), \
++this.pos, e3 > 1114111 && this.invalidStringToken(t3, \"Code point out of \
bounds\");\n            } else e3 = this.readHexChar(4);\n            return \
e3;\n          }, We.readString = function(e3) {\n            for (var t3 = \
\"\", r3 = ++this.pos; ; ) {\n              this.pos >= this.input.length && \
this.raise(this.start, \"Unterminated string constant\");\n              var \
n2 = this.input.charCodeAt(this.pos);\n              if (n2 === e3) break;\n  \
            92 === n2 ? (t3 += this.input.slice(r3, this.pos), t3 += \
this.readEscapedChar(false), r3 = this.pos) : 8232 === n2 || 8233 === n2 ? \
(this.options.ecmaVersion < 10 && this.raise(this.start, \"Unterminated \
string constant\"), ++this.pos, this.options.locations && (this.curLine++, \
this.lineStart = this.pos)) : (S(n2) && this.raise(this.start, \"Unterminated \
string constant\"), ++this.pos);\n            }\n            return t3 += \
this.input.slice(r3, this.pos++), this.finishToken(b.string, t3);\n          \
};\n          var He = {};\n          We.tryReadTemplateToken = function() \
{\n            this.inTemplateElement = true;\n            try {\n            \
  this.readTmplToken();\n            } catch (e3) {\n              if (e3 !== \
He) throw e3;\n              this.readInvalidTemplateToken();\n            \
}\n            this.inTemplateElement = false;\n          }, \
We.invalidStringToken = function(e3, t3) {\n            if \
(this.inTemplateElement && this.options.ecmaVersion >= 9) throw He;\n         \
   this.raise(e3, t3);\n          }, We.readTmplToken = function() {\n        \
    for (var e3 = \"\", t3 = this.pos; ; ) {\n              this.pos >= \
this.input.length && this.raise(this.start, \"Unterminated template\");\n     \
         var r3 = this.input.charCodeAt(this.pos);\n              if (96 === \
r3 || 36 === r3 && 123 === this.input.charCodeAt(this.pos + 1)) return \
this.pos !== this.start || this.type !== b.template && this.type !== \
b.invalidTemplate ? (e3 += this.input.slice(t3, this.pos), \
this.finishToken(b.template, e3)) : 36 === r3 ? (this.pos += 2, \
this.finishToken(b.dollarBraceL)) : (++this.pos, \
this.finishToken(b.backQuote));\n              if (92 === r3) e3 += \
this.input.slice(t3, this.pos), e3 += this.readEscapedChar(true), t3 = \
this.pos;\n              else if (S(r3)) {\n                switch (e3 += \
this.input.slice(t3, this.pos), ++this.pos, r3) {\n                  case \
13:\n                    10 === this.input.charCodeAt(this.pos) && \
++this.pos;\n                  case 10:\n                    e3 += \"\\n\";\n \
                   break;\n                  default:\n                    e3 \
+= String.fromCharCode(r3);\n                }\n                \
this.options.locations && (++this.curLine, this.lineStart = this.pos), t3 = \
this.pos;\n              } else ++this.pos;\n            }\n          }, \
We.readInvalidTemplateToken = function() {\n            for (; this.pos < \
this.input.length; this.pos++) switch (this.input[this.pos]) {\n              \
case \"\\\\\":\n                ++this.pos;\n                break;\n         \
     case \"$\":\n                if (\"{\" !== this.input[this.pos + 1]) \
break;\n              case \"`\":\n                return \
this.finishToken(b.invalidTemplate, this.input.slice(this.start, \
this.pos));\n              case \"\\r\":\n                \"\\n\" === \
this.input[this.pos + 1] && ++this.pos;\n              case \"\\n\":\n        \
      case \"\\u2028\":\n              case \"\\u2029\":\n                \
++this.curLine, this.lineStart = this.pos + 1;\n            }\n            \
this.raise(this.start, \"Unterminated template\");\n          }, \
We.readEscapedChar = function(e3) {\n            var t3 = \
this.input.charCodeAt(++this.pos);\n            switch (++this.pos, t3) {\n   \
           case 110:\n                return \"\\n\";\n              case \
114:\n                return \"\\r\";\n              case 120:\n              \
  return String.fromCharCode(this.readHexChar(2));\n              case 117:\n \
               return R(this.readCodePoint());\n              case 116:\n     \
           return \"\t\";\n              case 98:\n                return \
\"\\b\";\n              case 118:\n                return \"\\v\";\n          \
    case 102:\n                return \"\\f\";\n              case 13:\n      \
          10 === this.input.charCodeAt(this.pos) && ++this.pos;\n             \
 case 10:\n                return this.options.locations && (this.lineStart = \
this.pos, ++this.curLine), \"\";\n              case 56:\n              case \
57:\n                if (this.strict && this.invalidStringToken(this.pos - 1, \
\"Invalid escape sequence\"), e3) {\n                  var r3 = this.pos - \
1;\n                  this.invalidStringToken(r3, \"Invalid escape sequence \
in template string\");\n                }\n              default:\n           \
     if (t3 >= 48 && t3 <= 55) {\n                  var n2 = \
this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], i2 = parseInt(n2, \
8);\n                  return i2 > 255 && (n2 = n2.slice(0, -1), i2 = \
parseInt(n2, 8)), this.pos += n2.length - 1, t3 = \
this.input.charCodeAt(this.pos), \"0\" === n2 && 56 !== t3 && 57 !== t3 || \
!this.strict && !e3 || this.invalidStringToken(this.pos - 1 - n2.length, e3 ? \
\"Octal literal in template string\" : \"Octal literal in strict mode\"), \
String.fromCharCode(i2);\n                }\n                return S(t3) ? \
(this.options.locations && (this.lineStart = this.pos, ++this.curLine), \"\") \
: String.fromCharCode(t3);\n            }\n          }, We.readHexChar = \
function(e3) {\n            var t3 = this.pos, r3 = this.readInt(16, e3);\n   \
         return null === r3 && this.invalidStringToken(t3, \"Bad character \
escape sequence\"), r3;\n          }, We.readWord1 = function() {\n           \
 this.containsEsc = false;\n            for (var e3 = \"\", t3 = true, r3 = \
this.pos, n2 = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) \
{\n              var i2 = this.fullCharCodeAtPos();\n              if (p(i2, \
n2)) this.pos += i2 <= 65535 ? 1 : 2;\n              else {\n                \
if (92 !== i2) break;\n                this.containsEsc = true, e3 += \
this.input.slice(r3, this.pos);\n                var s2 = this.pos;\n         \
       117 !== this.input.charCodeAt(++this.pos) && \
this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \
\\\\uXXXX\"), ++this.pos;\n                var a2 = this.readCodePoint();\n   \
             (t3 ? c : p)(a2, n2) || this.invalidStringToken(s2, \"Invalid \
Unicode escape\"), e3 += R(a2), r3 = this.pos;\n              }\n             \
 t3 = false;\n            }\n            return e3 + this.input.slice(r3, \
this.pos);\n          }, We.readWord = function() {\n            var e3 = \
this.readWord1(), t3 = b.name;\n            return this.keywords.test(e3) && \
(t3 = x[e3]), this.finishToken(t3, e3);\n          };\n          var Xe = \
\"8.14.0\";\n          U.acorn = { Parser: U, version: Xe, defaultOptions: O, \
Position: N, SourceLocation: V, getLineInfo: M, Node: de, TokenType: d, \
tokTypes: b, keywordTypes: x, TokContext: ne, tokContexts: ie, \
isIdentifierChar: p, isIdentifierStart: c, Token: Be, isNewLine: S, \
lineBreak: T, lineBreakG: v, nonASCIIwhitespace: _ }, e2.Node = de, e2.Parser \
= U, e2.Position = N, e2.SourceLocation = V, e2.TokContext = ne, e2.Token = \
Be, e2.TokenType = d, e2.defaultOptions = O, e2.getLineInfo = M, \
e2.isIdentifierChar = p, e2.isIdentifierStart = c, e2.isNewLine = S, \
e2.keywordTypes = x, e2.lineBreak = T, e2.lineBreakG = v, \
e2.nonASCIIwhitespace = _, e2.parse = function(e3, t3) {\n            return \
U.parse(e3, t3);\n          }, e2.parseExpressionAt = function(e3, t3, r3) \
{\n            return U.parseExpressionAt(e3, t3, r3);\n          }, \
e2.tokContexts = ie, e2.tokTypes = b, e2.tokenizer = function(e3, t3) {\n     \
       return U.tokenizer(e3, t3);\n          }, e2.version = Xe;\n        \
});\n      }, {}], 2: [function(e, t, r) {\n      }, {}], 3: [function(e, t, \
r) {\n        function n(e2, t2 = {}) {\n          const { contextName: r2 = \
\"gl\", throwGetError: n2, useTrackablePrimitives: o, readPixelsFile: u, \
recording: l = [], variables: h = {}, onReadPixels: c, \
onUnrecognizedArgumentLookup: p } = t2, d = new Proxy(e2, { get: function(t3, \
d2) {\n            switch (d2) {\n              case \"addComment\":\n        \
        return E;\n              case \"checkThrowError\":\n                \
return w;\n              case \"getReadPixelsVariableName\":\n                \
return g;\n              case \"insertVariable\":\n                return \
v;\n              case \"reset\":\n                return T;\n              \
case \"setIndent\":\n                return A;\n              case \
\"toString\":\n                return b;\n              case \
\"getContextVariableName\":\n                return I;\n            }\n       \
     if (\"function\" == typeof e2[d2]) return function() {\n              \
switch (d2) {\n                case \"getError\":\n                  return \
n2 ? l.push(`${y}if (${r2}.getError() !== ${r2}.NONE) throw new \
Error('error');`) : l.push(`${y}${r2}.getError();`), e2.getError();\n         \
       case \"getExtension\": {\n                  const t6 = \
`${r2}Variables${m.length}`;\n                  l.push(`${y}const ${t6} = \
${r2}.getExtension('${arguments[0]}');`);\n                  const n3 = \
e2.getExtension(arguments[0]);\n                  if (n3 && \"object\" == \
typeof n3) {\n                    const e3 = i(n3, { getEntity: S, \
useTrackablePrimitives: o, recording: l, contextName: t6, contextVariables: \
m, variables: h, indent: y, onUnrecognizedArgumentLookup: p });\n             \
       return m.push(e3), e3;\n                  }\n                  return \
m.push(null), n3;\n                }\n                case \"readPixels\":\n  \
                const t5 = m.indexOf(arguments[6]);\n                  let \
a2;\n                  if (-1 === t5) {\n                    const e3 = \
function(e4) {\n                      if (h) {\n                        for \
(const t6 in h) if (h[t6] === e4) return t6;\n                      }\n       \
               return null;\n                    }(arguments[6]);\n           \
         e3 ? (a2 = e3, l.push(`${y}${e3}`)) : (a2 = \
`${r2}Variable${m.length}`, m.push(arguments[6]), l.push(`${y}const ${a2} = \
new ${arguments[6].constructor.name}(${arguments[6].length});`));\n           \
       } else a2 = `${r2}Variable${t5}`;\n                  g = a2;\n         \
         const d3 = [arguments[0], arguments[1], arguments[2], arguments[3], \
S(arguments[4]), S(arguments[5]), a2];\n                  return \
l.push(`${y}${r2}.readPixels(${d3.join(\", \")});`), u && function(e3, t6) \
{\n                    const n3 = `${r2}Variable${m.length}`, i2 = \
`imageDatum${x}`;\n                    l.push(`${y}let ${i2} = [\"P3\\\\n# \
${u}.ppm\\\\n\", ${e3}, ' ', ${t6}, \"\\\\n255\\\\n\"].join(\"\");`), \
l.push(`${y}for (let i = 0; i < ${i2}.length; i += 4) {`), l.push(`${y}  \
${i2} += ${n3}[i] + ' ' + ${n3}[i + 1] + ' ' + ${n3}[i + 2] + ' ';`), \
l.push(`${y}}`), l.push(`${y}if (typeof require !== \"undefined\") {`), \
l.push(`${y}  require('fs').writeFileSync('./${u}.ppm', ${i2});`), \
l.push(`${y}}`), x++;\n                  }(arguments[2], arguments[3]), c && \
c(a2, d3), e2.readPixels.apply(e2, arguments);\n                case \
\"drawBuffers\":\n                  return \
l.push(`${y}${r2}.drawBuffers([${s(arguments[0], { contextName: r2, \
contextVariables: m, getEntity: S, addVariable: _, variables: h, \
onUnrecognizedArgumentLookup: p })}]);`), e2.drawBuffers(arguments[0]);\n     \
         }\n              let t4 = e2[d2].apply(e2, arguments);\n             \
 switch (typeof t4) {\n                case \"undefined\":\n                  \
return void l.push(`${y}${k(d2, arguments)};`);\n                case \
\"number\":\n                case \"boolean\":\n                  if (o && -1 \
=== m.indexOf(a(t4))) {\n                    l.push(`${y}const \
${r2}Variable${m.length} = ${k(d2, arguments)};`), m.push(t4 = a(t4));\n      \
              break;\n                  }\n                default:\n         \
         null === t4 ? l.push(`${k(d2, arguments)};`) : l.push(`${y}const \
${r2}Variable${m.length} = ${k(d2, arguments)};`), m.push(t4);\n              \
}\n              return t4;\n            };\n            return f[e2[d2]] = \
d2, e2[d2];\n          } }), m = [], f = {};\n          let g, x = 0, y = \
\"\";\n          return d;\n          function b() {\n            return \
l.join(\"\\n\");\n          }\n          function T() {\n            for (; \
l.length > 0; ) l.pop();\n          }\n          function v(e3, t3) {\n       \
     h[e3] = t3;\n          }\n          function S(e3) {\n            const \
t3 = f[e3];\n            return t3 ? r2 + \".\" + t3 : e3;\n          }\n     \
     function A(e3) {\n            y = \" \".repeat(e3);\n          }\n       \
   function _(e3, t3) {\n            const n3 = `${r2}Variable${m.length}`;\n \
           return l.push(`${y}const ${n3} = ${t3};`), m.push(e3), n3;\n       \
   }\n          function E(e3) {\n            l.push(`${y}// ${e3}`);\n       \
   }\n          function w() {\n            l.push(`${y}(() => {\n${y}const \
error = ${r2}.getError();\n${y}if (error !== ${r2}.NONE) {\n${y}  const names \
= Object.getOwnPropertyNames(gl);\n${y}  for (let i = 0; i < names.length; \
i++) {\n${y}    const name = names[i];\n${y}    if (${r2}[name] === error) \
{\n${y}      throw new Error('${r2} threw ' + name);\n${y}    }\n${y}  \
}\n${y}}\n${y}})();`);\n          }\n          function k(e3, t3) {\n         \
   return `${r2}.${e3}(${s(t3, { contextName: r2, contextVariables: m, \
getEntity: S, addVariable: _, variables: h, onUnrecognizedArgumentLookup: p \
})})`;\n          }\n          function I(e3) {\n            const t3 = \
m.indexOf(e3);\n            return -1 !== t3 ? `${r2}Variable${t3}` : null;\n \
         }\n        }\n        function i(e2, t2) {\n          const r2 = new \
Proxy(e2, { get: function(t3, r3) {\n            if (\"function\" == typeof \
t3[r3]) return function() {\n              if (\"drawBuffersWEBGL\" === r3) \
return h.push(`${p}${i2}.drawBuffersWEBGL([${s(arguments[0], { contextName: \
i2, contextVariables: o, getEntity: m, addVariable: g, variables: c, \
onUnrecognizedArgumentLookup: d })}]);`), \
e2.drawBuffersWEBGL(arguments[0]);\n              let t4 = e2[r3].apply(e2, \
arguments);\n              switch (typeof t4) {\n                case \
\"undefined\":\n                  return void h.push(`${p}${f(r3, \
arguments)};`);\n                case \"number\":\n                case \
\"boolean\":\n                  l && -1 === o.indexOf(a(t4)) ? \
(h.push(`${p}const ${i2}Variable${o.length} = ${f(r3, arguments)};`), \
o.push(t4 = a(t4))) : (h.push(`${p}const ${i2}Variable${o.length} = ${f(r3, \
arguments)};`), o.push(t4));\n                  break;\n                \
default:\n                  null === t4 ? h.push(`${f(r3, arguments)};`) : \
h.push(`${p}const ${i2}Variable${o.length} = ${f(r3, arguments)};`), \
o.push(t4);\n              }\n              return t4;\n            };\n      \
      return n2[e2[r3]] = r3, e2[r3];\n          } }), n2 = {}, { \
contextName: i2, contextVariables: o, getEntity: u, useTrackablePrimitives: \
l, recording: h, variables: c, indent: p, onUnrecognizedArgumentLookup: d } = \
t2;\n          return r2;\n          function m(e3) {\n            return \
n2.hasOwnProperty(e3) ? `${i2}.${n2[e3]}` : u(e3);\n          }\n          \
function f(e3, t3) {\n            return `${i2}.${e3}(${s(t3, { contextName: \
i2, contextVariables: o, getEntity: m, addVariable: g, variables: c, \
onUnrecognizedArgumentLookup: d })})`;\n          }\n          function g(e3, \
t3) {\n            const r3 = `${i2}Variable${o.length}`;\n            return \
o.push(e3), h.push(`${p}const ${r3} = ${t3};`), r3;\n          }\n        }\n \
       function s(e2, t2) {\n          const { variables: r2, \
onUnrecognizedArgumentLookup: n2 } = t2;\n          return \
Array.from(e2).map((e3) => {\n            const i2 = function(e4) {\n         \
     if (r2) {\n                for (const t3 in r2) if \
(r2.hasOwnProperty(t3) && r2[t3] === e4) return t3;\n              }\n        \
      if (n2) return n2(e4);\n              return null;\n            \
}(e3);\n            return i2 || function(e4, t3) {\n              const { \
contextName: r3, contextVariables: n3, getEntity: i3, addVariable: s2, \
onUnrecognizedArgumentLookup: a2 } = t3;\n              if (void 0 === e4) \
return \"undefined\";\n              if (null === e4) return \"null\";\n      \
        const o = n3.indexOf(e4);\n              if (o > -1) return \
`${r3}Variable${o}`;\n              switch (e4.constructor.name) {\n          \
      case \"String\":\n                  const t4 = /\\n/.test(e4), r4 = \
/'/.test(e4), n4 = /\"/.test(e4);\n                  return t4 ? \"`\" + e4 + \
\"`\" : r4 && !n4 ? '\"' + e4 + '\"' : \"'\" + e4 + \"'\";\n                \
case \"Number\":\n                case \"Boolean\":\n                  return \
i3(e4);\n                case \"Array\":\n                  return s2(e4, \
`new ${e4.constructor.name}([${Array.from(e4).join(\",\")}])`);\n             \
   case \"Float32Array\":\n                case \"Uint8Array\":\n             \
   case \"Uint16Array\":\n                case \"Int32Array\":\n              \
    return s2(e4, `new \
${e4.constructor.name}(${JSON.stringify(Array.from(e4))})`);\n                \
default:\n                  if (a2) {\n                    const t5 = \
a2(e4);\n                    if (t5) return t5;\n                  }\n        \
          throw new Error(`unrecognized argument type \
${e4.constructor.name}`);\n              }\n            }(e3, t2);\n          \
}).join(\", \");\n        }\n        function a(e2) {\n          return new \
e2.constructor(e2);\n        }\n        void 0 !== t && (t.exports = { \
glWiretap: n, glExtensionWiretap: i }), \"undefined\" != typeof window && \
(n.glExtensionWiretap = i, window.glWiretap = n);\n      }, {}], 4: \
[function(e, t, r) {\n        function n(e2) {\n          const t2 = new \
Array(e2.length);\n          for (let r2 = 0; r2 < e2.length; r2++) {\n       \
     const n2 = e2[r2];\n            n2.toArray ? t2[r2] = n2.toArray() : \
t2[r2] = n2;\n          }\n          return t2;\n        }\n        function \
i() {\n          const e2 = n(arguments), t2 = new \
Float32Array(this.output.x);\n          for (let r2 = 0; r2 < this.output.x; \
r2++) this.thread.x = r2, this.thread.y = 0, this.thread.z = 0, t2[r2] = \
this._fn.apply(this, e2);\n          return t2;\n        }\n        function \
s() {\n          const e2 = n(arguments), t2 = new Array(this.output.y);\n    \
      for (let r2 = 0; r2 < this.output.y; r2++) {\n            const n2 = \
new Float32Array(this.output.x);\n            for (let t3 = 0; t3 < \
this.output.x; t3++) this.thread.x = t3, this.thread.y = r2, this.thread.z = \
0, n2[t3] = this._fn.apply(this, e2);\n            t2[r2] = n2;\n          \
}\n          return t2;\n        }\n        function a() {\n          const \
e2 = n(arguments);\n          for (let t2 = 0; t2 < this.output.y; t2++) for \
(let r2 = 0; r2 < this.output.x; r2++) this.thread.x = r2, this.thread.y = \
t2, this.thread.z = 0, this._fn.apply(this, e2);\n        }\n        function \
o() {\n          const e2 = n(arguments), t2 = new Array(this.output.z);\n    \
      for (let r2 = 0; r2 < this.output.z; r2++) {\n            const n2 = \
new Array(this.output.y);\n            for (let t3 = 0; t3 < this.output.y; \
t3++) {\n              const i2 = new Float32Array(this.output.x);\n          \
    for (let n3 = 0; n3 < this.output.x; n3++) this.thread.x = n3, \
this.thread.y = t3, this.thread.z = r2, i2[n3] = this._fn.apply(this, e2);\n  \
            n2[t3] = i2;\n            }\n            t2[r2] = n2;\n          \
}\n          return t2;\n        }\n        function u(e2) {\n          \
e2.setOutput = (t3) => {\n            e2.output = h(t3), e2.graphical && \
l(e2);\n          }, e2.toJSON = () => {\n            throw new Error(\"Not \
usable with gpuMock\");\n          }, e2.setConstants = (t3) => (e2.constants \
= t3, e2), e2.setGraphical = (t3) => (e2.graphical = t3, e2), e2.setCanvas = \
(t3) => (e2.canvas = t3, e2), e2.setContext = (t3) => (e2.context = t3, e2), \
e2.destroy = () => {\n          }, e2.validateSettings = () => {\n          \
}, e2.graphical && e2.output && l(e2), e2.exec = function() {\n            \
return new Promise((t3, r3) => {\n              try {\n                \
t3(e2.apply(e2, arguments));\n              } catch (e3) {\n                \
r3(e3);\n              }\n            });\n          }, e2.getPixels = (t3) \
=> {\n            const { x: r3, y: n2 } = e2.output;\n            return t3 \
? function(e3, t4, r4) {\n              const n3 = r4 / 2 | 0, i2 = 4 * t4, \
s2 = new Uint8ClampedArray(4 * t4), a2 = e3.slice(0);\n              for (let \
e4 = 0; e4 < n3; ++e4) {\n                const t5 = e4 * i2, n4 = (r4 - e4 - \
1) * i2;\n                s2.set(a2.subarray(t5, t5 + i2)), a2.copyWithin(t5, \
n4, n4 + i2), a2.set(s2, n4);\n              }\n              return a2;\n    \
        }(e2._imageData.data, r3, n2) : e2._imageData.data.slice(0);\n        \
  }, e2.color = function(t3, r3, n2, i2) {\n            void 0 === i2 && (i2 \
= 1), t3 = Math.floor(255 * t3), r3 = Math.floor(255 * r3), n2 = \
Math.floor(255 * n2), i2 = Math.floor(255 * i2);\n            const s2 = \
e2.output.x, a2 = e2.output.y, o2 = e2.thread.x + (a2 - e2.thread.y - 1) * \
s2;\n            e2._colorData[4 * o2 + 0] = t3, e2._colorData[4 * o2 + 1] = \
r3, e2._colorData[4 * o2 + 2] = n2, e2._colorData[4 * o2 + 3] = i2;\n         \
 };\n          const t2 = () => e2, r2 = [\"setWarnVarUsage\", \
\"setArgumentTypes\", \"setTactic\", \"setOptimizeFloatMemory\", \
\"setDebug\", \"setLoopMaxIterations\", \"setConstantTypes\", \
\"setFunctions\", \"setNativeFunctions\", \"setInjectedNative\", \
\"setPipeline\", \"setPrecision\", \"setOutputToTexture\", \"setImmutable\", \
\"setStrictIntegers\", \"setDynamicOutput\", \"setHardcodeConstants\", \
\"setDynamicArguments\", \"setUseLegacyEncoder\", \"setWarnVarUsage\", \
\"addSubKernel\"];\n          for (let n2 = 0; n2 < r2.length; n2++) \
e2[r2[n2]] = t2;\n          return e2;\n        }\n        function l(e2) {\n \
         const { x: t2, y: r2 } = e2.output;\n          if (e2.context && \
e2.context.createImageData) {\n            const n2 = new \
Uint8ClampedArray(t2 * r2 * 4);\n            e2._imageData = \
e2.context.createImageData(t2, r2), e2._colorData = n2;\n          } else {\n \
           const n2 = new Uint8ClampedArray(t2 * r2 * 4);\n            \
e2._imageData = { data: n2 }, e2._colorData = n2;\n          }\n        }\n   \
     function h(e2) {\n          let t2 = null;\n          if (e2.length) if \
(3 === e2.length) {\n            const [r2, n2, i2] = e2;\n            t2 = { \
x: r2, y: n2, z: i2 };\n          } else if (2 === e2.length) {\n            \
const [r2, n2] = e2;\n            t2 = { x: r2, y: n2 };\n          } else \
{\n            const [r2] = e2;\n            t2 = { x: r2 };\n          }\n   \
       else t2 = e2;\n          return t2;\n        }\n        t.exports = { \
gpuMock: function(e2, t2 = {}) {\n          const r2 = t2.output ? \
h(t2.output) : null;\n          function n2() {\n            return \
n2.output.z ? o.apply(n2, arguments) : n2.output.y ? n2.graphical ? \
a.apply(n2, arguments) : s.apply(n2, arguments) : i.apply(n2, arguments);\n   \
       }\n          return n2._fn = e2, n2.constants = t2.constants || null, \
n2.context = t2.context || null, n2.canvas = t2.canvas || null, n2.graphical \
= t2.graphical || false, n2._imageData = null, n2._colorData = null, \
n2.output = r2, n2.thread = { x: 0, y: 0, z: 0 }, u(n2);\n        } };\n      \
}, {}], 5: [function(e, t, r) {\n        const { utils: n } = \
e(\"./utils\");\n        t.exports = { alias: function(e2, t2) {\n          \
const r2 = t2.toString();\n          return new Function(`return function \
${e2} (${n.getArgumentNamesFromString(r2).join(\", \")}) {\n  \
${n.getFunctionBodyFromString(r2)}\n}`)();\n        } };\n      }, { \
\"./utils\": 114 }], 6: [function(e, t, r) {\n        const { FunctionNode: n \
} = e(\"../function-node\");\n        t.exports = { CPUFunctionNode: class \
extends n {\n          astFunction(e2, t2) {\n            if \
(!this.isRootKernel) {\n              t2.push(\"function\"), t2.push(\" \"), \
t2.push(this.name), t2.push(\"(\");\n              for (let e3 = 0; e3 < \
this.argumentNames.length; ++e3) {\n                const r2 = \
this.argumentNames[e3];\n                e3 > 0 && t2.push(\", \"), \
t2.push(\"user_\"), t2.push(r2);\n              }\n              t2.push(\") \
{\\n\");\n            }\n            for (let r2 = 0; r2 < \
e2.body.body.length; ++r2) this.astGeneric(e2.body.body[r2], t2), \
t2.push(\"\\n\");\n            return this.isRootKernel || t2.push(\"}\\n\"), \
t2;\n          }\n          astReturnStatement(e2, t2) {\n            const \
r2 = this.returnType || this.getType(e2.argument);\n            return \
this.returnType || (this.returnType = r2), this.isRootKernel ? \
(t2.push(this.leadingReturnStatement), this.astGeneric(e2.argument, t2), \
t2.push(\";\\n\"), t2.push(this.followingReturnStatement), \
t2.push(\"continue;\\n\")) : this.isSubKernel ? \
(t2.push(`subKernelResult_${this.name} = `), this.astGeneric(e2.argument, \
t2), t2.push(\";\"), t2.push(`return subKernelResult_${this.name};`)) : \
(t2.push(\"return \"), this.astGeneric(e2.argument, t2), t2.push(\";\")), \
t2;\n          }\n          astLiteral(e2, t2) {\n            if \
(isNaN(e2.value)) throw this.astErrorOutput(\"Non-numeric literal not \
supported : \" + e2.value, e2);\n            return t2.push(e2.value), t2;\n  \
        }\n          astBinaryExpression(e2, t2) {\n            return \
t2.push(\"(\"), this.astGeneric(e2.left, t2), t2.push(e2.operator), \
this.astGeneric(e2.right, t2), t2.push(\")\"), t2;\n          }\n          \
astIdentifierExpression(e2, t2) {\n            if (\"Identifier\" !== \
e2.type) throw this.astErrorOutput(\"IdentifierExpression - not an \
Identifier\", e2);\n            if (\"Infinity\" === e2.name) \
t2.push(\"Infinity\");\n            else this.constants && \
this.constants.hasOwnProperty(e2.name) ? t2.push(\"constants_\" + e2.name) : \
t2.push(\"user_\" + e2.name);\n            return t2;\n          }\n          \
astForStatement(e2, t2) {\n            if (\"ForStatement\" !== e2.type) \
throw this.astErrorOutput(\"Invalid for statement\", e2);\n            const \
r2 = [], n2 = [], i = [], s = [];\n            let a = null;\n            if \
(e2.init) {\n              this.pushState(\"in-for-loop-init\"), \
this.astGeneric(e2.init, r2);\n              for (let e3 = 0; e3 < r2.length; \
e3++) r2[e3].includes && r2[e3].includes(\",\") && (a = false);\n             \
 this.popState(\"in-for-loop-init\");\n            } else a = false;\n        \
    if (e2.test ? this.astGeneric(e2.test, n2) : a = false, e2.update ? \
this.astGeneric(e2.update, i) : a = false, e2.body && \
(this.pushState(\"loop-body\"), this.astGeneric(e2.body, s), \
this.popState(\"loop-body\")), null === a && (a = this.isSafe(e2.init) && \
this.isSafe(e2.test)), a) t2.push(`for \
(${r2.join(\"\")};${n2.join(\"\")};${i.join(\"\")}){\n`), \
t2.push(s.join(\"\")), t2.push(\"}\\n\");\n            else {\n              \
const e3 = this.getInternalVariableName(\"safeI\");\n              r2.length \
> 0 && t2.push(r2.join(\"\"), \";\\n\"), t2.push(`for (let \
${e3}=0;${e3}<LOOP_MAX;${e3}++){\n`), n2.length > 0 && t2.push(`if \
(!${n2.join(\"\")}) break;\n`), t2.push(s.join(\"\")), \
t2.push(`\n${i.join(\"\")};`), t2.push(\"}\\n\");\n            }\n            \
return t2;\n          }\n          astWhileStatement(e2, t2) {\n            \
if (\"WhileStatement\" !== e2.type) throw this.astErrorOutput(\"Invalid while \
statement\", e2);\n            return t2.push(\"for (let i = 0; i < LOOP_MAX; \
i++) {\"), t2.push(\"if (\"), this.astGeneric(e2.test, t2), t2.push(\") \
{\\n\"), this.astGeneric(e2.body, t2), t2.push(\"} else {\\n\"), \
t2.push(\"break;\\n\"), t2.push(\"}\\n\"), t2.push(\"}\\n\"), t2;\n          \
}\n          astDoWhileStatement(e2, t2) {\n            if \
(\"DoWhileStatement\" !== e2.type) throw this.astErrorOutput(\"Invalid while \
statement\", e2);\n            return t2.push(\"for (let i = 0; i < LOOP_MAX; \
i++) {\"), this.astGeneric(e2.body, t2), t2.push(\"if (!\"), \
this.astGeneric(e2.test, t2), t2.push(\") {\\n\"), t2.push(\"break;\\n\"), \
t2.push(\"}\\n\"), t2.push(\"}\\n\"), t2;\n          }\n          \
astAssignmentExpression(e2, t2) {\n            const r2 = \
this.getDeclaration(e2.left);\n            if (r2 && !r2.assignable) throw \
this.astErrorOutput(`Variable ${e2.left.name} is not assignable here`, e2);\n \
           return this.astGeneric(e2.left, t2), t2.push(e2.operator), \
this.astGeneric(e2.right, t2), t2;\n          }\n          \
astBlockStatement(e2, t2) {\n            if (this.isState(\"loop-body\")) {\n \
             this.pushState(\"block-body\");\n              for (let r2 = 0; \
r2 < e2.body.length; r2++) this.astGeneric(e2.body[r2], t2);\n              \
this.popState(\"block-body\");\n            } else {\n              \
t2.push(\"{\\n\");\n              for (let r2 = 0; r2 < e2.body.length; r2++) \
this.astGeneric(e2.body[r2], t2);\n              t2.push(\"}\\n\");\n         \
   }\n            return t2;\n          }\n          \
astVariableDeclaration(e2, t2) {\n            t2.push(`${e2.kind} `);\n       \
     const { declarations: r2 } = e2;\n            for (let e3 = 0; e3 < \
r2.length; e3++) {\n              e3 > 0 && t2.push(\",\");\n              \
const n2 = r2[e3], i = this.getDeclaration(n2.id);\n              i.valueType \
|| (i.valueType = this.getType(n2.init)), this.astGeneric(n2, t2);\n          \
  }\n            return this.isState(\"in-for-loop-init\") || t2.push(\";\"), \
t2;\n          }\n          astIfStatement(e2, t2) {\n            return \
t2.push(\"if (\"), this.astGeneric(e2.test, t2), t2.push(\")\"), \
\"BlockStatement\" === e2.consequent.type ? this.astGeneric(e2.consequent, \
t2) : (t2.push(\" {\\n\"), this.astGeneric(e2.consequent, t2), \
t2.push(\"\\n}\\n\")), e2.alternate && (t2.push(\"else \"), \
\"BlockStatement\" === e2.alternate.type || \"IfStatement\" === \
e2.alternate.type ? this.astGeneric(e2.alternate, t2) : (t2.push(\" {\\n\"), \
this.astGeneric(e2.alternate, t2), t2.push(\"\\n}\\n\"))), t2;\n          }\n \
         astSwitchStatement(e2, t2) {\n            const { discriminant: r2, \
cases: n2 } = e2;\n            t2.push(\"switch (\"), this.astGeneric(r2, \
t2), t2.push(\") {\\n\");\n            for (let e3 = 0; e3 < n2.length; e3++) \
null !== n2[e3].test ? (t2.push(\"case \"), this.astGeneric(n2[e3].test, t2), \
t2.push(\":\\n\"), n2[e3].consequent && n2[e3].consequent.length > 0 && \
(this.astGeneric(n2[e3].consequent, t2), t2.push(\"break;\\n\"))) : \
(t2.push(\"default:\\n\"), this.astGeneric(n2[e3].consequent, t2), \
n2[e3].consequent && n2[e3].consequent.length > 0 && \
t2.push(\"break;\\n\"));\n            t2.push(\"\\n}\");\n          }\n       \
   astThisExpression(e2, t2) {\n            return t2.push(\"_this\"), t2;\n  \
        }\n          astMemberExpression(e2, t2) {\n            const { \
signature: r2, type: n2, property: i, xProperty: s, yProperty: a, zProperty: \
o, name: u, origin: l } = this.getMemberExpressionDetails(e2);\n            \
switch (r2) {\n              case \"this.thread.value\":\n                \
return t2.push(`_this.thread.${u}`), t2;\n              case \
\"this.output.value\":\n                switch (u) {\n                  case \
\"x\":\n                    t2.push(\"outputX\");\n                    \
break;\n                  case \"y\":\n                    \
t2.push(\"outputY\");\n                    break;\n                  case \
\"z\":\n                    t2.push(\"outputZ\");\n                    \
break;\n                  default:\n                    throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                }\n      \
          return t2;\n              case \"value\":\n              default:\n \
               throw this.astErrorOutput(\"Unexpected expression\", e2);\n    \
          case \"value[]\":\n              case \"value[][]\":\n              \
case \"value[][][]\":\n              case \"value.value\":\n                \
if (\"Math\" === l) return t2.push(Math[u]), t2;\n                switch (i) \
{\n                  case \"r\":\n                    return \
t2.push(`user_${u}[0]`), t2;\n                  case \"g\":\n                 \
   return t2.push(`user_${u}[1]`), t2;\n                  case \"b\":\n       \
             return t2.push(`user_${u}[2]`), t2;\n                  case \
\"a\":\n                    return t2.push(`user_${u}[3]`), t2;\n             \
   }\n                break;\n              case \"this.constants.value\":\n  \
            case \"this.constants.value[]\":\n              case \
\"this.constants.value[][]\":\n              case \
\"this.constants.value[][][]\":\n                break;\n              case \
\"fn()[]\":\n                return this.astGeneric(e2.object, t2), \
t2.push(\"[\"), this.astGeneric(e2.property, t2), t2.push(\"]\"), t2;\n       \
       case \"fn()[][]\":\n                return \
this.astGeneric(e2.object.object, t2), t2.push(\"[\"), \
this.astGeneric(e2.object.property, t2), t2.push(\"]\"), t2.push(\"[\"), \
this.astGeneric(e2.property, t2), t2.push(\"]\"), t2;\n            }\n        \
    if (!e2.computed) switch (n2) {\n              case \"Number\":\n         \
     case \"Integer\":\n              case \"Float\":\n              case \
\"Boolean\":\n                return t2.push(`${l}_${u}`), t2;\n            \
}\n            const h = `${l}_${u}`;\n            {\n              let e3, \
r3;\n              if (\"constants\" === l) {\n                const t3 = \
this.constants[u];\n                r3 = \"Input\" === this.constantTypes[u], \
e3 = r3 ? t3.size : null;\n              } else r3 = this.isInput(u), e3 = r3 \
? this.argumentSizes[this.argumentNames.indexOf(u)] : null;\n              \
t2.push(`${h}`), o && a ? r3 ? (t2.push(\"[(\"), this.astGeneric(o, t2), \
t2.push(`*${this.dynamicArguments ? \"(outputY * outputX)\" : e3[1] * \
e3[0]})+(`), this.astGeneric(a, t2), t2.push(`*${this.dynamicArguments ? \
\"outputX\" : e3[0]})+`), this.astGeneric(s, t2), t2.push(\"]\")) : \
(t2.push(\"[\"), this.astGeneric(o, t2), t2.push(\"]\"), t2.push(\"[\"), \
this.astGeneric(a, t2), t2.push(\"]\"), t2.push(\"[\"), this.astGeneric(s, \
t2), t2.push(\"]\")) : a ? r3 ? (t2.push(\"[(\"), this.astGeneric(a, t2), \
t2.push(`*${this.dynamicArguments ? \"outputX\" : e3[0]})+`), \
this.astGeneric(s, t2), t2.push(\"]\")) : (t2.push(\"[\"), this.astGeneric(a, \
t2), t2.push(\"]\"), t2.push(\"[\"), this.astGeneric(s, t2), t2.push(\"]\")) \
: void 0 !== s && (t2.push(\"[\"), this.astGeneric(s, t2), t2.push(\"]\"));\n \
           }\n            return t2;\n          }\n          \
astCallExpression(e2, t2) {\n            if (\"CallExpression\" !== e2.type) \
throw this.astErrorOutput(\"Unknown CallExpression\", e2);\n            let \
r2 = this.astMemberExpressionUnroll(e2.callee);\n            \
this.calledFunctions.indexOf(r2) < 0 && this.calledFunctions.push(r2);\n      \
      this.isAstMathFunction(e2);\n            this.onFunctionCall && \
this.onFunctionCall(this.name, r2, e2.arguments), t2.push(r2), \
t2.push(\"(\");\n            const n2 = this.lookupFunctionArgumentTypes(r2) \
|| [];\n            for (let i = 0; i < e2.arguments.length; ++i) {\n         \
     const s = e2.arguments[i];\n              let a = this.getType(s);\n     \
         n2[i] || this.triggerImplyArgumentType(r2, i, a, this), i > 0 && \
t2.push(\", \"), this.astGeneric(s, t2);\n            }\n            return \
t2.push(\")\"), t2;\n          }\n          astArrayExpression(e2, t2) {\n    \
        const r2 = this.getType(e2), n2 = e2.elements.length, i = [];\n       \
     for (let t3 = 0; t3 < n2; ++t3) {\n              const r3 = [];\n        \
      this.astGeneric(e2.elements[t3], r3), i.push(r3.join(\"\"));\n          \
  }\n            switch (r2) {\n              case \"Matrix(2)\":\n           \
   case \"Matrix(3)\":\n              case \"Matrix(4)\":\n                \
t2.push(`[${i.join(\", \")}]`);\n                break;\n              \
default:\n                t2.push(`new Float32Array([${i.join(\", \")}])`);\n \
           }\n            return t2;\n          }\n          \
astDebuggerStatement(e2, t2) {\n            return t2.push(\"debugger;\"), \
t2;\n          }\n        } };\n      }, { \"../function-node\": 10 }], 7: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../utils\");\n      \
  t.exports = { cpuKernelString: function(e2, t2) {\n          const r2 = [], \
i = [], s = [], a = !/^function/.test(e2.color.toString());\n          if \
(r2.push(\"  const { context, canvas, constants: incomingConstants } = \
settings;\", `  const output = new \
Int32Array(${JSON.stringify(Array.from(e2.output))});`, `  const \
_constantTypes = ${JSON.stringify(e2.constantTypes)};`, `  const _constants = \
${function(e3, t3) {\n            const r3 = [];\n            for (const n2 \
in t3) {\n              if (!t3.hasOwnProperty(n2)) continue;\n              \
const i2 = t3[n2], s2 = e3[n2];\n              switch (i2) {\n                \
case \"Number\":\n                case \"Integer\":\n                case \
\"Float\":\n                case \"Boolean\":\n                  \
r3.push(`${n2}:${s2}`);\n                  break;\n                case \
\"Array(2)\":\n                case \"Array(3)\":\n                case \
\"Array(4)\":\n                case \"Matrix(2)\":\n                case \
\"Matrix(3)\":\n                case \"Matrix(4)\":\n                  \
r3.push(`${n2}:new \
${s2.constructor.name}(${JSON.stringify(Array.from(s2))})`);\n              \
}\n            }\n            return `{ ${r3.join()} }`;\n          \
}(e2.constants, e2.constantTypes)};`), i.push(\"    constants: _constants,\", \
\"    context,\", \"    output,\", \"    thread: {x: 0, y: 0, z: 0},\"), \
e2.graphical) {\n            r2.push(`  const _imageData = \
context.createImageData(${e2.output[0]}, ${e2.output[1]});`), r2.push(`  \
const _colorData = new Uint8ClampedArray(${e2.output[0]} * ${e2.output[1]} * \
4);`);\n            const t3 = n.flattenFunctionToString((a ? \"function \" : \
\"\") + e2.color.toString(), { thisLookup: (t4) => {\n              switch \
(t4) {\n                case \"_colorData\":\n                  return \
\"_colorData\";\n                case \"_imageData\":\n                  \
return \"_imageData\";\n                case \"output\":\n                  \
return \"output\";\n                case \"thread\":\n                  \
return \"this.thread\";\n              }\n              return \
JSON.stringify(e2[t4]);\n            }, findDependency: (e3, t4) => null }), \
o2 = n.flattenFunctionToString((a ? \"function \" : \"\") + \
e2.getPixels.toString(), { thisLookup: (t4) => {\n              switch (t4) \
{\n                case \"_colorData\":\n                  return \
\"_colorData\";\n                case \"_imageData\":\n                  \
return \"_imageData\";\n                case \"output\":\n                  \
return \"output\";\n                case \"thread\":\n                  \
return \"this.thread\";\n              }\n              return \
JSON.stringify(e2[t4]);\n            }, findDependency: () => null });\n      \
      i.push(\"    _imageData,\", \"    _colorData,\", `    color: ${t3},`), \
s.push(`  kernel.getPixels = ${o2};`);\n          }\n          const o = [], \
u = Object.keys(e2.constantTypes);\n          for (let t3 = 0; t3 < u.length; \
t3++) o.push(e2.constantTypes[u]);\n          if (-1 !== \
e2.argumentTypes.indexOf(\"HTMLImageArray\") || -1 !== \
o.indexOf(\"HTMLImageArray\")) {\n            const t3 = \
n.flattenFunctionToString((a ? \"function \" : \"\") + \
e2._imageTo3DArray.toString(), { doNotDefine: [\"canvas\"], findDependency: \
(t4, r3) => \"this\" === t4 ? (a ? \"function \" : \"\") + e2[r3].toString() \
: null, thisLookup: (e3) => {\n              switch (e3) {\n                \
case \"canvas\":\n                  return;\n                case \
\"context\":\n                  return \"context\";\n              }\n        \
    } });\n            s.push(t3), i.push(\"    _mediaTo2DArray,\"), \
i.push(\"    _imageTo3DArray,\");\n          } else if (-1 !== \
e2.argumentTypes.indexOf(\"HTMLImage\") || -1 !== o.indexOf(\"HTMLImage\")) \
{\n            const t3 = n.flattenFunctionToString((a ? \"function \" : \
\"\") + e2._mediaTo2DArray.toString(), { findDependency: (e3, t4) => null, \
thisLookup: (e3) => {\n              switch (e3) {\n                case \
\"canvas\":\n                  return \"settings.canvas\";\n                \
case \"context\":\n                  return \"settings.context\";\n           \
   }\n              throw new Error(\"unhandled thisLookup\");\n            } \
});\n            s.push(t3), i.push(\"    _mediaTo2DArray,\");\n          }\n \
         return `function(settings) {\n${r2.join(\"\\n\")}\n  for (const p in \
_constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    \
const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n  \
    case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case \
'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case \
'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if \
(incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + \
p + ' of type ' + type + ' cannot be resigned');\n        }\n        \
continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      \
throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = \
incomingConstants[p];\n  }\n  const kernel = (function() \
{\n${e2._kernelString}\n  })\n    .apply({ ${i.join(\"\\n\")} });\n  \
${s.join(\"\\n\")}\n  return kernel;\n}`;\n        } };\n      }, { \
\"../../utils\": 114 }], 8: [function(e, t, r) {\n        const { Kernel: n } \
= e(\"../kernel\"), { FunctionBuilder: i } = e(\"../function-builder\"), { \
CPUFunctionNode: s } = e(\"./function-node\"), { utils: a } = \
e(\"../../utils\"), { cpuKernelString: o } = e(\"./kernel-string\");\n        \
t.exports = { CPUKernel: class extends n {\n          static getFeatures() \
{\n            return this.features;\n          }\n          static get \
features() {\n            return Object.freeze({ kernelMap: true, \
isIntegerDivisionAccurate: true });\n          }\n          static get \
isSupported() {\n            return true;\n          }\n          static \
isContextMatch(e2) {\n            return false;\n          }\n          \
static get mode() {\n            return \"cpu\";\n          }\n          \
static nativeFunctionArguments() {\n            return null;\n          }\n   \
       static nativeFunctionReturnType() {\n            throw new \
Error(`Looking up native function return type not supported on \
${this.name}`);\n          }\n          static combineKernels(e2) {\n         \
   return e2;\n          }\n          static getSignature(e2, t2) {\n         \
   return \"cpu\" + (t2.length > 0 ? \":\" + t2.join(\",\") : \"\");\n        \
  }\n          constructor(e2, t2) {\n            super(e2, t2), \
this.mergeSettings(e2.settings || t2), this._imageData = null, \
this._colorData = null, this._kernelString = null, this._prependedString = \
[], this.thread = { x: 0, y: 0, z: 0 }, this.translatedSources = null;\n      \
    }\n          initCanvas() {\n            return \"undefined\" != typeof \
document ? document.createElement(\"canvas\") : \"undefined\" != typeof \
OffscreenCanvas ? new OffscreenCanvas(0, 0) : void 0;\n          }\n          \
initContext() {\n            return this.canvas ? \
this.canvas.getContext(\"2d\") : null;\n          }\n          \
initPlugins(e2) {\n            return [];\n          }\n          \
validateSettings(e2) {\n            if (!this.output || 0 === \
this.output.length) {\n              if (1 !== e2.length) throw new \
Error(\"Auto output only supported for kernels with only one input\");\n      \
        const t2 = a.getVariableType(e2[0], this.strictIntegers);\n           \
   if (\"Array\" === t2) this.output = a.getDimensions(t2);\n              \
else {\n                if (\"NumberTexture\" !== t2 && \"ArrayTexture(4)\" \
!== t2) throw new Error(\"Auto output not supported for input type: \" + \
t2);\n                this.output = e2[0].output;\n              }\n          \
  }\n            if (this.graphical && 2 !== this.output.length) throw new \
Error(\"Output must have 2 dimensions on graphical mode\");\n            \
this.checkOutput();\n          }\n          translateSource() {\n            \
if (this.leadingReturnStatement = this.output.length > 1 ? \"resultX[x] = \" \
: \"result[x] = \", this.subKernels) {\n              const e3 = [];\n        \
      for (let t2 = 0; t2 < this.subKernels.length; t2++) {\n                \
const { name: r2 } = this.subKernels[t2];\n                \
e3.push(this.output.length > 1 ? `resultX_${r2}[x] = \
subKernelResult_${r2};\n` : `result_${r2}[x] = subKernelResult_${r2};\n`);\n  \
            }\n              this.followingReturnStatement = e3.join(\"\");\n \
           }\n            const e2 = i.fromKernel(this, s);\n            \
this.translatedSources = e2.getPrototypes(\"kernel\"), this.graphical || \
this.returnType || (this.returnType = e2.getKernelResultType());\n          \
}\n          build() {\n            if (this.built) return;\n            if \
(this.setupConstants(), this.setupArguments(arguments), \
this.validateSettings(arguments), this.translateSource(), this.graphical) {\n \
             const { canvas: e3, output: t2 } = this;\n              if (!e3) \
throw new Error(\"no canvas available for using graphical output\");\n        \
      const r2 = t2[0], n2 = t2[1] || 1;\n              e3.width = r2, \
e3.height = n2, this._imageData = this.context.createImageData(r2, n2), \
this._colorData = new Uint8ClampedArray(r2 * n2 * 4);\n            }\n        \
    const e2 = this.getKernelString();\n            this.kernelString = e2, \
this.debug && (console.log(\"Function output:\"), console.log(e2));\n         \
   try {\n              this.run = new Function([], e2).bind(this)();\n       \
     } catch (e3) {\n              console.error(\"An error occurred \
compiling the javascript: \", e3);\n            }\n            \
this.buildSignature(arguments), this.built = true;\n          }\n          \
color(e2, t2, r2, n2) {\n            void 0 === n2 && (n2 = 1), e2 = \
Math.floor(255 * e2), t2 = Math.floor(255 * t2), r2 = Math.floor(255 * r2), \
n2 = Math.floor(255 * n2);\n            const i2 = this.output[0], s2 = \
this.output[1], a2 = this.thread.x + (s2 - this.thread.y - 1) * i2;\n         \
   this._colorData[4 * a2 + 0] = e2, this._colorData[4 * a2 + 1] = t2, \
this._colorData[4 * a2 + 2] = r2, this._colorData[4 * a2 + 3] = n2;\n         \
 }\n          getKernelString() {\n            if (null !== \
this._kernelString) return this._kernelString;\n            let e2 = null, { \
translatedSources: t2 } = this;\n            return t2.length > 1 ? t2 = \
t2.filter((t3) => /^function/.test(t3) ? t3 : (e2 = t3, false)) : e2 = \
t2.shift(), this._kernelString = `  const LOOP_MAX = \
${this._getLoopMaxString()};\n  ${this.injectedNative || \"\"}\n  const _this \
= this;\n  ${this._resultKernelHeader()}\n  ${this._processConstants()}\n  \
return (${this.argumentNames.map((e3) => \"user_\" + e3).join(\", \")}) => \
{\n    ${this._prependedString.join(\"\")}\n    ${this._earlyThrows()}\n    \
${this._processArguments()}\n    ${this.graphical ? \
this._graphicalKernelBody(e2) : this._resultKernelBody(e2)}\n    ${t2.length \
> 0 ? t2.join(\"\\n\") : \"\"}\n  };`;\n          }\n          toString() {\n \
           return o(this);\n          }\n          _getLoopMaxString() {\n    \
        return this.loopMaxIterations ? ` \
${parseInt(this.loopMaxIterations)};` : \" 1000;\";\n          }\n          \
_processConstants() {\n            if (!this.constants) return \"\";\n        \
    const e2 = [];\n            for (let t2 in this.constants) {\n            \
  switch (this.constantTypes[t2]) {\n                case \"HTMLCanvas\":\n   \
             case \"OffscreenCanvas\":\n                case \"HTMLImage\":\n \
               case \"ImageBitmap\":\n                case \"ImageData\":\n   \
             case \"HTMLVideo\":\n                  e2.push(`    const \
constants_${t2} = this._mediaTo2DArray(this.constants.${t2});\n`);\n          \
        break;\n                case \"HTMLImageArray\":\n                  \
e2.push(`    const constants_${t2} = \
this._imageTo3DArray(this.constants.${t2});\n`);\n                  break;\n  \
              case \"Input\":\n                  e2.push(`    const \
constants_${t2} = this.constants.${t2}.value;\n`);\n                  \
break;\n                default:\n                  e2.push(`    const \
constants_${t2} = this.constants.${t2};\n`);\n              }\n            \
}\n            return e2.join(\"\");\n          }\n          _earlyThrows() \
{\n            if (this.graphical) return \"\";\n            if \
(this.immutable) return \"\";\n            if (!this.pipeline) return \"\";\n \
           const e2 = [];\n            for (let t3 = 0; t3 < \
this.argumentTypes.length; t3++) \"Array\" === this.argumentTypes[t3] && \
e2.push(this.argumentNames[t3]);\n            if (0 === e2.length) return \
\"\";\n            const t2 = [];\n            for (let r2 = 0; r2 < \
e2.length; r2++) {\n              const n2 = e2[r2], i2 = \
this._mapSubKernels((e3) => `user_${n2} === result_${e3.name}`).join(\" || \
\");\n              t2.push(`user_${n2} === result${i2 ? ` || ${i2}` : \
\"\"}`);\n            }\n            return `if (${t2.join(\" || \")}) throw \
new Error('Source and destination arrays are the same.  Use immutable = \
true');`;\n          }\n          _processArguments() {\n            const e2 \
= [];\n            for (let t2 = 0; t2 < this.argumentTypes.length; t2++) {\n \
             const r2 = `user_${this.argumentNames[t2]}`;\n              \
switch (this.argumentTypes[t2]) {\n                case \"HTMLCanvas\":\n     \
           case \"OffscreenCanvas\":\n                case \"HTMLImage\":\n   \
             case \"ImageBitmap\":\n                case \"ImageData\":\n     \
           case \"HTMLVideo\":\n                  e2.push(`    ${r2} = \
this._mediaTo2DArray(${r2});\n`);\n                  break;\n                \
case \"HTMLImageArray\":\n                  e2.push(`    ${r2} = \
this._imageTo3DArray(${r2});\n`);\n                  break;\n                \
case \"Input\":\n                  e2.push(`    ${r2} = ${r2}.value;\n`);\n   \
               break;\n                case \"ArrayTexture(1)\":\n            \
    case \"ArrayTexture(2)\":\n                case \"ArrayTexture(3)\":\n    \
            case \"ArrayTexture(4)\":\n                case \
\"NumberTexture\":\n                case \"MemoryOptimizedNumberTexture\":\n  \
                e2.push(`\n    if (${r2}.toArray) {\n      if \
(!_this.textureCache) {\n        _this.textureCache = [];\n        \
_this.arrayCache = [];\n      }\n      const textureIndex = \
_this.textureCache.indexOf(${r2});\n      if (textureIndex !== -1) {\n        \
${r2} = _this.arrayCache[textureIndex];\n      } else {\n        \
_this.textureCache.push(${r2});\n        ${r2} = ${r2}.toArray();\n        \
_this.arrayCache.push(${r2});\n      }\n    }`);\n              }\n           \
 }\n            return e2.join(\"\");\n          }\n          \
_mediaTo2DArray(e2) {\n            const t2 = this.canvas, r2 = e2.width > 0 \
? e2.width : e2.videoWidth, n2 = e2.height > 0 ? e2.height : \
e2.videoHeight;\n            t2.width < r2 && (t2.width = r2), t2.height < n2 \
&& (t2.height = n2);\n            const i2 = this.context;\n            let \
s2;\n            e2.constructor === ImageData ? s2 = e2.data : \
(i2.drawImage(e2, 0, 0, r2, n2), s2 = i2.getImageData(0, 0, r2, n2).data);\n  \
          const a2 = new Array(n2);\n            let o2 = 0;\n            for \
(let e3 = n2 - 1; e3 >= 0; e3--) {\n              const t3 = a2[e3] = new \
Array(r2);\n              for (let e4 = 0; e4 < r2; e4++) {\n                \
const r3 = new Float32Array(4);\n                r3[0] = s2[o2++] / 255, \
r3[1] = s2[o2++] / 255, r3[2] = s2[o2++] / 255, r3[3] = s2[o2++] / 255, \
t3[e4] = r3;\n              }\n            }\n            return a2;\n        \
  }\n          getPixels(e2) {\n            const [t2, r2] = this.output;\n   \
         return e2 ? a.flipPixels(this._imageData.data, t2, r2) : \
this._imageData.data.slice(0);\n          }\n          _imageTo3DArray(e2) \
{\n            const t2 = new Array(e2.length);\n            for (let r2 = 0; \
r2 < e2.length; r2++) t2[r2] = this._mediaTo2DArray(e2[r2]);\n            \
return t2;\n          }\n          _resultKernelHeader() {\n            if \
(this.graphical) return \"\";\n            if (this.immutable) return \"\";\n \
           if (!this.pipeline) return \"\";\n            switch \
(this.output.length) {\n              case 1:\n                return \
this._mutableKernel1DResults();\n              case 2:\n                \
return this._mutableKernel2DResults();\n              case 3:\n               \
 return this._mutableKernel3DResults();\n            }\n          }\n         \
 _resultKernelBody(e2) {\n            switch (this.output.length) {\n         \
     case 1:\n                return (!this.immutable && this.pipeline ? \
this._resultMutableKernel1DLoop(e2) : this._resultImmutableKernel1DLoop(e2)) \
+ this._kernelOutput();\n              case 2:\n                return \
(!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(e2) : \
this._resultImmutableKernel2DLoop(e2)) + this._kernelOutput();\n              \
case 3:\n                return (!this.immutable && this.pipeline ? \
this._resultMutableKernel3DLoop(e2) : this._resultImmutableKernel3DLoop(e2)) \
+ this._kernelOutput();\n              default:\n                throw new \
Error(\"unsupported size kernel\");\n            }\n          }\n          \
_graphicalKernelBody(e2) {\n            if (2 === this.output.length) return \
this._graphicalKernel2DLoop(e2) + this._graphicalOutput();\n            throw \
new Error(\"unsupported size kernel\");\n          }\n          \
_graphicalOutput() {\n            return \"\\n    \
this._imageData.data.set(this._colorData);\\n    \
this.context.putImageData(this._imageData, 0, 0);\\n    return;\";\n          \
}\n          _getKernelResultTypeConstructorString() {\n            switch \
(this.returnType) {\n              case \"LiteralInteger\":\n              \
case \"Number\":\n              case \"Integer\":\n              case \
\"Float\":\n                return \"Float32Array\";\n              case \
\"Array(2)\":\n              case \"Array(3)\":\n              case \
\"Array(4)\":\n                return \"Array\";\n              default:\n    \
            if (this.graphical) return \"Float32Array\";\n                \
throw new Error(`unhandled returnType ${this.returnType}`);\n            }\n  \
        }\n          _resultImmutableKernel1DLoop(e2) {\n            const t2 \
= this._getKernelResultTypeConstructorString();\n            return `  const \
outputX = _this.output[0];\n    const result = new ${t2}(outputX);\n    \
${this._mapSubKernels((e3) => `const result_${e3.name} = new \
${t2}(outputX);\n`).join(\"    \")}\n    ${this._mapSubKernels((e3) => `let \
subKernelResult_${e3.name};\n`).join(\"    \")}\n    for (let x = 0; x < \
outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      \
this.thread.z = 0;\n      ${e2}\n    }`;\n          }\n          \
_mutableKernel1DResults() {\n            const e2 = \
this._getKernelResultTypeConstructorString();\n            return `  const \
outputX = _this.output[0];\n    const result = new ${e2}(outputX);\n    \
${this._mapSubKernels((t2) => `const result_${t2.name} = new \
${e2}(outputX);\n`).join(\"    \")}\n    ${this._mapSubKernels((e3) => `let \
subKernelResult_${e3.name};\n`).join(\"    \")}`;\n          }\n          \
_resultMutableKernel1DLoop(e2) {\n            return `  const outputX = \
_this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      \
this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      \
${e2}\n    }`;\n          }\n          _resultImmutableKernel2DLoop(e2) {\n   \
         const t2 = this._getKernelResultTypeConstructorString();\n           \
 return `  const outputX = _this.output[0];\n    const outputY = \
_this.output[1];\n    const result = new Array(outputY);\n    \
${this._mapSubKernels((e3) => `const result_${e3.name} = new \
Array(outputY);\n`).join(\"    \")}\n    ${this._mapSubKernels((e3) => `let \
subKernelResult_${e3.name};\n`).join(\"    \")}\n    for (let y = 0; y < \
outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      \
const resultX = result[y] = new ${t2}(outputX);\n      \
${this._mapSubKernels((e3) => `const resultX_${e3.name} = \
result_${e3.name}[y] = new ${t2}(outputX);\n`).join(\"\")}\n      for (let x \
= 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${e2}\n      \
}\n    }`;\n          }\n          _mutableKernel2DResults() {\n            \
const e2 = this._getKernelResultTypeConstructorString();\n            return \
`  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n   \
 const result = new Array(outputY);\n    ${this._mapSubKernels((e3) => `const \
result_${e3.name} = new Array(outputY);\n`).join(\"    \")}\n    \
${this._mapSubKernels((e3) => `let subKernelResult_${e3.name};\n`).join(\"    \
\")}\n    for (let y = 0; y < outputY; y++) {\n      const resultX = \
result[y] = new ${e2}(outputX);\n      ${this._mapSubKernels((t2) => `const \
resultX_${t2.name} = result_${t2.name}[y] = new \
${e2}(outputX);\n`).join(\"\")}\n    }`;\n          }\n          \
_resultMutableKernel2DLoop(e2) {\n            const t2 = \
this._getKernelResultTypeConstructorString();\n            return `  const \
outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for \
(let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      \
this.thread.y = y;\n      const resultX = result[y];\n      \
${this._mapSubKernels((e3) => `const resultX_${e3.name} = \
result_${e3.name}[y] = new ${t2}(outputX);\n`).join(\"\")}\n      for (let x \
= 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${e2}\n      \
}\n    }`;\n          }\n          _graphicalKernel2DLoop(e2) {\n            \
return `  const outputX = _this.output[0];\n    const outputY = \
_this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      \
this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < \
outputX; x++) {\n        this.thread.x = x;\n        ${e2}\n      }\n    \
}`;\n          }\n          _resultImmutableKernel3DLoop(e2) {\n            \
const t2 = this._getKernelResultTypeConstructorString();\n            return \
`  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n   \
 const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n   \
 ${this._mapSubKernels((e3) => `const result_${e3.name} = new \
Array(outputZ);\n`).join(\"    \")}\n    ${this._mapSubKernels((e3) => `let \
subKernelResult_${e3.name};\n`).join(\"    \")}\n    for (let z = 0; z < \
outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = \
new Array(outputY);\n      ${this._mapSubKernels((e3) => `const \
resultY_${e3.name} = result_${e3.name}[z] = new Array(outputY);\n`).join(\"   \
   \")}\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = \
y;\n        const resultX = resultY[y] = new ${t2}(outputX);\n        \
${this._mapSubKernels((e3) => `const resultX_${e3.name} = \
resultY_${e3.name}[y] = new ${t2}(outputX);\n`).join(\"        \")}\n        \
for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          \
${e2}\n        }\n      }\n    }`;\n          }\n          \
_mutableKernel3DResults() {\n            const e2 = \
this._getKernelResultTypeConstructorString();\n            return `  const \
outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const \
outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    \
${this._mapSubKernels((e3) => `const result_${e3.name} = new \
Array(outputZ);\n`).join(\"    \")}\n    ${this._mapSubKernels((e3) => `let \
subKernelResult_${e3.name};\n`).join(\"    \")}\n    for (let z = 0; z < \
outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      \
${this._mapSubKernels((e3) => `const resultY_${e3.name} = \
result_${e3.name}[z] = new Array(outputY);\n`).join(\"      \")}\n      for \
(let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new \
${e2}(outputX);\n        ${this._mapSubKernels((t2) => `const \
resultX_${t2.name} = resultY_${t2.name}[y] = new ${e2}(outputX);\n`).join(\"  \
      \")}\n      }\n    }`;\n          }\n          \
_resultMutableKernel3DLoop(e2) {\n            return `  const outputX = \
_this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = \
_this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      \
this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y \
< outputY; y++) {\n        this.thread.y = y;\n        const resultX = \
resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          \
this.thread.x = x;\n          ${e2}\n        }\n      }\n    }`;\n          \
}\n          _kernelOutput() {\n            return this.subKernels ? `\n    \
return {\n      result: result,\n      ${this.subKernels.map((e2) => \
`${e2.property}: result_${e2.name}`).join(\",\\n      \")}\n    };` : \"\\n   \
 return result;\";\n          }\n          _mapSubKernels(e2) {\n            \
return null === this.subKernels ? [\"\"] : this.subKernels.map(e2);\n         \
 }\n          destroy(e2) {\n            e2 && delete this.canvas;\n          \
}\n          static destroyContext(e2) {\n          }\n          toJSON() {\n \
           const e2 = super.toJSON();\n            return e2.functionNodes = \
i.fromKernel(this, s).toJSON(), e2;\n          }\n          setOutput(e2) {\n \
           super.setOutput(e2);\n            const [t2, r2] = this.output;\n  \
          this.graphical && (this._imageData = \
this.context.createImageData(t2, r2), this._colorData = new \
Uint8ClampedArray(t2 * r2 * 4));\n          }\n          prependString(e2) \
{\n            if (this._kernelString) throw new Error(\"Kernel already \
built\");\n            this._prependedString.push(e2);\n          }\n         \
 hasPrependString(e2) {\n            return this._prependedString.indexOf(e2) \
> -1;\n          }\n        } };\n      }, { \"../../utils\": 114, \
\"../function-builder\": 9, \"../kernel\": 36, \"./function-node\": 6, \
\"./kernel-string\": 7 }], 9: [function(e, t, r) {\n        class n {\n       \
   static fromKernel(e2, t2, r2) {\n            const { kernelArguments: i, \
kernelConstants: s, argumentNames: a, argumentSizes: o, argumentBitRatios: u, \
constants: l, constantBitRatios: h, debug: c, loopMaxIterations: p, \
nativeFunctions: d, output: m, optimizeFloatMemory: f, precision: g, plugins: \
x, source: y, subKernels: b, functions: T, leadingReturnStatement: v, \
followingReturnStatement: S, dynamicArguments: A, dynamicOutput: _ } = e2, E \
= new Array(i.length), w = {};\n            for (let e3 = 0; e3 < i.length; \
e3++) E[e3] = i[e3].type;\n            for (let e3 = 0; e3 < s.length; e3++) \
{\n              const t3 = s[e3];\n              w[t3.name] = t3.type;\n     \
       }\n            const k = (e3, t3) => G.needsArgumentType(e3, t3), I = \
(e3, t3, r3) => {\n              G.assignArgumentType(e3, t3, r3);\n          \
  }, D = (e3, t3, r3) => G.lookupReturnType(e3, t3, r3), C = (e3) => \
G.lookupFunctionArgumentTypes(e3), $ = (e3, t3) => \
G.lookupFunctionArgumentName(e3, t3), L = (e3, t3) => \
G.lookupFunctionArgumentBitRatio(e3, t3), R = (e3, t3, r3, n2) => {\n         \
     G.assignArgumentType(e3, t3, r3, n2);\n            }, F = (e3, t3, r3, \
n2) => {\n              G.assignArgumentBitRatio(e3, t3, r3, n2);\n           \
 }, N = (e3, t3, r3) => {\n              G.trackFunctionCall(e3, t3, r3);\n   \
         }, V = (e3, r3) => {\n              const n2 = [];\n              \
for (let t3 = 0; t3 < e3.params.length; t3++) n2.push(e3.params[t3].name);\n  \
            const i2 = new t2(r3, Object.assign({}, M, { returnType: null, \
ast: e3, name: e3.id.name, argumentNames: n2, lookupReturnType: D, \
lookupFunctionArgumentTypes: C, lookupFunctionArgumentName: $, \
lookupFunctionArgumentBitRatio: L, needsArgumentType: k, assignArgumentType: \
I, triggerImplyArgumentType: R, triggerImplyArgumentBitRatio: F, \
onFunctionCall: N }));\n              i2.traceFunctionAST(e3), \
G.addFunctionNode(i2);\n            }, M = Object.assign({ isRootKernel: \
false, onNestedFunction: V, lookupReturnType: D, lookupFunctionArgumentTypes: \
C, lookupFunctionArgumentName: $, lookupFunctionArgumentBitRatio: L, \
needsArgumentType: k, assignArgumentType: I, triggerImplyArgumentType: R, \
triggerImplyArgumentBitRatio: F, onFunctionCall: N, optimizeFloatMemory: f, \
precision: g, constants: l, constantTypes: w, constantBitRatios: h, debug: c, \
loopMaxIterations: p, output: m, plugins: x, dynamicArguments: A, \
dynamicOutput: _ }, r2 || {}), O = Object.assign({}, M, { isRootKernel: true, \
name: \"kernel\", argumentNames: a, argumentTypes: E, argumentSizes: o, \
argumentBitRatios: u, leadingReturnStatement: v, followingReturnStatement: S \
});\n            if (\"object\" == typeof y && y.functionNodes) return new \
n().fromJSON(y.functionNodes, t2);\n            const z = new t2(y, O);\n     \
       let P = null;\n            T && (P = T.map((e3) => new t2(e3.source, { \
returnType: e3.returnType, argumentTypes: e3.argumentTypes, output: m, \
plugins: x, constants: l, constantTypes: w, constantBitRatios: h, \
optimizeFloatMemory: f, precision: g, lookupReturnType: D, \
lookupFunctionArgumentTypes: C, lookupFunctionArgumentName: $, \
lookupFunctionArgumentBitRatio: L, needsArgumentType: k, assignArgumentType: \
I, triggerImplyArgumentType: R, triggerImplyArgumentBitRatio: F, \
onFunctionCall: N, onNestedFunction: V })));\n            let K = null;\n     \
       b && (K = b.map((e3) => {\n              const { name: r3, source: n2 \
} = e3;\n              return new t2(n2, Object.assign({}, M, { name: r3, \
isSubKernel: true, isRootKernel: false }));\n            }));\n            \
const G = new n({ kernel: e2, rootNode: z, functionNodes: P, nativeFunctions: \
d, subKernelNodes: K });\n            return G;\n          }\n          \
constructor(e2) {\n            if (e2 = e2 || {}, this.kernel = e2.kernel, \
this.rootNode = e2.rootNode, this.functionNodes = e2.functionNodes || [], \
this.subKernelNodes = e2.subKernelNodes || [], this.nativeFunctions = \
e2.nativeFunctions || [], this.functionMap = {}, this.nativeFunctionNames = \
[], this.lookupChain = [], this.functionNodeDependencies = {}, \
this.functionCalls = {}, this.rootNode && (this.functionMap.kernel = \
this.rootNode), this.functionNodes) for (let e3 = 0; e3 < \
this.functionNodes.length; e3++) \
this.functionMap[this.functionNodes[e3].name] = this.functionNodes[e3];\n     \
       if (this.subKernelNodes) for (let e3 = 0; e3 < \
this.subKernelNodes.length; e3++) \
this.functionMap[this.subKernelNodes[e3].name] = this.subKernelNodes[e3];\n   \
         if (this.nativeFunctions) for (let e3 = 0; e3 < \
this.nativeFunctions.length; e3++) {\n              const t2 = \
this.nativeFunctions[e3];\n              \
this.nativeFunctionNames.push(t2.name);\n            }\n          }\n         \
 addFunctionNode(e2) {\n            if (!e2.name) throw new \
Error(\"functionNode.name needs set\");\n            \
this.functionMap[e2.name] = e2, e2.isRootKernel && (this.rootNode = e2);\n    \
      }\n          traceFunctionCalls(e2, t2) {\n            if (e2 = e2 || \
\"kernel\", t2 = t2 || [], this.nativeFunctionNames.indexOf(e2) > -1) {\n     \
         const r3 = t2.indexOf(e2);\n              if (-1 === r3) \
t2.push(e2);\n              else {\n                const e3 = t2.splice(r3, \
1)[0];\n                t2.push(e3);\n              }\n              return \
t2;\n            }\n            const r2 = this.functionMap[e2];\n            \
if (r2) {\n              const n2 = t2.indexOf(e2);\n              if (-1 === \
n2) {\n                t2.push(e2), r2.toString();\n                for (let \
e3 = 0; e3 < r2.calledFunctions.length; ++e3) \
this.traceFunctionCalls(r2.calledFunctions[e3], t2);\n              } else \
{\n                const e3 = t2.splice(n2, 1)[0];\n                \
t2.push(e3);\n              }\n            }\n            return t2;\n        \
  }\n          getPrototypeString(e2) {\n            return \
this.getPrototypes(e2).join(\"\\n\");\n          }\n          \
getPrototypes(e2) {\n            return this.rootNode && \
this.rootNode.toString(), e2 ? \
this.getPrototypesFromFunctionNames(this.traceFunctionCalls(e2, \
[]).reverse()) : \
this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n         \
 }\n          getStringFromFunctionNames(e2) {\n            const t2 = [];\n  \
          for (let r2 = 0; r2 < e2.length; ++r2) {\n              \
this.functionMap[e2[r2]] && t2.push(this.functionMap[e2[r2]].toString());\n   \
         }\n            return t2.join(\"\\n\");\n          }\n          \
getPrototypesFromFunctionNames(e2) {\n            const t2 = [];\n            \
for (let r2 = 0; r2 < e2.length; ++r2) {\n              const n2 = e2[r2], i \
= this.nativeFunctionNames.indexOf(n2);\n              if (i > -1) {\n        \
        t2.push(this.nativeFunctions[i].source);\n                continue;\n \
             }\n              const s = this.functionMap[n2];\n              \
s && t2.push(s.toString());\n            }\n            return t2;\n          \
}\n          toJSON() {\n            return \
this.traceFunctionCalls(this.rootNode.name).reverse().map((e2) => {\n         \
     const t2 = this.nativeFunctions.indexOf(e2);\n              if (t2 > -1) \
return { name: e2, source: this.nativeFunctions[t2].source };\n              \
if (this.functionMap[e2]) return this.functionMap[e2].toJSON();\n             \
 throw new Error(`function ${e2} not found`);\n            });\n          }\n \
         fromJSON(e2, t2) {\n            this.functionMap = {};\n            \
for (let r2 = 0; r2 < e2.length; r2++) {\n              const n2 = e2[r2];\n  \
            this.functionMap[n2.settings.name] = new t2(n2.ast, \
n2.settings);\n            }\n            return this;\n          }\n         \
 getString(e2) {\n            return e2 ? \
this.getStringFromFunctionNames(this.traceFunctionCalls(e2).reverse()) : \
this.getStringFromFunctionNames(Object.keys(this.functionMap));\n          \
}\n          lookupReturnType(e2, t2, r2) {\n            if \
(\"CallExpression\" !== t2.type) throw new Error(`expected ast type of \
\"CallExpression\", but is ${t2.type}`);\n            if \
(this._isNativeFunction(e2)) return \
this._lookupNativeFunctionReturnType(e2);\n            if \
(this._isFunction(e2)) {\n              const n2 = this._getFunction(e2);\n   \
           if (n2.returnType) return n2.returnType;\n              {\n        \
        for (let e4 = 0; e4 < this.lookupChain.length; e4++) if \
(this.lookupChain[e4].ast === t2) {\n                  if (0 === \
n2.argumentTypes.length && t2.arguments.length > 0) {\n                    \
const i = t2.arguments;\n                    for (let t3 = 0; t3 < i.length; \
t3++) this.lookupChain.push({ name: r2.name, ast: i[e4], requestingNode: r2 \
}), n2.argumentTypes[t3] = r2.getType(i[t3]), this.lookupChain.pop();\n       \
             return n2.returnType = n2.getType(n2.getJsAST());\n              \
    }\n                  throw new Error(\"circlical logic detected!\");\n    \
            }\n                this.lookupChain.push({ name: r2.name, ast: \
t2, requestingNode: r2 });\n                const e3 = \
n2.getType(n2.getJsAST());\n                return this.lookupChain.pop(), \
n2.returnType = e3;\n              }\n            }\n            return \
null;\n          }\n          _getFunction(e2) {\n            return \
this._isFunction(e2) || new Error(`Function ${e2} not found`), \
this.functionMap[e2];\n          }\n          _isFunction(e2) {\n            \
return Boolean(this.functionMap[e2]);\n          }\n          \
_getNativeFunction(e2) {\n            for (let t2 = 0; t2 < \
this.nativeFunctions.length; t2++) if (this.nativeFunctions[t2].name === e2) \
return this.nativeFunctions[t2];\n            return null;\n          }\n     \
     _isNativeFunction(e2) {\n            return \
Boolean(this._getNativeFunction(e2));\n          }\n          \
_lookupNativeFunctionReturnType(e2) {\n            let t2 = \
this._getNativeFunction(e2);\n            if (t2) return t2.returnType;\n     \
       throw new Error(`Native function ${e2} not found`);\n          }\n     \
     lookupFunctionArgumentTypes(e2) {\n            return \
this._isNativeFunction(e2) ? this._getNativeFunction(e2).argumentTypes : \
this._isFunction(e2) ? this._getFunction(e2).argumentTypes : null;\n          \
}\n          lookupFunctionArgumentName(e2, t2) {\n            return \
this._getFunction(e2).argumentNames[t2];\n          }\n          \
lookupFunctionArgumentBitRatio(e2, t2) {\n            if \
(!this._isFunction(e2)) throw new Error(\"function not found\");\n            \
if (this.rootNode.name === e2) {\n              const e3 = \
this.rootNode.argumentNames.indexOf(t2);\n              if (-1 !== e3) return \
this.rootNode.argumentBitRatios[e3];\n            }\n            const r2 = \
this._getFunction(e2), n2 = r2.argumentNames.indexOf(t2);\n            if (-1 \
=== n2) throw new Error(\"argument not found\");\n            const i = \
r2.argumentBitRatios[n2];\n            if (\"number\" != typeof i) throw new \
Error(\"argument bit ratio not found\");\n            return i;\n          \
}\n          needsArgumentType(e2, t2) {\n            if \
(!this._isFunction(e2)) return false;\n            return \
!this._getFunction(e2).argumentTypes[t2];\n          }\n          \
assignArgumentType(e2, t2, r2, n2) {\n            if (!this._isFunction(e2)) \
return;\n            const i = this._getFunction(e2);\n            \
i.argumentTypes[t2] || (i.argumentTypes[t2] = r2);\n          }\n          \
assignArgumentBitRatio(e2, t2, r2, n2) {\n            const i = \
this._getFunction(e2);\n            if (this._isNativeFunction(r2)) return \
null;\n            const s = this._getFunction(r2), a = \
i.argumentNames.indexOf(t2);\n            if (-1 === a) throw new \
Error(`Argument ${t2} not found in arguments from function ${e2}`);\n         \
   const o = i.argumentBitRatios[a];\n            if (\"number\" != typeof o) \
throw new Error(`Bit ratio for argument ${t2} not found in function \
${e2}`);\n            s.argumentBitRatios || (s.argumentBitRatios = new \
Array(s.argumentNames.length));\n            const u = \
s.argumentBitRatios[a];\n            if (\"number\" == typeof u) {\n          \
    if (u !== o) throw new Error(`Incompatible bit ratio found at function \
${e2} at argument ${t2}`);\n              return u;\n            }\n          \
  return s.argumentBitRatios[a] = o, o;\n          }\n          \
trackFunctionCall(e2, t2, r2) {\n            \
this.functionNodeDependencies[e2] || (this.functionNodeDependencies[e2] = /* \
@__PURE__ */ new Set(), this.functionCalls[e2] = []), \
this.functionNodeDependencies[e2].add(t2), this.functionCalls[e2].push(r2);\n \
         }\n          getKernelResultType() {\n            return \
this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n       \
   }\n          getSubKernelResultType(e2) {\n            const t2 = \
this.subKernelNodes[e2];\n            let r2 = false;\n            for (let \
e3 = 0; e3 < this.rootNode.functionCalls.length; e3++) {\n              \
this.rootNode.functionCalls[e3].ast.callee.name === t2.name && (r2 = true);\n \
           }\n            if (!r2) throw new Error(`SubKernel ${t2.name} \
never called by kernel`);\n            return t2.returnType || \
t2.getType(t2.getJsAST());\n          }\n          getReturnTypes() {\n       \
     const e2 = { [this.rootNode.name]: \
this.rootNode.getType(this.rootNode.ast) }, t2 = \
this.traceFunctionCalls(this.rootNode.name);\n            for (let r2 = 0; r2 \
< t2.length; r2++) {\n              const n2 = t2[r2], i = \
this.functionMap[n2];\n              e2[n2] = i.getType(i.ast);\n            \
}\n            return e2;\n          }\n        }\n        t.exports = { \
FunctionBuilder: n };\n      }, {}], 10: [function(e, t, r) {\n        const \
n = e(\"acorn\"), { utils: i } = e(\"../utils\"), { FunctionTracer: s } = \
e(\"./function-tracer\");\n        const a = { Number: \"Number\", Float: \
\"Float\", Integer: \"Integer\", Array: \"Number\", \"Array(2)\": \"Number\", \
\"Array(3)\": \"Number\", \"Array(4)\": \"Number\", \"Matrix(2)\": \
\"Number\", \"Matrix(3)\": \"Number\", \"Matrix(4)\": \"Number\", Array2D: \
\"Number\", Array3D: \"Number\", Input: \"Number\", HTMLCanvas: \"Array(4)\", \
OffscreenCanvas: \"Array(4)\", HTMLImage: \"Array(4)\", ImageBitmap: \
\"Array(4)\", ImageData: \"Array(4)\", HTMLVideo: \"Array(4)\", \
HTMLImageArray: \"Array(4)\", NumberTexture: \"Number\", \
MemoryOptimizedNumberTexture: \"Number\", \"Array1D(2)\": \"Array(2)\", \
\"Array1D(3)\": \"Array(3)\", \"Array1D(4)\": \"Array(4)\", \"Array2D(2)\": \
\"Array(2)\", \"Array2D(3)\": \"Array(3)\", \"Array2D(4)\": \"Array(4)\", \
\"Array3D(2)\": \"Array(2)\", \"Array3D(3)\": \"Array(3)\", \"Array3D(4)\": \
\"Array(4)\", \"ArrayTexture(1)\": \"Number\", \"ArrayTexture(2)\": \
\"Array(2)\", \"ArrayTexture(3)\": \"Array(3)\", \"ArrayTexture(4)\": \
\"Array(4)\" };\n        t.exports = { FunctionNode: class {\n          \
constructor(e2, t2) {\n            if (!e2 && !t2.ast) throw new \
Error(\"source parameter is missing\");\n            if (t2 = t2 || {}, \
this.source = e2, this.ast = null, this.name = \"string\" == typeof e2 ? \
t2.isRootKernel ? \"kernel\" : t2.name || i.getFunctionNameFromString(e2) : \
null, this.calledFunctions = [], this.constants = {}, this.constantTypes = \
{}, this.constantBitRatios = {}, this.isRootKernel = false, this.isSubKernel \
= false, this.debug = null, this.functions = null, this.identifiers = null, \
this.contexts = null, this.functionCalls = null, this.states = [], \
this.needsArgumentType = null, this.assignArgumentType = null, \
this.lookupReturnType = null, this.lookupFunctionArgumentTypes = null, \
this.lookupFunctionArgumentBitRatio = null, this.triggerImplyArgumentType = \
null, this.triggerImplyArgumentBitRatio = null, this.onNestedFunction = null, \
this.onFunctionCall = null, this.optimizeFloatMemory = null, this.precision = \
null, this.loopMaxIterations = null, this.argumentNames = \"string\" == \
typeof this.source ? i.getArgumentNamesFromString(this.source) : null, \
this.argumentTypes = [], this.argumentSizes = [], this.argumentBitRatios = \
null, this.returnType = null, this.output = [], this.plugins = null, \
this.leadingReturnStatement = null, this.followingReturnStatement = null, \
this.dynamicOutput = null, this.dynamicArguments = null, \
this.strictTypingChecking = false, this.fixIntegerDivisionAccuracy = null, \
t2) for (const e3 in t2) t2.hasOwnProperty(e3) && this.hasOwnProperty(e3) && \
(this[e3] = t2[e3]);\n            this.literalTypes = {}, this.validate(), \
this._string = null, this._internalVariableNames = {};\n          }\n         \
 validate() {\n            if (\"string\" != typeof this.source && !this.ast) \
throw new Error(\"this.source not a string\");\n            if (!this.ast && \
!i.isFunctionString(this.source)) throw new Error(\"this.source not a \
function string\");\n            if (!this.name) throw new Error(\"this.name \
could not be set\");\n            if (this.argumentTypes.length > 0 && \
this.argumentTypes.length !== this.argumentNames.length) throw new \
Error(`argumentTypes count of ${this.argumentTypes.length} exceeds \
${this.argumentNames.length}`);\n            if (this.output.length < 1) \
throw new Error(\"this.output is not big enough\");\n          }\n          \
isIdentifierConstant(e2) {\n            return !!this.constants && \
this.constants.hasOwnProperty(e2);\n          }\n          isInput(e2) {\n    \
        return \"Input\" === \
this.argumentTypes[this.argumentNames.indexOf(e2)];\n          }\n          \
pushState(e2) {\n            this.states.push(e2);\n          }\n          \
popState(e2) {\n            if (this.state !== e2) throw new Error(`Cannot \
popState ${e2} when in ${this.state}`);\n            this.states.pop();\n     \
     }\n          isState(e2) {\n            return this.state === e2;\n      \
    }\n          get state() {\n            return \
this.states[this.states.length - 1];\n          }\n          \
astMemberExpressionUnroll(e2) {\n            if (\"Identifier\" === e2.type) \
return e2.name;\n            if (\"ThisExpression\" === e2.type) return \
\"this\";\n            if (\"MemberExpression\" === e2.type && e2.object && \
e2.property) return e2.object.hasOwnProperty(\"name\") && \"Math\" !== \
e2.object.name ? this.astMemberExpressionUnroll(e2.property) : \
this.astMemberExpressionUnroll(e2.object) + \".\" + \
this.astMemberExpressionUnroll(e2.property);\n            if \
(e2.hasOwnProperty(\"expressions\")) {\n              const t2 = \
e2.expressions[0];\n              if (\"Literal\" === t2.type && 0 === \
t2.value && 2 === e2.expressions.length) return \
this.astMemberExpressionUnroll(e2.expressions[1]);\n            }\n           \
 throw this.astErrorOutput(\"Unknown astMemberExpressionUnroll\", e2);\n      \
    }\n          getJsAST(e2) {\n            if (this.ast) return this.ast;\n \
           if (\"object\" == typeof this.source) return \
this.traceFunctionAST(this.source), this.ast = this.source;\n            if \
(null === (e2 = e2 || n)) throw new Error(\"Missing JS to AST parser\");\n    \
        const t2 = Object.freeze(e2.parse(`const parser_${this.name} = \
${this.source};`, { locations: true })), r2 = \
t2.body[0].declarations[0].init;\n            if (this.traceFunctionAST(r2), \
!t2) throw new Error(\"Failed to parse JS code\");\n            return \
this.ast = r2;\n          }\n          traceFunctionAST(e2) {\n            \
const { contexts: t2, declarations: r2, functions: n2, identifiers: i2, \
functionCalls: a2 } = new s(e2);\n            this.contexts = t2, \
this.identifiers = i2, this.functionCalls = a2, this.functions = n2;\n        \
    for (let e3 = 0; e3 < r2.length; e3++) {\n              const t3 = \
r2[e3], { ast: n3, inForLoopInit: i3, inForLoopTest: s2 } = t3, { init: a3 } \
= n3, o = this.getDependencies(a3);\n              let u = null;\n            \
  if (i3 && s2) u = \"Integer\";\n              else if (a3) {\n              \
  const e4 = this.getType(a3);\n                switch (e4) {\n               \
   case \"Integer\":\n                  case \"Float\":\n                  \
case \"Number\":\n                    u = \"MemberExpression\" === a3.type ? \
e4 : \"Number\";\n                    break;\n                  case \
\"LiteralInteger\":\n                    u = \"Number\";\n                    \
break;\n                  default:\n                    u = e4;\n             \
   }\n              }\n              t3.valueType = u, t3.dependencies = o, \
t3.isSafe = this.isSafeDependencies(o);\n            }\n            for (let \
e3 = 0; e3 < n2.length; e3++) this.onNestedFunction(n2[e3], this.source);\n   \
       }\n          getDeclaration(e2) {\n            for (let t2 = 0; t2 < \
this.identifiers.length; t2++) {\n              const r2 = \
this.identifiers[t2];\n              if (e2 === r2.ast) return \
r2.declaration;\n            }\n            return null;\n          }\n       \
   getVariableType(e2) {\n            if (\"Identifier\" !== e2.type) throw \
new Error(`ast of ${e2.type} not \"Identifier\"`);\n            let t2 = \
null;\n            const r2 = this.argumentNames.indexOf(e2.name);\n          \
  if (-1 === r2) {\n              const t3 = this.getDeclaration(e2);\n       \
       if (t3) return t3.valueType;\n            } else {\n              \
const e3 = this.argumentTypes[r2];\n              e3 && (t2 = e3);\n          \
  }\n            if (!t2 && this.strictTypingChecking) throw new \
Error(`Declaration of ${name} not found`);\n            return t2;\n          \
}\n          getLookupType(e2) {\n            if (!a.hasOwnProperty(e2)) \
throw new Error(`unknown typeLookupMap ${e2}`);\n            return a[e2];\n  \
        }\n          getConstantType(e2) {\n            if \
(this.constantTypes[e2]) {\n              const t2 = \
this.constantTypes[e2];\n              return \"Float\" === t2 ? \"Number\" : \
t2;\n            }\n            throw new Error(`Type for constant \"${e2}\" \
not declared`);\n          }\n          toString() {\n            return \
this._string ? this._string : this._string = this.astGeneric(this.getJsAST(), \
[]).join(\"\").trim();\n          }\n          toJSON() {\n            const \
e2 = { source: this.source, name: this.name, constants: this.constants, \
constantTypes: this.constantTypes, isRootKernel: this.isRootKernel, \
isSubKernel: this.isSubKernel, debug: this.debug, output: this.output, \
loopMaxIterations: this.loopMaxIterations, argumentNames: this.argumentNames, \
argumentTypes: this.argumentTypes, argumentSizes: this.argumentSizes, \
returnType: this.returnType, leadingReturnStatement: \
this.leadingReturnStatement, followingReturnStatement: \
this.followingReturnStatement };\n            return { ast: this.ast, \
settings: e2 };\n          }\n          getType(e2) {\n            if \
(Array.isArray(e2)) return this.getType(e2[e2.length - 1]);\n            \
switch (e2.type) {\n              case \"BlockStatement\":\n                \
return this.getType(e2.body);\n              case \"ArrayExpression\":\n      \
          switch (this.getType(e2.elements[0])) {\n                  case \
\"Array(2)\":\n                  case \"Array(3)\":\n                  case \
\"Array(4)\":\n                    return `Matrix(${e2.elements.length})`;\n  \
              }\n                return `Array(${e2.elements.length})`;\n     \
         case \"Literal\":\n                const t2 = this.astKey(e2);\n     \
           return this.literalTypes[t2] ? this.literalTypes[t2] : \
Number.isInteger(e2.value) ? \"LiteralInteger\" : true === e2.value || false \
=== e2.value ? \"Boolean\" : \"Number\";\n              case \
\"AssignmentExpression\":\n                return this.getType(e2.left);\n    \
          case \"CallExpression\":\n                if \
(this.isAstMathFunction(e2)) return \"Number\";\n                if \
(!e2.callee || !e2.callee.name) {\n                  if \
(\"SequenceExpression\" === e2.callee.type && \
e2.callee.expressions[e2.callee.expressions.length - 1].property.name) {\n    \
                const t3 = e2.callee.expressions[e2.callee.expressions.length \
- 1].property.name;\n                    return \
this.inferArgumentTypesIfNeeded(t3, e2.arguments), this.lookupReturnType(t3, \
e2, this);\n                  }\n                  if (\"this.color\" === \
this.getVariableSignature(e2.callee, true)) return null;\n                  \
if (\"MemberExpression\" === e2.callee.type && e2.callee.object && \
e2.callee.property && e2.callee.property.name && e2.arguments) {\n            \
        const t3 = e2.callee.property.name;\n                    return \
this.inferArgumentTypesIfNeeded(t3, e2.arguments), this.lookupReturnType(t3, \
e2, this);\n                  }\n                  throw \
this.astErrorOutput(\"Unknown call expression\", e2);\n                }\n    \
            if (e2.callee && e2.callee.name) {\n                  const t3 = \
e2.callee.name;\n                  return this.inferArgumentTypesIfNeeded(t3, \
e2.arguments), this.lookupReturnType(t3, e2, this);\n                }\n      \
          throw this.astErrorOutput(`Unhandled getType Type \"${e2.type}\"`, \
e2);\n              case \"LogicalExpression\":\n                return \
\"Boolean\";\n              case \"BinaryExpression\":\n                \
switch (e2.operator) {\n                  case \"%\":\n                  case \
\"/\":\n                    if (this.fixIntegerDivisionAccuracy) return \
\"Number\";\n                    break;\n                  case \">\":\n      \
            case \"<\":\n                    return \"Boolean\";\n            \
      case \"&\":\n                  case \"|\":\n                  case \
\"^\":\n                  case \"<<\":\n                  case \">>\":\n      \
            case \">>>\":\n                    return \"Integer\";\n          \
      }\n                const r2 = this.getType(e2.left);\n                \
if (this.isState(\"skip-literal-correction\")) return r2;\n                if \
(\"LiteralInteger\" === r2) {\n                  const t3 = \
this.getType(e2.right);\n                  return \"LiteralInteger\" === t3 ? \
e2.left.value % 1 == 0 ? \"Integer\" : \"Float\" : t3;\n                }\n   \
             return a[r2] || r2;\n              case \"UpdateExpression\":\n  \
            case \"ReturnStatement\":\n                return \
this.getType(e2.argument);\n              case \"UnaryExpression\":\n         \
       return \"~\" === e2.operator ? \"Integer\" : \
this.getType(e2.argument);\n              case \"VariableDeclaration\": {\n   \
             const t3 = e2.declarations;\n                let r3;\n           \
     for (let e3 = 0; e3 < t3.length; e3++) {\n                  const n3 = \
t3[e3];\n                  r3 = this.getType(n3);\n                }\n        \
        if (!r3) throw this.astErrorOutput(\"Unable to find type for \
declaration\", e2);\n                return r3;\n              }\n            \
  case \"VariableDeclarator\":\n                const n2 = \
this.getDeclaration(e2.id);\n                if (!n2) throw \
this.astErrorOutput(\"Unable to find declarator\", e2);\n                if \
(!n2.valueType) throw this.astErrorOutput(\"Unable to find declarator \
valueType\", e2);\n                return n2.valueType;\n              case \
\"Identifier\":\n                if (\"Infinity\" === e2.name) return \
\"Number\";\n                if (this.isAstVariable(e2)) {\n                  \
if (\"value\" === this.getVariableSignature(e2)) return \
this.getCheckVariableType(e2);\n                }\n                const i2 = \
this.findIdentifierOrigin(e2);\n                return i2 && i2.init ? \
this.getType(i2.init) : null;\n              case \"MemberExpression\":\n     \
           if (this.isAstMathFunction(e2)) {\n                  switch \
(e2.property.name) {\n                    case \"ceil\":\n                    \
case \"floor\":\n                    case \"round\":\n                      \
return \"Integer\";\n                  }\n                  return \
\"Number\";\n                }\n                if (this.isAstVariable(e2)) \
{\n                  switch (this.getVariableSignature(e2)) {\n               \
     case \"value[]\":\n                      return \
this.getLookupType(this.getCheckVariableType(e2.object));\n                   \
 case \"value[][]\":\n                      return \
this.getLookupType(this.getCheckVariableType(e2.object.object));\n            \
        case \"value[][][]\":\n                      return \
this.getLookupType(this.getCheckVariableType(e2.object.object.object));\n     \
               case \"value[][][][]\":\n                      return \
this.getLookupType(this.getCheckVariableType(e2.object.object.object.object))\
;\n                    case \"value.thread.value\":\n                    case \
\"this.thread.value\":\n                      return \"Integer\";\n           \
         case \"this.output.value\":\n                      return \
this.dynamicOutput ? \"Integer\" : \"LiteralInteger\";\n                    \
case \"this.constants.value\":\n                      return \
this.getConstantType(e2.property.name);\n                    case \
\"this.constants.value[]\":\n                      return \
this.getLookupType(this.getConstantType(e2.object.property.name));\n          \
          case \"this.constants.value[][]\":\n                      return \
this.getLookupType(this.getConstantType(e2.object.object.property.name));\n   \
                 case \"this.constants.value[][][]\":\n                      \
return \
this.getLookupType(this.getConstantType(e2.object.object.object.property.name\
));\n                    case \"this.constants.value[][][][]\":\n             \
         return \
this.getLookupType(this.getConstantType(e2.object.object.object.object.proper\
ty.name));\n                    case \"fn()[]\":\n                    case \
\"fn()[][]\":\n                    case \"fn()[][][]\":\n                     \
 return this.getLookupType(this.getType(e2.object));\n                    \
case \"value.value\":\n                      if (this.isAstMathVariable(e2)) \
return \"Number\";\n                      switch (e2.property.name) {\n       \
                 case \"r\":\n                        case \"g\":\n           \
             case \"b\":\n                        case \"a\":\n               \
           return this.getLookupType(this.getCheckVariableType(e2.object));\n \
                     }\n                    case \"[][]\":\n                  \
    return \"Number\";\n                  }\n                  throw \
this.astErrorOutput(\"Unhandled getType MemberExpression\", e2);\n            \
    }\n                throw this.astErrorOutput(\"Unhandled getType \
MemberExpression\", e2);\n              case \"ConditionalExpression\":\n     \
         case \"IfStatement\":\n                return \
this.getType(e2.consequent);\n              case \"FunctionDeclaration\":\n   \
           case \"FunctionExpression\":\n                const s2 = \
this.findLastReturn(e2.body);\n                return s2 ? this.getType(s2) : \
null;\n              case \"SequenceExpression\":\n                return \
this.getType(e2.expressions[e2.expressions.length - 1]);\n              \
default:\n                throw this.astErrorOutput(`Unhandled getType Type \
\"${e2.type}\"`, e2);\n            }\n          }\n          \
getCheckVariableType(e2) {\n            const t2 = \
this.getVariableType(e2);\n            if (!t2) throw \
this.astErrorOutput(`${e2.type} is not defined`, e2);\n            return \
t2;\n          }\n          inferArgumentTypesIfNeeded(e2, t2) {\n            \
for (let r2 = 0; r2 < t2.length; r2++) {\n              if \
(!this.needsArgumentType(e2, r2)) continue;\n              const n2 = \
this.getType(t2[r2]);\n              if (!n2) throw \
this.astErrorOutput(`Unable to infer argument ${r2}`, t2[r2]);\n              \
this.assignArgumentType(e2, r2, n2);\n            }\n          }\n          \
isAstMathVariable(e2) {\n            return \"MemberExpression\" === e2.type \
&& e2.object && \"Identifier\" === e2.object.type && \"Math\" === \
e2.object.name && e2.property && \"Identifier\" === e2.property.type && \
[\"E\", \"PI\", \"SQRT2\", \"SQRT1_2\", \"LN2\", \"LN10\", \"LOG2E\", \
\"LOG10E\"].indexOf(e2.property.name) > -1;\n          }\n          \
isAstMathFunction(e2) {\n            return \"CallExpression\" === e2.type && \
e2.callee && \"MemberExpression\" === e2.callee.type && e2.callee.object && \
\"Identifier\" === e2.callee.object.type && \"Math\" === \
e2.callee.object.name && e2.callee.property && \"Identifier\" === \
e2.callee.property.type && [\"abs\", \"acos\", \"acosh\", \"asin\", \
\"asinh\", \"atan\", \"atan2\", \"atanh\", \"cbrt\", \"ceil\", \"clz32\", \
\"cos\", \"cosh\", \"expm1\", \"exp\", \"floor\", \"fround\", \"imul\", \
\"log\", \"log2\", \"log10\", \"log1p\", \"max\", \"min\", \"pow\", \
\"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \
\"tanh\", \"trunc\"].indexOf(e2.callee.property.name) > -1;\n          }\n    \
      isAstVariable(e2) {\n            return \"Identifier\" === e2.type || \
\"MemberExpression\" === e2.type;\n          }\n          isSafe(e2) {\n      \
      return this.isSafeDependencies(this.getDependencies(e2));\n          \
}\n          isSafeDependencies(e2) {\n            return !e2 || !e2.every || \
e2.every((e3) => e3.isSafe);\n          }\n          getDependencies(e2, t2, \
r2) {\n            if (t2 || (t2 = []), !e2) return null;\n            if \
(Array.isArray(e2)) {\n              for (let n2 = 0; n2 < e2.length; n2++) \
this.getDependencies(e2[n2], t2, r2);\n              return t2;\n            \
}\n            switch (e2.type) {\n              case \
\"AssignmentExpression\":\n                return \
this.getDependencies(e2.left, t2, r2), this.getDependencies(e2.right, t2, \
r2), t2;\n              case \"ConditionalExpression\":\n                \
return this.getDependencies(e2.test, t2, r2), \
this.getDependencies(e2.alternate, t2, r2), \
this.getDependencies(e2.consequent, t2, r2), t2;\n              case \
\"Literal\":\n                t2.push({ origin: \"literal\", value: e2.value, \
isSafe: true !== r2 && (e2.value > -1 / 0 && e2.value < 1 / 0 && \
!isNaN(e2.value)) });\n                break;\n              case \
\"VariableDeclarator\":\n                return this.getDependencies(e2.init, \
t2, r2);\n              case \"Identifier\":\n                const n2 = \
this.getDeclaration(e2);\n                if (n2) t2.push({ name: e2.name, \
origin: \"declaration\", isSafe: !r2 && \
this.isSafeDependencies(n2.dependencies) });\n                else if \
(this.argumentNames.indexOf(e2.name) > -1) t2.push({ name: e2.name, origin: \
\"argument\", isSafe: false });\n                else if \
(this.strictTypingChecking) throw new Error(`Cannot find identifier origin \
\"${e2.name}\"`);\n                break;\n              case \
\"FunctionDeclaration\":\n                return \
this.getDependencies(e2.body.body[e2.body.body.length - 1], t2, r2);\n        \
      case \"ReturnStatement\":\n                return \
this.getDependencies(e2.argument, t2);\n              case \
\"BinaryExpression\":\n              case \"LogicalExpression\":\n            \
    return r2 = \"/\" === e2.operator || \"*\" === e2.operator, \
this.getDependencies(e2.left, t2, r2), this.getDependencies(e2.right, t2, \
r2), t2;\n              case \"UnaryExpression\":\n              case \
\"UpdateExpression\":\n                return \
this.getDependencies(e2.argument, t2, r2);\n              case \
\"VariableDeclaration\":\n                return \
this.getDependencies(e2.declarations, t2, r2);\n              case \
\"ArrayExpression\":\n                return t2.push({ origin: \
\"declaration\", isSafe: true }), t2;\n              case \
\"CallExpression\":\n                return t2.push({ origin: \"function\", \
isSafe: true }), t2;\n              case \"MemberExpression\":\n              \
  const i2 = this.getMemberExpressionDetails(e2);\n                switch \
(i2.signature) {\n                  case \"value[]\":\n                    \
this.getDependencies(e2.object, t2, r2);\n                    break;\n        \
          case \"value[][]\":\n                    \
this.getDependencies(e2.object.object, t2, r2);\n                    break;\n \
                 case \"value[][][]\":\n                    \
this.getDependencies(e2.object.object.object, t2, r2);\n                    \
break;\n                  case \"this.output.value\":\n                    \
this.dynamicOutput && t2.push({ name: i2.name, origin: \"output\", isSafe: \
false });\n                }\n                if (i2) return i2.property && \
this.getDependencies(i2.property, t2, r2), i2.xProperty && \
this.getDependencies(i2.xProperty, t2, r2), i2.yProperty && \
this.getDependencies(i2.yProperty, t2, r2), i2.zProperty && \
this.getDependencies(i2.zProperty, t2, r2), t2;\n              case \
\"SequenceExpression\":\n                return \
this.getDependencies(e2.expressions, t2, r2);\n              default:\n       \
         throw this.astErrorOutput(`Unhandled type ${e2.type} in \
getDependencies`, e2);\n            }\n            return t2;\n          }\n  \
        getVariableSignature(e2, t2) {\n            if \
(!this.isAstVariable(e2)) throw new Error(`ast of type \"${e2.type}\" is not \
a variable signature`);\n            if (\"Identifier\" === e2.type) return \
\"value\";\n            const r2 = [];\n            for (; e2; ) e2.computed \
? r2.push(\"[]\") : \"ThisExpression\" === e2.type ? r2.unshift(\"this\") : \
e2.property && e2.property.name ? \"x\" === e2.property.name || \"y\" === \
e2.property.name || \"z\" === e2.property.name ? r2.unshift(t2 ? \".\" + \
e2.property.name : \".value\") : \"constants\" === e2.property.name || \
\"thread\" === e2.property.name || \"output\" === e2.property.name ? \
r2.unshift(\".\" + e2.property.name) : r2.unshift(t2 ? \".\" + \
e2.property.name : \".value\") : e2.name ? r2.unshift(t2 ? e2.name : \
\"value\") : e2.callee && e2.callee.name ? r2.unshift(t2 ? e2.callee.name + \
\"()\" : \"fn()\") : e2.elements ? r2.unshift(\"[]\") : \
r2.unshift(\"unknown\"), e2 = e2.object;\n            const n2 = \
r2.join(\"\");\n            if (t2) return n2;\n            return \
[\"value\", \"value[]\", \"value[][]\", \"value[][][]\", \"value[][][][]\", \
\"value.value\", \"value.thread.value\", \"this.thread.value\", \
\"this.output.value\", \"this.constants.value\", \"this.constants.value[]\", \
\"this.constants.value[][]\", \"this.constants.value[][][]\", \
\"this.constants.value[][][][]\", \"fn()[]\", \"fn()[][]\", \"fn()[][][]\", \
\"[][]\"].indexOf(n2) > -1 ? n2 : null;\n          }\n          build() {\n   \
         return this.toString().length > 0;\n          }\n          \
astGeneric(e2, t2) {\n            if (null === e2) throw \
this.astErrorOutput(\"NULL ast\", e2);\n            if (Array.isArray(e2)) \
{\n              for (let r2 = 0; r2 < e2.length; r2++) \
this.astGeneric(e2[r2], t2);\n              return t2;\n            }\n       \
     switch (e2.type) {\n              case \"FunctionDeclaration\":\n        \
        return this.astFunctionDeclaration(e2, t2);\n              case \
\"FunctionExpression\":\n                return \
this.astFunctionExpression(e2, t2);\n              case \
\"ReturnStatement\":\n                return this.astReturnStatement(e2, \
t2);\n              case \"Literal\":\n                return \
this.astLiteral(e2, t2);\n              case \"BinaryExpression\":\n          \
      return this.astBinaryExpression(e2, t2);\n              case \
\"Identifier\":\n                return this.astIdentifierExpression(e2, \
t2);\n              case \"AssignmentExpression\":\n                return \
this.astAssignmentExpression(e2, t2);\n              case \
\"ExpressionStatement\":\n                return \
this.astExpressionStatement(e2, t2);\n              case \
\"EmptyStatement\":\n                return this.astEmptyStatement(e2, t2);\n \
             case \"BlockStatement\":\n                return \
this.astBlockStatement(e2, t2);\n              case \"IfStatement\":\n        \
        return this.astIfStatement(e2, t2);\n              case \
\"SwitchStatement\":\n                return this.astSwitchStatement(e2, \
t2);\n              case \"BreakStatement\":\n                return \
this.astBreakStatement(e2, t2);\n              case \"ContinueStatement\":\n  \
              return this.astContinueStatement(e2, t2);\n              case \
\"ForStatement\":\n                return this.astForStatement(e2, t2);\n     \
         case \"WhileStatement\":\n                return \
this.astWhileStatement(e2, t2);\n              case \"DoWhileStatement\":\n   \
             return this.astDoWhileStatement(e2, t2);\n              case \
\"VariableDeclaration\":\n                return \
this.astVariableDeclaration(e2, t2);\n              case \
\"VariableDeclarator\":\n                return \
this.astVariableDeclarator(e2, t2);\n              case \"ThisExpression\":\n \
               return this.astThisExpression(e2, t2);\n              case \
\"SequenceExpression\":\n                return \
this.astSequenceExpression(e2, t2);\n              case \
\"UnaryExpression\":\n                return this.astUnaryExpression(e2, \
t2);\n              case \"UpdateExpression\":\n                return \
this.astUpdateExpression(e2, t2);\n              case \
\"LogicalExpression\":\n                return this.astLogicalExpression(e2, \
t2);\n              case \"MemberExpression\":\n                return \
this.astMemberExpression(e2, t2);\n              case \"CallExpression\":\n   \
             return this.astCallExpression(e2, t2);\n              case \
\"ArrayExpression\":\n                return this.astArrayExpression(e2, \
t2);\n              case \"DebuggerStatement\":\n                return \
this.astDebuggerStatement(e2, t2);\n              case \
\"ConditionalExpression\":\n                return \
this.astConditionalExpression(e2, t2);\n            }\n            throw \
this.astErrorOutput(\"Unknown ast type : \" + e2.type, e2);\n          }\n    \
      astErrorOutput(e2, t2) {\n            if (\"string\" != typeof \
this.source) return new Error(e2);\n            const r2 = \
i.getAstString(this.source, t2), n2 = \
this.source.substr(t2.start).split(/\\n/), s2 = n2.length > 0 ? n2[n2.length \
- 1] : 0;\n            return new Error(`${e2} on line ${n2.length}, position \
${s2.length}:\n ${r2}`);\n          }\n          astDebuggerStatement(e2, t2) \
{\n            return t2;\n          }\n          \
astConditionalExpression(e2, t2) {\n            if (\"ConditionalExpression\" \
!== e2.type) throw this.astErrorOutput(\"Not a conditional expression\", \
e2);\n            return t2.push(\"(\"), this.astGeneric(e2.test, t2), \
t2.push(\"?\"), this.astGeneric(e2.consequent, t2), t2.push(\":\"), \
this.astGeneric(e2.alternate, t2), t2.push(\")\"), t2;\n          }\n         \
 astFunction(e2, t2) {\n            throw new Error(`\"astFunction\" not \
defined on ${this.constructor.name}`);\n          }\n          \
astFunctionDeclaration(e2, t2) {\n            return this.isChildFunction(e2) \
? t2 : this.astFunction(e2, t2);\n          }\n          \
astFunctionExpression(e2, t2) {\n            return this.isChildFunction(e2) \
? t2 : this.astFunction(e2, t2);\n          }\n          isChildFunction(e2) \
{\n            for (let t2 = 0; t2 < this.functions.length; t2++) if \
(this.functions[t2] === e2) return true;\n            return false;\n         \
 }\n          astReturnStatement(e2, t2) {\n            return t2;\n          \
}\n          astLiteral(e2, t2) {\n            return \
this.literalTypes[this.astKey(e2)] = \"Number\", t2;\n          }\n          \
astBinaryExpression(e2, t2) {\n            return t2;\n          }\n          \
astIdentifierExpression(e2, t2) {\n            return t2;\n          }\n      \
    astAssignmentExpression(e2, t2) {\n            return t2;\n          }\n  \
        astExpressionStatement(e2, t2) {\n            return \
this.astGeneric(e2.expression, t2), t2.push(\";\"), t2;\n          }\n        \
  astEmptyStatement(e2, t2) {\n            return t2;\n          }\n          \
astBlockStatement(e2, t2) {\n            return t2;\n          }\n          \
astIfStatement(e2, t2) {\n            return t2;\n          }\n          \
astSwitchStatement(e2, t2) {\n            return t2;\n          }\n          \
astBreakStatement(e2, t2) {\n            return t2.push(\"break;\"), t2;\n    \
      }\n          astContinueStatement(e2, t2) {\n            return \
t2.push(\"continue;\\n\"), t2;\n          }\n          astForStatement(e2, \
t2) {\n            return t2;\n          }\n          astWhileStatement(e2, \
t2) {\n            return t2;\n          }\n          astDoWhileStatement(e2, \
t2) {\n            return t2;\n          }\n          \
astVariableDeclarator(e2, t2) {\n            return this.astGeneric(e2.id, \
t2), null !== e2.init && (t2.push(\"=\"), this.astGeneric(e2.init, t2)), \
t2;\n          }\n          astThisExpression(e2, t2) {\n            return \
t2;\n          }\n          astSequenceExpression(e2, t2) {\n            \
const { expressions: r2 } = e2, n2 = [];\n            for (let e3 = 0; e3 < \
r2.length; e3++) {\n              const t3 = r2[e3], i2 = [];\n              \
this.astGeneric(t3, i2), n2.push(i2.join(\"\"));\n            }\n            \
return n2.length > 1 ? t2.push(\"(\", n2.join(\",\"), \")\") : \
t2.push(n2[0]), t2;\n          }\n          astUnaryExpression(e2, t2) {\n    \
        return this.checkAndUpconvertBitwiseUnary(e2, t2) || (e2.prefix ? \
(t2.push(e2.operator), this.astGeneric(e2.argument, t2)) : \
(this.astGeneric(e2.argument, t2), t2.push(e2.operator))), t2;\n          }\n \
         checkAndUpconvertBitwiseUnary(e2, t2) {\n          }\n          \
astUpdateExpression(e2, t2) {\n            return e2.prefix ? \
(t2.push(e2.operator), this.astGeneric(e2.argument, t2)) : \
(this.astGeneric(e2.argument, t2), t2.push(e2.operator)), t2;\n          }\n  \
        astLogicalExpression(e2, t2) {\n            return t2.push(\"(\"), \
this.astGeneric(e2.left, t2), t2.push(e2.operator), this.astGeneric(e2.right, \
t2), t2.push(\")\"), t2;\n          }\n          astMemberExpression(e2, t2) \
{\n            return t2;\n          }\n          astCallExpression(e2, t2) \
{\n            return t2;\n          }\n          astArrayExpression(e2, t2) \
{\n            return t2;\n          }\n          \
getMemberExpressionDetails(e2) {\n            if (\"MemberExpression\" !== \
e2.type) throw this.astErrorOutput(`Expression ${e2.type} not a \
MemberExpression`, e2);\n            let t2 = null, r2 = null;\n            \
const n2 = this.getVariableSignature(e2);\n            switch (n2) {\n        \
      case \"value\":\n                return null;\n              case \
\"value.thread.value\":\n              case \"this.thread.value\":\n          \
    case \"this.output.value\":\n                return { signature: n2, \
type: \"Integer\", name: e2.property.name };\n              case \
\"value[]\":\n                if (\"string\" != typeof e2.object.name) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                return \
t2 = e2.object.name, { name: t2, origin: \"user\", signature: n2, type: \
this.getVariableType(e2.object), xProperty: e2.property };\n              \
case \"value[][]\":\n                if (\"string\" != typeof \
e2.object.object.name) throw this.astErrorOutput(\"Unexpected expression\", \
e2);\n                return t2 = e2.object.object.name, { name: t2, origin: \
\"user\", signature: n2, type: this.getVariableType(e2.object.object), \
yProperty: e2.object.property, xProperty: e2.property };\n              case \
\"value[][][]\":\n                if (\"string\" != typeof \
e2.object.object.object.name) throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n                return t2 = e2.object.object.object.name, \
{ name: t2, origin: \"user\", signature: n2, type: \
this.getVariableType(e2.object.object.object), zProperty: \
e2.object.object.property, yProperty: e2.object.property, xProperty: \
e2.property };\n              case \"value[][][][]\":\n                if \
(\"string\" != typeof e2.object.object.object.object.name) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                return \
t2 = e2.object.object.object.object.name, { name: t2, origin: \"user\", \
signature: n2, type: this.getVariableType(e2.object.object.object.object), \
zProperty: e2.object.object.property, yProperty: e2.object.property, \
xProperty: e2.property };\n              case \"value.value\":\n              \
  if (\"string\" != typeof e2.property.name) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                if \
(this.isAstMathVariable(e2)) return t2 = e2.property.name, { name: t2, \
origin: \"Math\", type: \"Number\", signature: n2 };\n                switch \
(e2.property.name) {\n                  case \"r\":\n                  case \
\"g\":\n                  case \"b\":\n                  case \"a\":\n        \
            return t2 = e2.object.name, { name: t2, property: \
e2.property.name, origin: \"user\", signature: n2, type: \"Number\" };\n      \
            default:\n                    throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                }\n      \
        case \"this.constants.value\":\n                if (\"string\" != \
typeof e2.property.name) throw this.astErrorOutput(\"Unexpected expression\", \
e2);\n                if (t2 = e2.property.name, r2 = \
this.getConstantType(t2), !r2) throw this.astErrorOutput(\"Constant has no \
type\", e2);\n                return { name: t2, type: r2, origin: \
\"constants\", signature: n2 };\n              case \
\"this.constants.value[]\":\n                if (\"string\" != typeof \
e2.object.property.name) throw this.astErrorOutput(\"Unexpected expression\", \
e2);\n                if (t2 = e2.object.property.name, r2 = \
this.getConstantType(t2), !r2) throw this.astErrorOutput(\"Constant has no \
type\", e2);\n                return { name: t2, type: r2, origin: \
\"constants\", signature: n2, xProperty: e2.property };\n              case \
\"this.constants.value[][]\":\n                if (\"string\" != typeof \
e2.object.object.property.name) throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n                if (t2 = e2.object.object.property.name, \
r2 = this.getConstantType(t2), !r2) throw this.astErrorOutput(\"Constant has \
no type\", e2);\n                return { name: t2, type: r2, origin: \
\"constants\", signature: n2, yProperty: e2.object.property, xProperty: \
e2.property };\n              case \"this.constants.value[][][]\":\n          \
      if (\"string\" != typeof e2.object.object.object.property.name) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n                if (t2 = \
e2.object.object.object.property.name, r2 = this.getConstantType(t2), !r2) \
throw this.astErrorOutput(\"Constant has no type\", e2);\n                \
return { name: t2, type: r2, origin: \"constants\", signature: n2, zProperty: \
e2.object.object.property, yProperty: e2.object.property, xProperty: \
e2.property };\n              case \"fn()[]\":\n              case \
\"fn()[][]\":\n              case \"[][]\":\n                return { \
signature: n2, property: e2.property };\n              default:\n             \
   throw this.astErrorOutput(\"Unexpected expression\", e2);\n            }\n \
         }\n          findIdentifierOrigin(e2) {\n            const t2 = \
[this.ast];\n            for (; t2.length > 0; ) {\n              const r2 = \
t2[0];\n              if (\"VariableDeclarator\" === r2.type && r2.id && \
r2.id.name && r2.id.name === e2.name) return r2;\n              if \
(t2.shift(), r2.argument) t2.push(r2.argument);\n              else if \
(r2.body) t2.push(r2.body);\n              else if (r2.declarations) \
t2.push(r2.declarations);\n              else if (Array.isArray(r2)) for (let \
e3 = 0; e3 < r2.length; e3++) t2.push(r2[e3]);\n            }\n            \
return null;\n          }\n          findLastReturn(e2) {\n            const \
t2 = [e2 || this.ast];\n            for (; t2.length > 0; ) {\n              \
const e3 = t2.pop();\n              if (\"ReturnStatement\" === e3.type) \
return e3;\n              if (\"FunctionDeclaration\" !== e3.type) if \
(e3.argument) t2.push(e3.argument);\n              else if (e3.body) \
t2.push(e3.body);\n              else if (e3.declarations) \
t2.push(e3.declarations);\n              else if (Array.isArray(e3)) for (let \
r2 = 0; r2 < e3.length; r2++) t2.push(e3[r2]);\n              else \
e3.consequent ? t2.push(e3.consequent) : e3.cases && t2.push(e3.cases);\n     \
       }\n            return null;\n          }\n          \
getInternalVariableName(e2) {\n            return \
this._internalVariableNames.hasOwnProperty(e2) || \
(this._internalVariableNames[e2] = 0), this._internalVariableNames[e2]++, 1 \
=== this._internalVariableNames[e2] ? e2 : e2 + \
this._internalVariableNames[e2];\n          }\n          astKey(e2, t2 = \
\",\") {\n            if (!e2.start || !e2.end) throw new Error(\"AST start \
and end needed\");\n            return `${e2.start}${t2}${e2.end}`;\n         \
 }\n        } };\n      }, { \"../utils\": 114, \"./function-tracer\": 11, \
acorn: 1 }], 11: [function(e, t, r) {\n        const { utils: n } = \
e(\"../utils\");\n        function i(e2) {\n          return e2.length > 0 ? \
e2[e2.length - 1] : null;\n        }\n        const s = \"trackIdentifiers\", \
a = \"memberExpression\", o = \"inForLoopInit\";\n        t.exports = { \
FunctionTracer: class {\n          constructor(e2) {\n            \
this.runningContexts = [], this.functionContexts = [], this.contexts = [], \
this.functionCalls = [], this.declarations = [], this.identifiers = [], \
this.functions = [], this.returnStatements = [], this.trackedIdentifiers = \
null, this.states = [], this.newFunctionContext(), this.scan(e2);\n          \
}\n          isState(e2) {\n            return this.states[this.states.length \
- 1] === e2;\n          }\n          hasState(e2) {\n            return \
this.states.indexOf(e2) > -1;\n          }\n          pushState(e2) {\n       \
     this.states.push(e2);\n          }\n          popState(e2) {\n           \
 if (!this.isState(e2)) throw new Error(`Cannot pop the non-active state \
\"${e2}\"`);\n            this.states.pop();\n          }\n          get \
currentFunctionContext() {\n            return i(this.functionContexts);\n    \
      }\n          get currentContext() {\n            return \
i(this.runningContexts);\n          }\n          newFunctionContext() {\n     \
       const e2 = { \"@contextType\": \"function\" };\n            \
this.contexts.push(e2), this.functionContexts.push(e2);\n          }\n        \
  newContext(e2) {\n            const t2 = Object.assign({ \"@contextType\": \
\"const/let\" }, this.currentContext);\n            this.contexts.push(t2), \
this.runningContexts.push(t2), e2();\n            const { \
currentFunctionContext: r2 } = this;\n            for (const e3 in r2) \
r2.hasOwnProperty(e3) && !t2.hasOwnProperty(e3) && (t2[e3] = r2[e3]);\n       \
     return this.runningContexts.pop(), t2;\n          }\n          \
useFunctionContext(e2) {\n            const t2 = i(this.functionContexts);\n  \
          this.runningContexts.push(t2), e2(), this.runningContexts.pop();\n  \
        }\n          getIdentifiers(e2) {\n            const t2 = \
this.trackedIdentifiers = [];\n            return this.pushState(s), e2(), \
this.trackedIdentifiers = null, this.popState(s), t2;\n          }\n          \
getDeclaration(e2) {\n            const { currentContext: t2, \
currentFunctionContext: r2, runningContexts: n2 } = this, i2 = t2[e2] || \
r2[e2] || null;\n            if (!i2 && t2 === r2 && n2.length > 0) {\n       \
       const t3 = n2[n2.length - 2];\n              if (t3[e2]) return \
t3[e2];\n            }\n            return i2;\n          }\n          \
scan(e2) {\n            if (e2) if (Array.isArray(e2)) for (let t2 = 0; t2 < \
e2.length; t2++) this.scan(e2[t2]);\n            else switch (e2.type) {\n    \
          case \"Program\":\n                this.useFunctionContext(() => \
{\n                  this.scan(e2.body);\n                });\n               \
 break;\n              case \"BlockStatement\":\n                \
this.newContext(() => {\n                  this.scan(e2.body);\n              \
  });\n                break;\n              case \"AssignmentExpression\":\n \
             case \"LogicalExpression\":\n              case \
\"BinaryExpression\":\n                this.scan(e2.left), \
this.scan(e2.right);\n                break;\n              case \
\"UpdateExpression\":\n                if (\"++\" === e2.operator) {\n        \
          const t2 = this.getDeclaration(e2.argument.name);\n                 \
 t2 && (t2.suggestedType = \"Integer\");\n                }\n                \
this.scan(e2.argument);\n                break;\n              case \
\"UnaryExpression\":\n                this.scan(e2.argument);\n               \
 break;\n              case \"VariableDeclaration\":\n                \"var\" \
=== e2.kind ? this.useFunctionContext(() => {\n                  \
e2.declarations = n.normalizeDeclarations(e2), this.scan(e2.declarations);\n  \
              }) : (e2.declarations = n.normalizeDeclarations(e2), \
this.scan(e2.declarations));\n                break;\n              case \
\"VariableDeclarator\": {\n                const { currentContext: t2 } = \
this, r2 = this.hasState(o), n2 = { ast: e2, context: t2, name: e2.id.name, \
origin: \"declaration\", inForLoopInit: r2, inForLoopTest: null, assignable: \
t2 === this.currentFunctionContext || !r2 && !t2.hasOwnProperty(e2.id.name), \
suggestedType: null, valueType: null, dependencies: null, isSafe: null };\n   \
             t2[e2.id.name] || (t2[e2.id.name] = n2), \
this.declarations.push(n2), this.scan(e2.id), this.scan(e2.init);\n           \
     break;\n              }\n              case \"FunctionExpression\":\n    \
          case \"FunctionDeclaration\":\n                0 === \
this.runningContexts.length ? this.scan(e2.body) : this.functions.push(e2);\n \
               break;\n              case \"IfStatement\":\n                \
this.scan(e2.test), this.scan(e2.consequent), e2.alternate && \
this.scan(e2.alternate);\n                break;\n              case \
\"ForStatement\": {\n                let t2;\n                const r2 = \
this.newContext(() => {\n                  this.pushState(o), \
this.scan(e2.init), this.popState(o), t2 = this.getIdentifiers(() => {\n      \
              this.scan(e2.test);\n                  }), \
this.scan(e2.update), this.newContext(() => {\n                    \
this.scan(e2.body);\n                  });\n                });\n             \
   if (t2) for (const e3 in r2) \"@contextType\" !== e3 && t2.indexOf(e3) > \
-1 && (r2[e3].inForLoopTest = true);\n                break;\n              \
}\n              case \"DoWhileStatement\":\n              case \
\"WhileStatement\":\n                this.newContext(() => {\n                \
  this.scan(e2.body), this.scan(e2.test);\n                });\n              \
  break;\n              case \"Identifier\":\n                this.isState(s) \
&& this.trackedIdentifiers.push(e2.name), this.identifiers.push({ context: \
this.currentContext, declaration: this.getDeclaration(e2.name), ast: e2 });\n \
               break;\n              case \"ReturnStatement\":\n              \
  this.returnStatements.push(e2), this.scan(e2.argument);\n                \
break;\n              case \"MemberExpression\":\n                \
this.pushState(a), this.scan(e2.object), this.scan(e2.property), \
this.popState(a);\n                break;\n              case \
\"ExpressionStatement\":\n                this.scan(e2.expression);\n         \
       break;\n              case \"SequenceExpression\":\n                \
this.scan(e2.expressions);\n                break;\n              case \
\"CallExpression\":\n                this.functionCalls.push({ context: \
this.currentContext, ast: e2 }), this.scan(e2.arguments);\n                \
break;\n              case \"ArrayExpression\":\n                \
this.scan(e2.elements);\n                break;\n              case \
\"ConditionalExpression\":\n                this.scan(e2.test), \
this.scan(e2.alternate), this.scan(e2.consequent);\n                break;\n  \
            case \"SwitchStatement\":\n                \
this.scan(e2.discriminant), this.scan(e2.cases);\n                break;\n    \
          case \"SwitchCase\":\n                this.scan(e2.test), \
this.scan(e2.consequent);\n                break;\n              case \
\"ThisExpression\":\n              case \"Literal\":\n              case \
\"DebuggerStatement\":\n              case \"EmptyStatement\":\n              \
case \"BreakStatement\":\n              case \"ContinueStatement\":\n         \
       break;\n              default:\n                throw new \
Error(`unhandled type \"${e2.type}\"`);\n            }\n          }\n        \
} };\n      }, { \"../utils\": 114 }], 12: [function(e, t, r) {\n        \
const { glWiretap: n } = e(\"gl-wiretap\"), { utils: i } = \
e(\"../../utils\");\n        function s(e2) {\n          return \
e2.toString().replace(\"=>\", \"\").replace(/^function /, \
\"\").replace(/utils[.]/g, \"/*utils.*/\");\n        }\n        function \
a(e2, t2) {\n          const r2 = \"single\" === t2.precision ? e2 : `new \
Float32Array(${e2}.buffer)`;\n          return t2.output[2] ? \
`renderOutput(${r2}, ${t2.output[0]}, ${t2.output[1]}, ${t2.output[2]})` : \
t2.output[1] ? `renderOutput(${r2}, ${t2.output[0]}, ${t2.output[1]})` : \
`renderOutput(${r2}, ${t2.output[0]})`;\n        }\n        function o(e2, \
t2, r2) {\n          const n2 = e2.toArray.toString(), s2 = \
!/^function/.test(n2);\n          return `() => {\n  function framebuffer() { \
return ${r2}; };\n  ${i.flattenFunctionToString(`${s2 ? \"function \" : \
\"\"}${n2}`, { findDependency: (t3, r3) => {\n            if (\"utils\" === \
t3) return `const ${r3} = ${i[r3].toString()};`;\n            if (\"this\" \
=== t3) return \"framebuffer\" === r3 ? \"\" : `${s2 ? \"function \" : \
\"\"}${e2[r3].toString()}`;\n            throw new Error(\"unhandled \
fromObject\");\n          }, thisLookup: (r3, n3) => {\n            if \
(\"texture\" === r3) return t2;\n            if (\"context\" === r3) return \
n3 ? null : \"gl\";\n            if (e2.hasOwnProperty(r3)) return \
JSON.stringify(e2[r3]);\n            throw new Error(`unhandled thisLookup \
${r3}`);\n          } })}\n  return toArray();\n  }`;\n        }\n        \
function u(e2, t2, r2, n2, i2) {\n          if (null === e2) return null;\n   \
       if (null === t2) return null;\n          switch (typeof e2) {\n        \
    case \"boolean\":\n            case \"number\":\n              return \
null;\n          }\n          if (\"undefined\" != typeof HTMLImageElement && \
e2 instanceof HTMLImageElement) for (let i3 = 0; i3 < t2.length; i3++) {\n    \
        const s2 = t2[i3];\n            if (\"HTMLImageArray\" !== s2.type && \
s2) continue;\n            if (s2.uploadValue !== e2) continue;\n            \
const a2 = r2[i3].indexOf(e2);\n            if (-1 === a2) continue;\n        \
    const o2 = `uploadValue_${s2.name}[${a2}]`;\n            return \
n2.insertVariable(o2, e2), o2;\n          }\n          for (let r3 = 0; r3 < \
t2.length; r3++) {\n            const i3 = t2[r3];\n            if (e2 !== \
i3.uploadValue) continue;\n            const s2 = `uploadValue_${i3.name}`;\n \
           return n2.insertVariable(s2, i3), s2;\n          }\n          \
return null;\n        }\n        t.exports = { glKernelString: function(e2, \
t2, r2, l, h) {\n          r2.built || r2.build.apply(r2, t2), t2 = t2 ? \
Array.from(t2).map((e3) => {\n            switch (typeof e3) {\n              \
case \"boolean\":\n                return new Boolean(e3);\n              \
case \"number\":\n                return new Number(e3);\n              \
default:\n                return e3;\n            }\n          }) : null;\n   \
       const c = [], p = [], d = n(r2.context, { useTrackablePrimitives: \
true, onReadPixels: (e3) => {\n            if (N.subKernels) {\n              \
if (m) {\n                const t3 = N.subKernels[f++].property;\n            \
    p.push(`    result${isNaN(t3) ? \".\" + t3 : `[${t3}]`} = ${a(e3, \
N)};`);\n              } else p.push(`    const result = { result: ${a(e3, \
N)} };`), m = true;\n              f === N.subKernels.length && p.push(\"    \
return result;\");\n            } else e3 ? p.push(`    return ${a(e3, N)};`) \
: p.push(\"    return null;\");\n          }, onUnrecognizedArgumentLookup: \
(e3) => {\n            const t3 = u(e3, N.kernelArguments, [], d, c);\n       \
     if (t3) return t3;\n            const r3 = u(e3, N.kernelConstants, S ? \
Object.keys(S).map((e4) => S[e4]) : [], d, c);\n            return r3 || \
null;\n          } });\n          let m = false, f = 0;\n          const { \
source: g, canvas: x, output: y, pipeline: b, graphical: T, \
loopMaxIterations: v, constants: S, optimizeFloatMemory: A, precision: _, \
fixIntegerDivisionAccuracy: E, functions: w, nativeFunctions: k, subKernels: \
I, immutable: D, argumentTypes: C, constantTypes: $, kernelArguments: L, \
kernelConstants: R, tactic: F } = r2, N = new e2(g, { canvas: x, context: d, \
checkContext: false, output: y, pipeline: b, graphical: T, loopMaxIterations: \
v, constants: S, optimizeFloatMemory: A, precision: _, \
fixIntegerDivisionAccuracy: E, functions: w, nativeFunctions: k, subKernels: \
I, immutable: D, argumentTypes: C, constantTypes: $, tactic: F });\n          \
let V = [];\n          if (d.setIndent(2), N.build.apply(N, t2), \
V.push(d.toString()), d.reset(), N.kernelArguments.forEach((e3, r3) => {\n    \
        switch (e3.type) {\n              case \"Integer\":\n              \
case \"Boolean\":\n              case \"Number\":\n              case \
\"Float\":\n              case \"Array\":\n              case \"Array(2)\":\n \
             case \"Array(3)\":\n              case \"Array(4)\":\n           \
   case \"HTMLCanvas\":\n              case \"HTMLImage\":\n              \
case \"HTMLVideo\":\n              case \"Input\":\n                \
d.insertVariable(`uploadValue_${e3.name}`, e3.uploadValue);\n                \
break;\n              case \"HTMLImageArray\":\n                for (let n2 = \
0; n2 < t2[r3].length; n2++) {\n                  const i2 = t2[r3];\n        \
          d.insertVariable(`uploadValue_${e3.name}[${n2}]`, i2[n2]);\n        \
        }\n                break;\n              case \
\"MemoryOptimizedNumberTexture\":\n              case \"NumberTexture\":\n    \
          case \"Array1D(2)\":\n              case \"Array1D(3)\":\n          \
    case \"Array1D(4)\":\n              case \"Array2D(2)\":\n              \
case \"Array2D(3)\":\n              case \"Array2D(4)\":\n              case \
\"Array3D(2)\":\n              case \"Array3D(3)\":\n              case \
\"Array3D(4)\":\n              case \"ArrayTexture(1)\":\n              case \
\"ArrayTexture(2)\":\n              case \"ArrayTexture(3)\":\n              \
case \"ArrayTexture(4)\":\n                \
d.insertVariable(`uploadValue_${e3.name}`, t2[r3].texture);\n                \
break;\n              default:\n                throw new Error(`unhandled \
kernelArgumentType insertion for glWiretap of type ${e3.type}`);\n            \
}\n          }), V.push(\"/** start of injected functions **/\"), \
V.push(`function ${s(i.flattenTo)}`), V.push(`function \
${s(i.flatten2dArrayTo)}`), V.push(`function ${s(i.flatten3dArrayTo)}`), \
V.push(`function ${s(i.flatten4dArrayTo)}`), V.push(`function \
${s(i.isArray)}`), N.renderOutput !== N.renderTexture && N.formatValues && \
V.push(`  const renderOutput = function ${s(N.formatValues)};`), V.push(\"/** \
end of injected functions **/\"), V.push(`  const innerKernel = function \
(${N.kernelArguments.map((e3) => e3.varName).join(\", \")}) {`), \
d.setIndent(4), N.run.apply(N, t2), N.renderKernels ? N.renderKernels() : \
N.renderOutput && N.renderOutput(), V.push(\"    /** start setup uploads for \
kernel values **/\"), N.kernelArguments.forEach((e3) => {\n            \
V.push(\"    \" + e3.getStringValueHandler().split(\"\\n\").join(\"\\n    \
\"));\n          }), V.push(\"    /** end setup uploads for kernel values \
**/\"), V.push(d.toString()), N.renderOutput === N.renderTexture) {\n         \
   d.reset();\n            const e3 = \
d.getContextVariableName(N.framebuffer);\n            if (N.renderKernels) \
{\n              const t3 = N.renderKernels(), r3 = \
d.getContextVariableName(N.texture.texture);\n              V.push(`    \
return {\n      result: {\n        texture: ${r3},\n        type: \
'${t3.result.type}',\n        toArray: ${o(t3.result, r3, e3)}\n      },`);\n \
             const { subKernels: n2, mappedTextures: i2 } = N;\n              \
for (let r4 = 0; r4 < n2.length; r4++) {\n                const s2 = i2[r4], \
a2 = n2[r4], u2 = t3[a2.property], l2 = \
d.getContextVariableName(s2.texture);\n                V.push(`\n      \
${a2.property}: {\n        texture: ${l2},\n        type: '${u2.type}',\n     \
   toArray: ${o(u2, l2, e3)}\n      },`);\n              }\n              \
V.push(\"    };\");\n            } else {\n              const t3 = \
N.renderOutput(), r3 = d.getContextVariableName(N.texture.texture);\n         \
     V.push(`    return {\n        texture: ${r3},\n        type: \
'${t3.type}',\n        toArray: ${o(t3, r3, e3)}\n      };`);\n            \
}\n          }\n          V.push(\"    \" + (h ? \"\\n\" + h + \"    \" : \
\"\")), V.push(p.join(\"\\n\")), V.push(\"  };\"), N.graphical && \
(V.push(function(e3) {\n            const t3 = e3.getPixels.toString(), r3 = \
!/^function/.test(t3);\n            return i.flattenFunctionToString(`${r3 ? \
\"function \" : \"\"}${t3}`, { findDependency: (e4, t4) => \"utils\" === e4 ? \
`const ${t4} = ${i[t4].toString()};` : null, thisLookup: (t4) => {\n          \
    if (\"context\" === t4) return null;\n              if \
(e3.hasOwnProperty(t4)) return JSON.stringify(e3[t4]);\n              throw \
new Error(`unhandled thisLookup ${t4}`);\n            } });\n          }(N)), \
V.push(\"  innerKernel.getPixels = getPixels;\")), V.push(\"  return \
innerKernel;\");\n          let M = [];\n          return R.forEach((e3) => \
{\n            M.push(`${e3.getStringValueHandler()}`);\n          }), \
`function kernel(settings) {\n  const { context, constants } = settings;\n  \
${M.join(\"\")}\n  ${l || \"\"}\n${V.join(\"\\n\")}\n}`;\n        } };\n      \
}, { \"../../utils\": 114, \"gl-wiretap\": 3 }], 13: [function(e, t, r) {\n   \
     const { Kernel: n } = e(\"../kernel\"), { utils: i } = \
e(\"../../utils\"), { GLTextureArray2Float: s } = \
e(\"./texture/array-2-float\"), { GLTextureArray2Float2D: a } = \
e(\"./texture/array-2-float-2d\"), { GLTextureArray2Float3D: o } = \
e(\"./texture/array-2-float-3d\"), { GLTextureArray3Float: u } = \
e(\"./texture/array-3-float\"), { GLTextureArray3Float2D: l } = \
e(\"./texture/array-3-float-2d\"), { GLTextureArray3Float3D: h } = \
e(\"./texture/array-3-float-3d\"), { GLTextureArray4Float: c } = \
e(\"./texture/array-4-float\"), { GLTextureArray4Float2D: p } = \
e(\"./texture/array-4-float-2d\"), { GLTextureArray4Float3D: d } = \
e(\"./texture/array-4-float-3d\"), { GLTextureFloat: m } = \
e(\"./texture/float\"), { GLTextureFloat2D: f } = e(\"./texture/float-2d\"), \
{ GLTextureFloat3D: g } = e(\"./texture/float-3d\"), { \
GLTextureMemoryOptimized: x } = e(\"./texture/memory-optimized\"), { \
GLTextureMemoryOptimized2D: y } = e(\"./texture/memory-optimized-2d\"), { \
GLTextureMemoryOptimized3D: b } = e(\"./texture/memory-optimized-3d\"), { \
GLTextureUnsigned: T } = e(\"./texture/unsigned\"), { GLTextureUnsigned2D: v \
} = e(\"./texture/unsigned-2d\"), { GLTextureUnsigned3D: S } = \
e(\"./texture/unsigned-3d\"), { GLTextureGraphical: A } = \
e(\"./texture/graphical\");\n        const _ = { int: \"Integer\", float: \
\"Number\", vec2: \"Array(2)\", vec3: \"Array(3)\", vec4: \"Array(4)\" };\n   \
     t.exports = { GLKernel: class extends n {\n          static get mode() \
{\n            return \"gpu\";\n          }\n          static \
getIsFloatRead() {\n            const e2 = new this(\"function \
kernelFunction() {\\n      return 1;\\n    }\", { context: this.testContext, \
canvas: this.testCanvas, validate: false, output: [1], precision: \"single\", \
returnType: \"Number\", tactic: \"speed\" });\n            e2.build(), \
e2.run();\n            const t2 = e2.renderOutput();\n            return \
e2.destroy(true), 1 === t2[0];\n          }\n          static \
getIsIntegerDivisionAccurate() {\n            const e2 = new \
this(function(e3, t3) {\n              return e3[this.thread.x] / \
t3[this.thread.x];\n            }.toString(), { context: this.testContext, \
canvas: this.testCanvas, validate: false, output: [2], returnType: \
\"Number\", precision: \"unsigned\", tactic: \"speed\" }), t2 = [[6, \
6030401], [3, 3991]];\n            e2.build.apply(e2, t2), e2.run.apply(e2, \
t2);\n            const r2 = e2.renderOutput();\n            return \
e2.destroy(true), 2 === r2[0] && 1511 === r2[1];\n          }\n          \
static getIsSpeedTacticSupported() {\n            const e2 = new \
this(function(e3) {\n              return e3[this.thread.x];\n            \
}.toString(), { context: this.testContext, canvas: this.testCanvas, validate: \
false, output: [4], returnType: \"Number\", precision: \"unsigned\", tactic: \
\"speed\" }), t2 = [[0, 1, 2, 3]];\n            e2.build.apply(e2, t2), \
e2.run.apply(e2, t2);\n            const r2 = e2.renderOutput();\n            \
return e2.destroy(true), 0 === Math.round(r2[0]) && 1 === Math.round(r2[1]) \
&& 2 === Math.round(r2[2]) && 3 === Math.round(r2[3]);\n          }\n         \
 static get testCanvas() {\n            throw new Error(`\"testCanvas\" not \
defined on ${this.name}`);\n          }\n          static get testContext() \
{\n            throw new Error(`\"testContext\" not defined on \
${this.name}`);\n          }\n          static getFeatures() {\n            \
const e2 = this.testContext, t2 = this.getIsDrawBuffers();\n            \
return Object.freeze({ isFloatRead: this.getIsFloatRead(), \
isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(), \
isSpeedTacticSupported: this.getIsSpeedTacticSupported(), isTextureFloat: \
this.getIsTextureFloat(), isDrawBuffers: t2, kernelMap: t2, channelCount: \
this.getChannelCount(), maxTextureSize: this.getMaxTextureSize(), \
lowIntPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.LOW_INT), \
lowFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.LOW_FLOAT), mediumIntPrecision: \
e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.MEDIUM_INT), \
mediumFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.MEDIUM_FLOAT), highIntPrecision: \
e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.HIGH_INT), \
highFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.HIGH_FLOAT) });\n          }\n          static setupFeatureChecks() {\n    \
        throw new Error(`\"setupFeatureChecks\" not defined on \
${this.name}`);\n          }\n          static getSignature(e2, t2) {\n       \
     return e2.getVariablePrecisionString() + (t2.length > 0 ? \":\" + \
t2.join(\",\") : \"\");\n          }\n          \
setFixIntegerDivisionAccuracy(e2) {\n            return \
this.fixIntegerDivisionAccuracy = e2, this;\n          }\n          \
setPrecision(e2) {\n            return this.precision = e2, this;\n          \
}\n          setFloatTextures(e2) {\n            return \
i.warnDeprecated(\"method\", \"setFloatTextures\", \
\"setOptimizeFloatMemory\"), this.floatTextures = e2, this;\n          }\n    \
      static nativeFunctionArguments(e2) {\n            const t2 = [], r2 = \
[], n2 = [], i2 = /^[a-zA-Z_]/, s2 = /[a-zA-Z_0-9]/;\n            let a2 = 0, \
o2 = null, u2 = null;\n            for (; a2 < e2.length; ) {\n              \
const l2 = e2[a2], h2 = e2[a2 + 1], c2 = n2.length > 0 ? n2[n2.length - 1] : \
null;\n              if (\"FUNCTION_ARGUMENTS\" !== c2 || \"/\" !== l2 || \
\"*\" !== h2) if (\"MULTI_LINE_COMMENT\" !== c2 || \"*\" !== l2 || \"/\" !== \
h2) if (\"FUNCTION_ARGUMENTS\" !== c2 || \"/\" !== l2 || \"/\" !== h2) if \
(\"COMMENT\" !== c2 || \"\\n\" !== l2) if (null !== c2 || \"(\" !== l2) {\n   \
             if (\"FUNCTION_ARGUMENTS\" === c2) {\n                  if \
(\")\" === l2) {\n                    n2.pop();\n                    break;\n \
                 }\n                  if (\"f\" === l2 && \"l\" === h2 && \
\"o\" === e2[a2 + 2] && \"a\" === e2[a2 + 3] && \"t\" === e2[a2 + 4] && \" \" \
=== e2[a2 + 5]) {\n                    n2.push(\"DECLARE_VARIABLE\"), u2 = \
\"float\", o2 = \"\", a2 += 6;\n                    continue;\n               \
   }\n                  if (\"i\" === l2 && \"n\" === h2 && \"t\" === e2[a2 + \
2] && \" \" === e2[a2 + 3]) {\n                    \
n2.push(\"DECLARE_VARIABLE\"), u2 = \"int\", o2 = \"\", a2 += 4;\n            \
        continue;\n                  }\n                  if (\"v\" === l2 && \
\"e\" === h2 && \"c\" === e2[a2 + 2] && \"2\" === e2[a2 + 3] && \" \" === \
e2[a2 + 4]) {\n                    n2.push(\"DECLARE_VARIABLE\"), u2 = \
\"vec2\", o2 = \"\", a2 += 5;\n                    continue;\n                \
  }\n                  if (\"v\" === l2 && \"e\" === h2 && \"c\" === e2[a2 + \
2] && \"3\" === e2[a2 + 3] && \" \" === e2[a2 + 4]) {\n                    \
n2.push(\"DECLARE_VARIABLE\"), u2 = \"vec3\", o2 = \"\", a2 += 5;\n           \
         continue;\n                  }\n                  if (\"v\" === l2 \
&& \"e\" === h2 && \"c\" === e2[a2 + 2] && \"4\" === e2[a2 + 3] && \" \" === \
e2[a2 + 4]) {\n                    n2.push(\"DECLARE_VARIABLE\"), u2 = \
\"vec4\", o2 = \"\", a2 += 5;\n                    continue;\n                \
  }\n                } else if (\"DECLARE_VARIABLE\" === c2) {\n              \
    if (\"\" === o2) {\n                    if (\" \" === l2) {\n             \
         a2++;\n                      continue;\n                    }\n      \
              if (!i2.test(l2)) throw new Error(\"variable name is not \
expected string\");\n                  }\n                  o2 += l2, \
s2.test(h2) || (n2.pop(), r2.push(o2), t2.push(_[u2]));\n                }\n  \
              a2++;\n              } else n2.push(\"FUNCTION_ARGUMENTS\"), \
a2++;\n              else n2.pop(), a2++;\n              else \
n2.push(\"COMMENT\"), a2 += 2;\n              else n2.pop(), a2 += 2;\n       \
       else n2.push(\"MULTI_LINE_COMMENT\"), a2 += 2;\n            }\n        \
    if (n2.length > 0) throw new Error(\"GLSL function was not parsable\");\n \
           return { argumentNames: r2, argumentTypes: t2 };\n          }\n    \
      static nativeFunctionReturnType(e2) {\n            return \
_[e2.match(/int|float|vec[2-4]/)[0]];\n          }\n          static \
combineKernels(e2, t2) {\n            e2.apply(null, arguments);\n            \
const { texSize: r2, context: n2, threadDim: s2 } = t2.texSize;\n            \
let a2;\n            if (\"single\" === t2.precision) {\n              const \
e3 = r2[0], t3 = Math.ceil(r2[1] / 4);\n              a2 = new \
Float32Array(e3 * t3 * 4 * 4), n2.readPixels(0, 0, e3, 4 * t3, n2.RGBA, \
n2.FLOAT, a2);\n            } else {\n              const e3 = new \
Uint8Array(r2[0] * r2[1] * 4);\n              n2.readPixels(0, 0, r2[0], \
r2[1], n2.RGBA, n2.UNSIGNED_BYTE, e3), a2 = new Float32Array(e3.buffer);\n    \
        }\n            if (a2 = a2.subarray(0, s2[0] * s2[1] * s2[2]), 1 === \
t2.output.length) return a2;\n            if (2 === t2.output.length) return \
i.splitArray(a2, t2.output[0]);\n            if (3 === t2.output.length) {\n  \
            return i.splitArray(a2, t2.output[0] * \
t2.output[1]).map(function(e3) {\n                return i.splitArray(e3, \
t2.output[0]);\n              });\n            }\n          }\n          \
constructor(e2, t2) {\n            super(e2, t2), this.transferValues = null, \
this.formatValues = null, this.TextureConstructor = null, this.renderOutput = \
null, this.renderRawOutput = null, this.texSize = null, this.translatedSource \
= null, this.compiledFragmentShader = null, this.compiledVertexShader = null, \
this.switchingKernels = null, this._textureSwitched = null, \
this._mappedTextureSwitched = null;\n          }\n          \
checkTextureSize() {\n            const { features: e2 } = \
this.constructor;\n            if (this.texSize[0] > e2.maxTextureSize || \
this.texSize[1] > e2.maxTextureSize) throw new Error(`Texture size \
[${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than \
supported size [${e2.maxTextureSize},${e2.maxTextureSize}]`);\n          }\n  \
        translateSource() {\n            throw new Error(`\"translateSource\" \
not defined on ${this.constructor.name}`);\n          }\n          \
pickRenderStrategy(e2) {\n            if (this.graphical) return \
this.renderRawOutput = this.readPackedPixelsToUint8Array, this.transferValues \
= (e3) => e3, this.TextureConstructor = A, null;\n            if \
(\"unsigned\" === this.precision) if (this.renderRawOutput = \
this.readPackedPixelsToUint8Array, this.transferValues = \
this.readPackedPixelsToFloat32Array, this.pipeline) switch (this.renderOutput \
= this.renderTexture, null !== this.subKernels && (this.renderKernels = \
this.renderKernelsToTextures), this.returnType) {\n              case \
\"LiteralInteger\":\n              case \"Float\":\n              case \
\"Number\":\n              case \"Integer\":\n                return \
this.output[2] > 0 ? (this.TextureConstructor = S, null) : this.output[1] > 0 \
? (this.TextureConstructor = v, null) : (this.TextureConstructor = T, \
null);\n              case \"Array(2)\":\n              case \"Array(3)\":\n  \
            case \"Array(4)\":\n                return \
this.requestFallback(e2);\n            }\n            else switch (null !== \
this.subKernels && (this.renderKernels = this.renderKernelsToArrays), \
this.returnType) {\n              case \"LiteralInteger\":\n              \
case \"Float\":\n              case \"Number\":\n              case \
\"Integer\":\n                return this.renderOutput = this.renderValues, \
this.output[2] > 0 ? (this.TextureConstructor = S, this.formatValues = \
i.erect3DPackedFloat, null) : this.output[1] > 0 ? (this.TextureConstructor = \
v, this.formatValues = i.erect2DPackedFloat, null) : (this.TextureConstructor \
= T, this.formatValues = i.erectPackedFloat, null);\n              case \
\"Array(2)\":\n              case \"Array(3)\":\n              case \
\"Array(4)\":\n                return this.requestFallback(e2);\n            \
}\n            else {\n              if (\"single\" !== this.precision) throw \
new Error(`unhandled precision of \"${this.precision}\"`);\n              if \
(this.renderRawOutput = this.readFloatPixelsToFloat32Array, \
this.transferValues = this.readFloatPixelsToFloat32Array, this.pipeline) \
switch (this.renderOutput = this.renderTexture, null !== this.subKernels && \
(this.renderKernels = this.renderKernelsToTextures), this.returnType) {\n     \
           case \"LiteralInteger\":\n                case \"Float\":\n        \
        case \"Number\":\n                case \"Integer\":\n                 \
 return this.optimizeFloatMemory ? this.output[2] > 0 ? \
(this.TextureConstructor = b, null) : this.output[1] > 0 ? \
(this.TextureConstructor = y, null) : (this.TextureConstructor = x, null) : \
this.output[2] > 0 ? (this.TextureConstructor = g, null) : this.output[1] > 0 \
? (this.TextureConstructor = f, null) : (this.TextureConstructor = m, \
null);\n                case \"Array(2)\":\n                  return \
this.output[2] > 0 ? (this.TextureConstructor = o, null) : this.output[1] > 0 \
? (this.TextureConstructor = a, null) : (this.TextureConstructor = s, \
null);\n                case \"Array(3)\":\n                  return \
this.output[2] > 0 ? (this.TextureConstructor = h, null) : this.output[1] > 0 \
? (this.TextureConstructor = l, null) : (this.TextureConstructor = u, \
null);\n                case \"Array(4)\":\n                  return \
this.output[2] > 0 ? (this.TextureConstructor = d, null) : this.output[1] > 0 \
? (this.TextureConstructor = p, null) : (this.TextureConstructor = c, \
null);\n              }\n              if (this.renderOutput = \
this.renderValues, null !== this.subKernels && (this.renderKernels = \
this.renderKernelsToArrays), this.optimizeFloatMemory) switch \
(this.returnType) {\n                case \"LiteralInteger\":\n               \
 case \"Float\":\n                case \"Number\":\n                case \
\"Integer\":\n                  return this.output[2] > 0 ? \
(this.TextureConstructor = b, this.formatValues = \
i.erectMemoryOptimized3DFloat, null) : this.output[1] > 0 ? \
(this.TextureConstructor = y, this.formatValues = \
i.erectMemoryOptimized2DFloat, null) : (this.TextureConstructor = x, \
this.formatValues = i.erectMemoryOptimizedFloat, null);\n                case \
\"Array(2)\":\n                  return this.output[2] > 0 ? \
(this.TextureConstructor = o, this.formatValues = i.erect3DArray2, null) : \
this.output[1] > 0 ? (this.TextureConstructor = a, this.formatValues = \
i.erect2DArray2, null) : (this.TextureConstructor = s, this.formatValues = \
i.erectArray2, null);\n                case \"Array(3)\":\n                  \
return this.output[2] > 0 ? (this.TextureConstructor = h, this.formatValues = \
i.erect3DArray3, null) : this.output[1] > 0 ? (this.TextureConstructor = l, \
this.formatValues = i.erect2DArray3, null) : (this.TextureConstructor = u, \
this.formatValues = i.erectArray3, null);\n                case \
\"Array(4)\":\n                  return this.output[2] > 0 ? \
(this.TextureConstructor = d, this.formatValues = i.erect3DArray4, null) : \
this.output[1] > 0 ? (this.TextureConstructor = p, this.formatValues = \
i.erect2DArray4, null) : (this.TextureConstructor = c, this.formatValues = \
i.erectArray4, null);\n              }\n              else switch \
(this.returnType) {\n                case \"LiteralInteger\":\n               \
 case \"Float\":\n                case \"Number\":\n                case \
\"Integer\":\n                  return this.output[2] > 0 ? \
(this.TextureConstructor = g, this.formatValues = i.erect3DFloat, null) : \
this.output[1] > 0 ? (this.TextureConstructor = f, this.formatValues = \
i.erect2DFloat, null) : (this.TextureConstructor = m, this.formatValues = \
i.erectFloat, null);\n                case \"Array(2)\":\n                  \
return this.output[2] > 0 ? (this.TextureConstructor = o, this.formatValues = \
i.erect3DArray2, null) : this.output[1] > 0 ? (this.TextureConstructor = a, \
this.formatValues = i.erect2DArray2, null) : (this.TextureConstructor = s, \
this.formatValues = i.erectArray2, null);\n                case \
\"Array(3)\":\n                  return this.output[2] > 0 ? \
(this.TextureConstructor = h, this.formatValues = i.erect3DArray3, null) : \
this.output[1] > 0 ? (this.TextureConstructor = l, this.formatValues = \
i.erect2DArray3, null) : (this.TextureConstructor = u, this.formatValues = \
i.erectArray3, null);\n                case \"Array(4)\":\n                  \
return this.output[2] > 0 ? (this.TextureConstructor = d, this.formatValues = \
i.erect3DArray4, null) : this.output[1] > 0 ? (this.TextureConstructor = p, \
this.formatValues = i.erect2DArray4, null) : (this.TextureConstructor = c, \
this.formatValues = i.erectArray4, null);\n              }\n            }\n   \
         throw new Error(`unhandled return type \"${this.returnType}\"`);\n   \
       }\n          getKernelString() {\n            throw new \
Error(\"abstract method call\");\n          }\n          \
getMainResultTexture() {\n            switch (this.returnType) {\n            \
  case \"LiteralInteger\":\n              case \"Float\":\n              case \
\"Integer\":\n              case \"Number\":\n                return \
this.getMainResultNumberTexture();\n              case \"Array(2)\":\n        \
        return this.getMainResultArray2Texture();\n              case \
\"Array(3)\":\n                return this.getMainResultArray3Texture();\n    \
          case \"Array(4)\":\n                return \
this.getMainResultArray4Texture();\n              default:\n                \
throw new Error(`unhandled returnType type ${this.returnType}`);\n            \
}\n          }\n          getMainResultKernelNumberTexture() {\n            \
throw new Error(\"abstract method call\");\n          }\n          \
getMainResultSubKernelNumberTexture() {\n            throw new \
Error(\"abstract method call\");\n          }\n          \
getMainResultKernelArray2Texture() {\n            throw new Error(\"abstract \
method call\");\n          }\n          getMainResultSubKernelArray2Texture() \
{\n            throw new Error(\"abstract method call\");\n          }\n      \
    getMainResultKernelArray3Texture() {\n            throw new \
Error(\"abstract method call\");\n          }\n          \
getMainResultSubKernelArray3Texture() {\n            throw new \
Error(\"abstract method call\");\n          }\n          \
getMainResultKernelArray4Texture() {\n            throw new Error(\"abstract \
method call\");\n          }\n          getMainResultSubKernelArray4Texture() \
{\n            throw new Error(\"abstract method call\");\n          }\n      \
    getMainResultGraphical() {\n            throw new Error(\"abstract method \
call\");\n          }\n          getMainResultMemoryOptimizedFloats() {\n     \
       throw new Error(\"abstract method call\");\n          }\n          \
getMainResultPackedPixels() {\n            throw new Error(\"abstract method \
call\");\n          }\n          getMainResultString() {\n            return \
this.graphical ? this.getMainResultGraphical() : \"single\" === \
this.precision ? this.optimizeFloatMemory ? \
this.getMainResultMemoryOptimizedFloats() : this.getMainResultTexture() : \
this.getMainResultPackedPixels();\n          }\n          \
getMainResultNumberTexture() {\n            return \
i.linesToString(this.getMainResultKernelNumberTexture()) + \
i.linesToString(this.getMainResultSubKernelNumberTexture());\n          }\n   \
       getMainResultArray2Texture() {\n            return \
i.linesToString(this.getMainResultKernelArray2Texture()) + \
i.linesToString(this.getMainResultSubKernelArray2Texture());\n          }\n   \
       getMainResultArray3Texture() {\n            return \
i.linesToString(this.getMainResultKernelArray3Texture()) + \
i.linesToString(this.getMainResultSubKernelArray3Texture());\n          }\n   \
       getMainResultArray4Texture() {\n            return \
i.linesToString(this.getMainResultKernelArray4Texture()) + \
i.linesToString(this.getMainResultSubKernelArray4Texture());\n          }\n   \
       getFloatTacticDeclaration() {\n            return `precision \
${this.getVariablePrecisionString(this.texSize, this.tactic)} float;\n`;\n    \
      }\n          getIntTacticDeclaration() {\n            return `precision \
${this.getVariablePrecisionString(this.texSize, this.tactic, true)} \
int;\n`;\n          }\n          getSampler2DTacticDeclaration() {\n          \
  return `precision ${this.getVariablePrecisionString(this.texSize, \
this.tactic)} sampler2D;\n`;\n          }\n          \
getSampler2DArrayTacticDeclaration() {\n            return `precision \
${this.getVariablePrecisionString(this.texSize, this.tactic)} \
sampler2DArray;\n`;\n          }\n          renderTexture() {\n            \
return this.immutable ? this.texture.clone() : this.texture;\n          }\n   \
       readPackedPixelsToUint8Array() {\n            if (\"unsigned\" !== \
this.precision) throw new Error('Requires this.precision to be \
\"unsigned\"');\n            const { texSize: e2, context: t2 } = this, r2 = \
new Uint8Array(e2[0] * e2[1] * 4);\n            return t2.readPixels(0, 0, \
e2[0], e2[1], t2.RGBA, t2.UNSIGNED_BYTE, r2), r2;\n          }\n          \
readPackedPixelsToFloat32Array() {\n            return new \
Float32Array(this.readPackedPixelsToUint8Array().buffer);\n          }\n      \
    readFloatPixelsToFloat32Array() {\n            if (\"single\" !== \
this.precision) throw new Error('Requires this.precision to be \
\"single\"');\n            const { texSize: e2, context: t2 } = this, r2 = \
e2[0], n2 = e2[1], i2 = new Float32Array(r2 * n2 * 4);\n            return \
t2.readPixels(0, 0, r2, n2, t2.RGBA, t2.FLOAT, i2), i2;\n          }\n        \
  getPixels(e2) {\n            const { context: t2, output: r2 } = this, [n2, \
s2] = r2, a2 = new Uint8Array(n2 * s2 * 4);\n            return \
t2.readPixels(0, 0, n2, s2, t2.RGBA, t2.UNSIGNED_BYTE, a2), new \
Uint8ClampedArray((e2 ? a2 : i.flipPixels(a2, n2, s2)).buffer);\n          \
}\n          renderKernelsToArrays() {\n            const e2 = { result: \
this.renderOutput() };\n            for (let t2 = 0; t2 < \
this.subKernels.length; t2++) e2[this.subKernels[t2].property] = \
this.mappedTextures[t2].toArray();\n            return e2;\n          }\n     \
     renderKernelsToTextures() {\n            const e2 = { result: \
this.renderOutput() };\n            if (this.immutable) for (let t2 = 0; t2 < \
this.subKernels.length; t2++) e2[this.subKernels[t2].property] = \
this.mappedTextures[t2].clone();\n            else for (let t2 = 0; t2 < \
this.subKernels.length; t2++) e2[this.subKernels[t2].property] = \
this.mappedTextures[t2];\n            return e2;\n          }\n          \
resetSwitchingKernels() {\n            const e2 = this.switchingKernels;\n    \
        return this.switchingKernels = null, e2;\n          }\n          \
setOutput(e2) {\n            const t2 = this.toKernelOutput(e2);\n            \
if (this.program) {\n              if (!this.dynamicOutput) throw new \
Error(\"Resizing a kernel with dynamicOutput: false is not possible\");\n     \
         const r2 = [t2[0], t2[1] || 1, t2[2] || 1], n2 = \
i.getKernelTextureSize({ optimizeFloatMemory: this.optimizeFloatMemory, \
precision: this.precision }, r2), s2 = this.texSize;\n              if (s2) \
{\n                const t3 = this.getVariablePrecisionString(s2, \
this.tactic), r3 = this.getVariablePrecisionString(n2, this.tactic);\n        \
        if (t3 !== r3) return this.debug && console.warn(\"Precision \
requirement changed, asking GPU instance to recompile\"), void \
this.switchKernels({ type: \"outputPrecisionMismatch\", precision: r3, \
needed: e2 });\n              }\n              this.output = t2, \
this.threadDim = r2, this.texSize = n2;\n              const { context: a2 } \
= this;\n              if (a2.bindFramebuffer(a2.FRAMEBUFFER, \
this.framebuffer), this.updateMaxTexSize(), this.framebuffer.width = \
this.texSize[0], this.framebuffer.height = this.texSize[1], a2.viewport(0, 0, \
this.maxTexSize[0], this.maxTexSize[1]), this.canvas.width = \
this.maxTexSize[0], this.canvas.height = this.maxTexSize[1], this.texture && \
this.texture.delete(), this.texture = null, this._setupOutputTexture(), \
this.mappedTextures && this.mappedTextures.length > 0) {\n                for \
(let e3 = 0; e3 < this.mappedTextures.length; e3++) \
this.mappedTextures[e3].delete();\n                this.mappedTextures = \
null, this._setupSubOutputTextures();\n              }\n            } else \
this.output = t2;\n            return this;\n          }\n          \
renderValues() {\n            return this.formatValues(this.transferValues(), \
this.output[0], this.output[1], this.output[2]);\n          }\n          \
switchKernels(e2) {\n            this.switchingKernels ? \
this.switchingKernels.push(e2) : this.switchingKernels = [e2];\n          }\n \
         getVariablePrecisionString(e2 = this.texSize, t2 = this.tactic, r2 = \
false) {\n            if (!t2) {\n              if \
(!this.constructor.features.isSpeedTacticSupported) return \"highp\";\n       \
       const t3 = this.constructor.features[r2 ? \"lowIntPrecision\" : \
\"lowFloatPrecision\"], n2 = this.constructor.features[r2 ? \
\"mediumIntPrecision\" : \"mediumFloatPrecision\"], i2 = \
this.constructor.features[r2 ? \"highIntPrecision\" : \
\"highFloatPrecision\"], s2 = Math.log2(e2[0] * e2[1]);\n              if (s2 \
<= t3.rangeMax) return \"lowp\";\n              if (s2 <= n2.rangeMax) return \
\"mediump\";\n              if (s2 <= i2.rangeMax) return \"highp\";\n        \
      throw new Error(\"The required size exceeds that of the ability of your \
system\");\n            }\n            switch (t2) {\n              case \
\"speed\":\n                return \"lowp\";\n              case \
\"balanced\":\n                return \"mediump\";\n              case \
\"precision\":\n                return \"highp\";\n              default:\n   \
             throw new Error(`Unknown tactic \"${t2}\" use \"speed\", \
\"balanced\", \"precision\", or empty for auto`);\n            }\n          \
}\n          updateTextureArgumentRefs(e2, t2) {\n            if \
(this.immutable) {\n              if (this.texture.texture === t2.texture) \
{\n                const { prevArg: r2 } = e2;\n                r2 && (1 === \
r2.texture._refs && (this.texture.delete(), this.texture = r2.clone(), \
this._textureSwitched = true), r2.delete()), e2.prevArg = t2.clone();\n       \
       } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n  \
              const { mappedTextures: r2 } = this;\n                for (let \
n2 = 0; n2 < r2.length; n2++) {\n                  const i2 = r2[n2];\n       \
           if (i2.texture === t2.texture) {\n                    const { \
prevArg: s2 } = e2;\n                    return s2 && (1 === s2.texture._refs \
&& (i2.delete(), r2[n2] = s2.clone(), this._mappedTextureSwitched[n2] = \
true), s2.delete()), void (e2.prevArg = t2.clone());\n                  }\n   \
             }\n              }\n            }\n          }\n          \
onActivate(e2) {\n            if (this._textureSwitched = true, this.texture \
= e2.texture, this.mappedTextures) {\n              for (let e3 = 0; e3 < \
this.mappedTextures.length; e3++) this._mappedTextureSwitched[e3] = true;\n   \
           this.mappedTextures = e2.mappedTextures;\n            }\n          \
}\n          initCanvas() {\n          }\n        } };\n      }, { \
\"../../utils\": 114, \"../kernel\": 36, \"./texture/array-2-float\": 16, \
\"./texture/array-2-float-2d\": 14, \"./texture/array-2-float-3d\": 15, \
\"./texture/array-3-float\": 19, \"./texture/array-3-float-2d\": 17, \
\"./texture/array-3-float-3d\": 18, \"./texture/array-4-float\": 22, \
\"./texture/array-4-float-2d\": 20, \"./texture/array-4-float-3d\": 21, \
\"./texture/float\": 25, \"./texture/float-2d\": 23, \"./texture/float-3d\": \
24, \"./texture/graphical\": 26, \"./texture/memory-optimized\": 30, \
\"./texture/memory-optimized-2d\": 28, \"./texture/memory-optimized-3d\": 29, \
\"./texture/unsigned\": 33, \"./texture/unsigned-2d\": 31, \
\"./texture/unsigned-3d\": 32 }], 14: [function(e, t, r) {\n        const { \
utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } = e(\"./float\");\n \
       t.exports = { GLTextureArray2Float2D: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \"ArrayTexture(2)\";\n  \
        }\n          toArray() {\n            return \
n.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n       \
   }\n        } };\n      }, { \"../../../utils\": 114, \"./float\": 25 }], \
15: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ GLTextureFloat: i } = e(\"./float\");\n        t.exports = { \
GLTextureArray2Float3D: class extends i {\n          constructor(e2) {\n      \
      super(e2), this.type = \"ArrayTexture(2)\";\n          }\n          \
toArray() {\n            return n.erect3DArray2(this.renderValues(), \
this.output[0], this.output[1], this.output[2]);\n          }\n        } };\n \
     }, { \"../../../utils\": 114, \"./float\": 25 }], 16: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } \
= e(\"./float\");\n        t.exports = { GLTextureArray2Float: class extends \
i {\n          constructor(e2) {\n            super(e2), this.type = \
\"ArrayTexture(2)\";\n          }\n          toArray() {\n            return \
n.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n         \
 }\n        } };\n      }, { \"../../../utils\": 114, \"./float\": 25 }], 17: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
GLTextureFloat: i } = e(\"./float\");\n        t.exports = { \
GLTextureArray3Float2D: class extends i {\n          constructor(e2) {\n      \
      super(e2), this.type = \"ArrayTexture(3)\";\n          }\n          \
toArray() {\n            return n.erect2DArray3(this.renderValues(), \
this.output[0], this.output[1]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./float\": 25 }], 18: [function(e, t, r) {\n       \
 const { utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } = \
e(\"./float\");\n        t.exports = { GLTextureArray3Float3D: class extends \
i {\n          constructor(e2) {\n            super(e2), this.type = \
\"ArrayTexture(3)\";\n          }\n          toArray() {\n            return \
n.erect3DArray3(this.renderValues(), this.output[0], this.output[1], \
this.output[2]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./float\": 25 }], 19: [function(e, t, r) {\n        const { utils: n } \
= e(\"../../../utils\"), { GLTextureFloat: i } = e(\"./float\");\n        \
t.exports = { GLTextureArray3Float: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \"ArrayTexture(3)\";\n  \
        }\n          toArray() {\n            return \
n.erectArray3(this.renderValues(), this.output[0]);\n          }\n        } \
};\n      }, { \"../../../utils\": 114, \"./float\": 25 }], 20: [function(e, \
t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
GLTextureFloat: i } = e(\"./float\");\n        t.exports = { \
GLTextureArray4Float2D: class extends i {\n          constructor(e2) {\n      \
      super(e2), this.type = \"ArrayTexture(4)\";\n          }\n          \
toArray() {\n            return n.erect2DArray4(this.renderValues(), \
this.output[0], this.output[1]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./float\": 25 }], 21: [function(e, t, r) {\n       \
 const { utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } = \
e(\"./float\");\n        t.exports = { GLTextureArray4Float3D: class extends \
i {\n          constructor(e2) {\n            super(e2), this.type = \
\"ArrayTexture(4)\";\n          }\n          toArray() {\n            return \
n.erect3DArray4(this.renderValues(), this.output[0], this.output[1], \
this.output[2]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./float\": 25 }], 22: [function(e, t, r) {\n        const { utils: n } \
= e(\"../../../utils\"), { GLTextureFloat: i } = e(\"./float\");\n        \
t.exports = { GLTextureArray4Float: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \"ArrayTexture(4)\";\n  \
        }\n          toArray() {\n            return \
n.erectArray4(this.renderValues(), this.output[0]);\n          }\n        } \
};\n      }, { \"../../../utils\": 114, \"./float\": 25 }], 23: [function(e, \
t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
GLTextureFloat: i } = e(\"./float\");\n        t.exports = { \
GLTextureFloat2D: class extends i {\n          constructor(e2) {\n            \
super(e2), this.type = \"ArrayTexture(1)\";\n          }\n          toArray() \
{\n            return n.erect2DFloat(this.renderValues(), this.output[0], \
this.output[1]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./float\": 25 }], 24: [function(e, t, r) {\n        const { utils: n } \
= e(\"../../../utils\"), { GLTextureFloat: i } = e(\"./float\");\n        \
t.exports = { GLTextureFloat3D: class extends i {\n          constructor(e2) \
{\n            super(e2), this.type = \"ArrayTexture(1)\";\n          }\n     \
     toArray() {\n            return n.erect3DFloat(this.renderValues(), \
this.output[0], this.output[1], this.output[2]);\n          }\n        } };\n \
     }, { \"../../../utils\": 114, \"./float\": 25 }], 25: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { GLTexture: i } = \
e(\"./index\");\n        t.exports = { GLTextureFloat: class extends i {\n    \
      get textureType() {\n            return this.context.FLOAT;\n          \
}\n          constructor(e2) {\n            super(e2), this.type = \
\"ArrayTexture(1)\";\n          }\n          renderRawOutput() {\n            \
const e2 = this.context, t2 = this.size;\n            \
e2.bindFramebuffer(e2.FRAMEBUFFER, this.framebuffer()), \
e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, \
this.texture, 0);\n            const r2 = new Float32Array(t2[0] * t2[1] * \
4);\n            return e2.readPixels(0, 0, t2[0], t2[1], e2.RGBA, e2.FLOAT, \
r2), r2;\n          }\n          renderValues() {\n            return \
this._deleted ? null : this.renderRawOutput();\n          }\n          \
toArray() {\n            return n.erectFloat(this.renderValues(), \
this.output[0]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./index\": 27 }], 26: [function(e, t, r) {\n        const { \
GLTextureUnsigned: n } = e(\"./unsigned\");\n        t.exports = { \
GLTextureGraphical: class extends n {\n          constructor(e2) {\n          \
  super(e2), this.type = \"ArrayTexture(4)\";\n          }\n          \
toArray() {\n            return this.renderValues();\n          }\n        } \
};\n      }, { \"./unsigned\": 33 }], 27: [function(e, t, r) {\n        const \
{ Texture: n } = e(\"../../../texture\");\n        function i(e2, t2) {\n     \
     e2.activeTexture(e2.TEXTURE15), e2.bindTexture(e2.TEXTURE_2D, t2), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST);\n        \
}\n        t.exports = { GLTexture: class extends n {\n          get \
textureType() {\n            throw new Error(`\"textureType\" not implemented \
on ${this.name}`);\n          }\n          clone() {\n            return new \
this.constructor(this);\n          }\n          beforeMutate() {\n            \
return this.texture._refs > 1 && (this.newTexture(), true);\n          }\n    \
      cloneTexture() {\n            this.texture._refs--;\n            const \
{ context: e2, size: t2, texture: r2, kernel: n2 } = this;\n            \
n2.debug && console.warn(\"cloning internal texture\"), \
e2.bindFramebuffer(e2.FRAMEBUFFER, this.framebuffer()), i(e2, r2), \
e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, \
r2, 0);\n            const s = e2.createTexture();\n            i(e2, s), \
e2.texImage2D(e2.TEXTURE_2D, 0, this.internalFormat, t2[0], t2[1], 0, \
this.textureFormat, this.textureType, null), \
e2.copyTexSubImage2D(e2.TEXTURE_2D, 0, 0, 0, 0, 0, t2[0], t2[1]), s._refs = \
1, this.texture = s;\n          }\n          newTexture() {\n            \
this.texture._refs--;\n            const e2 = this.context, t2 = this.size;\n \
           this.kernel.debug && console.warn(\"new internal texture\");\n     \
       const r2 = e2.createTexture();\n            i(e2, r2), \
e2.texImage2D(e2.TEXTURE_2D, 0, this.internalFormat, t2[0], t2[1], 0, \
this.textureFormat, this.textureType, null), r2._refs = 1, this.texture = \
r2;\n          }\n          clear() {\n            if (this.texture._refs) \
{\n              this.texture._refs--;\n              const e3 = \
this.context, t3 = this.texture = e3.createTexture();\n              i(e3, \
t3);\n              const r2 = this.size;\n              t3._refs = 1, \
e3.texImage2D(e3.TEXTURE_2D, 0, this.internalFormat, r2[0], r2[1], 0, \
this.textureFormat, this.textureType, null);\n            }\n            \
const { context: e2, texture: t2 } = this;\n            \
e2.bindFramebuffer(e2.FRAMEBUFFER, this.framebuffer()), \
e2.bindTexture(e2.TEXTURE_2D, t2), i(e2, t2), \
e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, \
t2, 0), e2.clearColor(0, 0, 0, 0), e2.clear(e2.COLOR_BUFFER_BIT | \
e2.DEPTH_BUFFER_BIT);\n          }\n          delete() {\n            \
this._deleted || (this._deleted = true, this.texture._refs && \
(this.texture._refs--, this.texture._refs) || \
this.context.deleteTexture(this.texture));\n          }\n          \
framebuffer() {\n            return this._framebuffer || (this._framebuffer = \
this.kernel.getRawValueFramebuffer(this.size[0], this.size[1])), \
this._framebuffer;\n          }\n        } };\n      }, { \
\"../../../texture\": 113 }], 28: [function(e, t, r) {\n        const { \
utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } = e(\"./float\");\n \
       t.exports = { GLTextureMemoryOptimized2D: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \
\"MemoryOptimizedNumberTexture\";\n          }\n          toArray() {\n       \
     return n.erectMemoryOptimized2DFloat(this.renderValues(), \
this.output[0], this.output[1]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./float\": 25 }], 29: [function(e, t, r) {\n       \
 const { utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } = \
e(\"./float\");\n        t.exports = { GLTextureMemoryOptimized3D: class \
extends i {\n          constructor(e2) {\n            super(e2), this.type = \
\"MemoryOptimizedNumberTexture\";\n          }\n          toArray() {\n       \
     return n.erectMemoryOptimized3DFloat(this.renderValues(), \
this.output[0], this.output[1], this.output[2]);\n          }\n        } };\n \
     }, { \"../../../utils\": 114, \"./float\": 25 }], 30: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { GLTextureFloat: i } \
= e(\"./float\");\n        t.exports = { GLTextureMemoryOptimized: class \
extends i {\n          constructor(e2) {\n            super(e2), this.type = \
\"MemoryOptimizedNumberTexture\";\n          }\n          toArray() {\n       \
     return n.erectMemoryOptimizedFloat(this.renderValues(), \
this.output[0]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./float\": 25 }], 31: [function(e, t, r) {\n        const { utils: n } \
= e(\"../../../utils\"), { GLTextureUnsigned: i } = e(\"./unsigned\");\n      \
  t.exports = { GLTextureUnsigned2D: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \"NumberTexture\";\n    \
      }\n          toArray() {\n            return \
n.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  \
        }\n        } };\n      }, { \"../../../utils\": 114, \"./unsigned\": \
33 }], 32: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { GLTextureUnsigned: i } = e(\"./unsigned\");\n        \
t.exports = { GLTextureUnsigned3D: class extends i {\n          \
constructor(e2) {\n            super(e2), this.type = \"NumberTexture\";\n    \
      }\n          toArray() {\n            return \
n.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], \
this.output[2]);\n          }\n        } };\n      }, { \"../../../utils\": \
114, \"./unsigned\": 33 }], 33: [function(e, t, r) {\n        const { utils: \
n } = e(\"../../../utils\"), { GLTexture: i } = e(\"./index\");\n        \
t.exports = { GLTextureUnsigned: class extends i {\n          get \
textureType() {\n            return this.context.UNSIGNED_BYTE;\n          \
}\n          constructor(e2) {\n            super(e2), this.type = \
\"NumberTexture\";\n          }\n          renderRawOutput() {\n            \
const { context: e2 } = this;\n            e2.bindFramebuffer(e2.FRAMEBUFFER, \
this.framebuffer()), e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, this.texture, 0);\n            const t2 \
= new Uint8Array(this.size[0] * this.size[1] * 4);\n            return \
e2.readPixels(0, 0, this.size[0], this.size[1], e2.RGBA, e2.UNSIGNED_BYTE, \
t2), t2;\n          }\n          renderValues() {\n            return \
this._deleted ? null : new Float32Array(this.renderRawOutput().buffer);\n     \
     }\n          toArray() {\n            return \
n.erectPackedFloat(this.renderValues(), this.output[0]);\n          }\n       \
 } };\n      }, { \"../../../utils\": 114, \"./index\": 27 }], 34: \
[function(e, t, r) {\n        const n = e(\"gl\"), { WebGLKernel: i } = \
e(\"../web-gl/kernel\"), { glKernelString: s } = \
e(\"../gl/kernel-string\");\n        let a = null, o = null, u = null, l = \
null, h = null;\n        t.exports = { HeadlessGLKernel: class extends i {\n  \
        static get isSupported() {\n            return null !== a || \
(this.setupFeatureChecks(), a = null !== u), a;\n          }\n          \
static setupFeatureChecks() {\n            if (o = null, l = null, \
\"function\" == typeof n) try {\n              if (u = n(2, 2, { \
preserveDrawingBuffer: true }), !u || !u.getExtension) return;\n              \
l = { STACKGL_resize_drawingbuffer: \
u.getExtension(\"STACKGL_resize_drawingbuffer\"), STACKGL_destroy_context: \
u.getExtension(\"STACKGL_destroy_context\"), OES_texture_float: \
u.getExtension(\"OES_texture_float\"), OES_texture_float_linear: \
u.getExtension(\"OES_texture_float_linear\"), OES_element_index_uint: \
u.getExtension(\"OES_element_index_uint\"), WEBGL_draw_buffers: \
u.getExtension(\"WEBGL_draw_buffers\"), WEBGL_color_buffer_float: \
u.getExtension(\"WEBGL_color_buffer_float\") }, h = this.getFeatures();\n     \
       } catch (e2) {\n              console.warn(e2);\n            }\n       \
   }\n          static isContextMatch(e2) {\n            try {\n              \
return \"ANGLE\" === e2.getParameter(e2.RENDERER);\n            } catch (e3) \
{\n              return false;\n            }\n          }\n          static \
getIsTextureFloat() {\n            return Boolean(l.OES_texture_float);\n     \
     }\n          static getIsDrawBuffers() {\n            return \
Boolean(l.WEBGL_draw_buffers);\n          }\n          static \
getChannelCount() {\n            return l.WEBGL_draw_buffers ? \
u.getParameter(l.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n          \
}\n          static getMaxTextureSize() {\n            return \
u.getParameter(u.MAX_TEXTURE_SIZE);\n          }\n          static get \
testCanvas() {\n            return o;\n          }\n          static get \
testContext() {\n            return u;\n          }\n          static get \
features() {\n            return h;\n          }\n          initCanvas() {\n  \
          return {};\n          }\n          initContext() {\n            \
return n(2, 2, { preserveDrawingBuffer: true });\n          }\n          \
initExtensions() {\n            this.extensions = { \
STACKGL_resize_drawingbuffer: \
this.context.getExtension(\"STACKGL_resize_drawingbuffer\"), \
STACKGL_destroy_context: \
this.context.getExtension(\"STACKGL_destroy_context\"), OES_texture_float: \
this.context.getExtension(\"OES_texture_float\"), OES_texture_float_linear: \
this.context.getExtension(\"OES_texture_float_linear\"), \
OES_element_index_uint: \
this.context.getExtension(\"OES_element_index_uint\"), WEBGL_draw_buffers: \
this.context.getExtension(\"WEBGL_draw_buffers\") };\n          }\n          \
build() {\n            super.build.apply(this, arguments), \
this.fallbackRequested || \
this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], \
this.maxTexSize[1]);\n          }\n          destroyExtensions() {\n          \
  this.extensions.STACKGL_resize_drawingbuffer = null, \
this.extensions.STACKGL_destroy_context = null, \
this.extensions.OES_texture_float = null, \
this.extensions.OES_texture_float_linear = null, \
this.extensions.OES_element_index_uint = null, \
this.extensions.WEBGL_draw_buffers = null;\n          }\n          static \
destroyContext(e2) {\n            const t2 = \
e2.getExtension(\"STACKGL_destroy_context\");\n            t2 && t2.destroy \
&& t2.destroy();\n          }\n          toString() {\n            return \
s(this.constructor, arguments, this, \"const gl = context || require('gl')(1, \
1);\\n\", \"    if (!context) { \
gl.getExtension('STACKGL_destroy_context').destroy(); }\\n\");\n          }\n \
         setOutput(e2) {\n            return super.setOutput(e2), \
this.graphical && this.extensions.STACKGL_resize_drawingbuffer && \
this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], \
this.maxTexSize[1]), this;\n          }\n        } };\n      }, { \
\"../gl/kernel-string\": 12, \"../web-gl/kernel\": 70, gl: 2 }], 35: \
[function(e, t, r) {\n        t.exports = { KernelValue: class {\n          \
constructor(e2, t2) {\n            const { name: r2, kernel: n, context: i, \
checkContext: s, onRequestContextHandle: a, onUpdateValueMismatch: o, origin: \
u, strictIntegers: l, type: h, tactic: c } = t2;\n            if (!r2) throw \
new Error(\"name not set\");\n            if (!h) throw new Error(\"type not \
set\");\n            if (!u) throw new Error(\"origin not set\");\n           \
 if (\"user\" !== u && \"constants\" !== u) throw new Error(`origin must be \
\"user\" or \"constants\" value is \"${u}\"`);\n            if (!a) throw new \
Error(\"onRequestContextHandle is not set\");\n            this.name = r2, \
this.origin = u, this.tactic = c, this.varName = \"constants\" === u ? \
`constants.${r2}` : r2, this.kernel = n, this.strictIntegers = l, this.type = \
e2.type || h, this.size = e2.size || null, this.index = null, this.context = \
i, this.checkContext = null == s || s, this.contextHandle = null, \
this.onRequestContextHandle = a, this.onUpdateValueMismatch = o, \
this.forceUploadEachRun = null;\n          }\n          get id() {\n          \
  return `${this.origin}_${name}`;\n          }\n          getSource() {\n    \
        throw new Error(`\"getSource\" not defined on \
${this.constructor.name}`);\n          }\n          updateValue(e2) {\n       \
     throw new Error(`\"updateValue\" not defined on \
${this.constructor.name}`);\n          }\n        } };\n      }, {}], 36: \
[function(e, t, r) {\n        const { utils: n } = e(\"../utils\"), { Input: \
i } = e(\"../input\");\n        t.exports = { Kernel: class {\n          \
static get isSupported() {\n            throw new Error(`\"isSupported\" not \
implemented on ${this.name}`);\n          }\n          static \
isContextMatch(e2) {\n            throw new Error(`\"isContextMatch\" not \
implemented on ${this.name}`);\n          }\n          static getFeatures() \
{\n            throw new Error(`\"getFeatures\" not implemented on \
${this.name}`);\n          }\n          static destroyContext(e2) {\n         \
   throw new Error(`\"destroyContext\" called on ${this.name}`);\n          \
}\n          static nativeFunctionArguments() {\n            throw new \
Error(`\"nativeFunctionArguments\" called on ${this.name}`);\n          }\n   \
       static nativeFunctionReturnType() {\n            throw new \
Error(`\"nativeFunctionReturnType\" called on ${this.name}`);\n          }\n  \
        static combineKernels() {\n            throw new \
Error(`\"combineKernels\" called on ${this.name}`);\n          }\n          \
constructor(e2, t2) {\n            if (\"object\" != typeof e2) {\n           \
   if (\"string\" != typeof e2) throw new Error(\"source not a string\");\n   \
           if (!n.isFunctionString(e2)) throw new Error(\"source not a \
function string\");\n            }\n            this.useLegacyEncoder = \
false, this.fallbackRequested = false, this.onRequestFallback = null, \
this.argumentNames = \"string\" == typeof e2 ? \
n.getArgumentNamesFromString(e2) : null, this.argumentTypes = null, \
this.argumentSizes = null, this.argumentBitRatios = null, \
this.kernelArguments = null, this.kernelConstants = null, \
this.forceUploadKernelConstants = null, this.source = e2, this.output = null, \
this.debug = false, this.graphical = false, this.loopMaxIterations = 0, \
this.constants = null, this.constantTypes = null, this.constantBitRatios = \
null, this.dynamicArguments = false, this.dynamicOutput = false, this.canvas \
= null, this.context = null, this.checkContext = null, this.gpu = null, \
this.functions = null, this.nativeFunctions = null, this.injectedNative = \
null, this.subKernels = null, this.validate = true, this.immutable = false, \
this.pipeline = false, this.precision = null, this.tactic = null, \
this.plugins = null, this.returnType = null, this.leadingReturnStatement = \
null, this.followingReturnStatement = null, this.optimizeFloatMemory = null, \
this.strictIntegers = false, this.fixIntegerDivisionAccuracy = null, \
this.built = false, this.signature = null;\n          }\n          \
mergeSettings(e2) {\n            for (let t2 in e2) if (e2.hasOwnProperty(t2) \
&& this.hasOwnProperty(t2)) {\n              switch (t2) {\n                \
case \"output\":\n                  if (!Array.isArray(e2.output)) {\n        \
            this.setOutput(e2.output);\n                    continue;\n       \
           }\n                  break;\n                case \"functions\":\n \
                 this.functions = [];\n                  for (let t3 = 0; t3 \
< e2.functions.length; t3++) this.addFunction(e2.functions[t3]);\n            \
      continue;\n                case \"graphical\":\n                  \
e2[t2] && !e2.hasOwnProperty(\"precision\") && (this.precision = \
\"unsigned\"), this[t2] = e2[t2];\n                  continue;\n              \
  case \"nativeFunctions\":\n                  if (!e2.nativeFunctions) \
continue;\n                  this.nativeFunctions = [];\n                  \
for (let t3 = 0; t3 < e2.nativeFunctions.length; t3++) {\n                    \
const r2 = e2.nativeFunctions[t3], { name: n2, source: i2 } = r2;\n           \
         this.addNativeFunction(n2, i2, r2);\n                  }\n           \
       continue;\n              }\n              this[t2] = e2[t2];\n         \
   }\n            this.canvas || (this.canvas = this.initCanvas()), \
this.context || (this.context = this.initContext()), this.plugins || \
(this.plugins = this.initPlugins(e2));\n          }\n          build() {\n    \
        throw new Error(`\"build\" not defined on \
${this.constructor.name}`);\n          }\n          run() {\n            \
throw new Error(`\"run\" not defined on ${this.constructor.name}`);\n         \
 }\n          initCanvas() {\n            throw new Error(`\"initCanvas\" not \
defined on ${this.constructor.name}`);\n          }\n          initContext() \
{\n            throw new Error(`\"initContext\" not defined on \
${this.constructor.name}`);\n          }\n          initPlugins(e2) {\n       \
     throw new Error(`\"initPlugins\" not defined on \
${this.constructor.name}`);\n          }\n          addFunction(e2, t2 = {}) \
{\n            if (e2.name && e2.source && e2.argumentTypes && \"returnType\" \
in e2) this.functions.push(e2);\n            else if (\"settings\" in e2 && \
\"source\" in e2) this.functions.push(this.functionToIGPUFunction(e2.source, \
e2.settings));\n            else {\n              if (\"string\" != typeof e2 \
&& \"function\" != typeof e2) throw new Error(\"function not properly \
defined\");\n              \
this.functions.push(this.functionToIGPUFunction(e2, t2));\n            }\n    \
        return this;\n          }\n          addNativeFunction(e2, t2, r2 = \
{}) {\n            const { argumentTypes: n2, argumentNames: i2 } = \
r2.argumentTypes ? function(e3) {\n              const t3 = Object.keys(e3), \
r3 = [];\n              for (let n3 = 0; n3 < t3.length; n3++) {\n            \
    const i3 = t3[n3];\n                r3.push(e3[i3]);\n              }\n   \
           return { argumentTypes: r3, argumentNames: t3 };\n            \
}(r2.argumentTypes) : this.constructor.nativeFunctionArguments(t2) || {};\n   \
         return this.nativeFunctions.push({ name: e2, source: t2, settings: \
r2, argumentTypes: n2, argumentNames: i2, returnType: r2.returnType || \
this.constructor.nativeFunctionReturnType(t2) }), this;\n          }\n        \
  setupArguments(e2) {\n            if (this.kernelArguments = [], \
this.argumentTypes) for (let e3 = 0; e3 < this.argumentTypes.length; e3++) \
this.kernelArguments.push({ type: this.argumentTypes[e3] });\n            \
else if (!this.argumentTypes) {\n              this.argumentTypes = [];\n     \
         for (let t2 = 0; t2 < e2.length; t2++) {\n                const r2 = \
n.getVariableType(e2[t2], this.strictIntegers), i2 = \"Integer\" === r2 ? \
\"Number\" : r2;\n                this.argumentTypes.push(i2), \
this.kernelArguments.push({ type: i2 });\n              }\n            }\n    \
        this.argumentSizes = new Array(e2.length), this.argumentBitRatios = \
new Int32Array(e2.length);\n            for (let t2 = 0; t2 < e2.length; \
t2++) {\n              const r2 = e2[t2];\n              \
this.argumentSizes[t2] = r2.constructor === i ? r2.size : null, \
this.argumentBitRatios[t2] = this.getBitRatio(r2);\n            }\n           \
 if (this.argumentNames.length !== e2.length) throw new Error(\"arguments are \
miss-aligned\");\n          }\n          setupConstants() {\n            \
this.kernelConstants = [];\n            let e2 = null === \
this.constantTypes;\n            if (e2 && (this.constantTypes = {}), \
this.constantBitRatios = {}, this.constants) for (let t2 in this.constants) \
{\n              if (e2) {\n                const e3 = \
n.getVariableType(this.constants[t2], this.strictIntegers);\n                \
this.constantTypes[t2] = e3, this.kernelConstants.push({ name: t2, type: e3 \
});\n              } else this.kernelConstants.push({ name: t2, type: \
this.constantTypes[t2] });\n              this.constantBitRatios[t2] = \
this.getBitRatio(this.constants[t2]);\n            }\n          }\n          \
setOptimizeFloatMemory(e2) {\n            return this.optimizeFloatMemory = \
e2, this;\n          }\n          toKernelOutput(e2) {\n            return \
e2.hasOwnProperty(\"x\") ? e2.hasOwnProperty(\"y\") ? \
e2.hasOwnProperty(\"z\") ? [e2.x, e2.y, e2.z] : [e2.x, e2.y] : [e2.x] : e2;\n \
         }\n          setOutput(e2) {\n            return this.output = \
this.toKernelOutput(e2), this;\n          }\n          setDebug(e2) {\n       \
     return this.debug = e2, this;\n          }\n          setGraphical(e2) \
{\n            return this.graphical = e2, this.precision = \"unsigned\", \
this;\n          }\n          setLoopMaxIterations(e2) {\n            return \
this.loopMaxIterations = e2, this;\n          }\n          setConstants(e2) \
{\n            return this.constants = e2, this;\n          }\n          \
setConstantTypes(e2) {\n            return this.constantTypes = e2, this;\n   \
       }\n          setFunctions(e2) {\n            for (let t2 = 0; t2 < \
e2.length; t2++) this.addFunction(e2[t2]);\n            return this;\n        \
  }\n          setNativeFunctions(e2) {\n            for (let t2 = 0; t2 < \
e2.length; t2++) {\n              const r2 = e2[t2], { name: n2, source: i2 } \
= r2;\n              this.addNativeFunction(n2, i2, r2);\n            }\n     \
       return this;\n          }\n          setInjectedNative(e2) {\n         \
   return this.injectedNative = e2, this;\n          }\n          \
setPipeline(e2) {\n            return this.pipeline = e2, this;\n          \
}\n          setPrecision(e2) {\n            return this.precision = e2, \
this;\n          }\n          setDimensions(e2) {\n            return \
n.warnDeprecated(\"method\", \"setDimensions\", \"setOutput\"), this.output = \
e2, this;\n          }\n          setOutputToTexture(e2) {\n            \
return n.warnDeprecated(\"method\", \"setOutputToTexture\", \"setPipeline\"), \
this.pipeline = e2, this;\n          }\n          setImmutable(e2) {\n        \
    return this.immutable = e2, this;\n          }\n          setCanvas(e2) \
{\n            return this.canvas = e2, this;\n          }\n          \
setStrictIntegers(e2) {\n            return this.strictIntegers = e2, this;\n \
         }\n          setDynamicOutput(e2) {\n            return \
this.dynamicOutput = e2, this;\n          }\n          \
setHardcodeConstants(e2) {\n            return n.warnDeprecated(\"method\", \
\"setHardcodeConstants\"), this.setDynamicOutput(e2), \
this.setDynamicArguments(e2), this;\n          }\n          \
setDynamicArguments(e2) {\n            return this.dynamicArguments = e2, \
this;\n          }\n          setUseLegacyEncoder(e2) {\n            return \
this.useLegacyEncoder = e2, this;\n          }\n          setWarnVarUsage(e2) \
{\n            return n.warnDeprecated(\"method\", \"setWarnVarUsage\"), \
this;\n          }\n          getCanvas() {\n            return \
n.warnDeprecated(\"method\", \"getCanvas\"), this.canvas;\n          }\n      \
    getWebGl() {\n            return n.warnDeprecated(\"method\", \
\"getWebGl\"), this.context;\n          }\n          setContext(e2) {\n       \
     return this.context = e2, this;\n          }\n          \
setArgumentTypes(e2) {\n            if (Array.isArray(e2)) this.argumentTypes \
= e2;\n            else {\n              this.argumentTypes = [];\n           \
   for (const t2 in e2) {\n                if (!e2.hasOwnProperty(t2)) \
continue;\n                const r2 = this.argumentNames.indexOf(t2);\n       \
         if (-1 === r2) throw new Error(`unable to find argument ${t2}`);\n   \
             this.argumentTypes[r2] = e2[t2];\n              }\n            \
}\n            return this;\n          }\n          setTactic(e2) {\n         \
   return this.tactic = e2, this;\n          }\n          requestFallback(e2) \
{\n            if (!this.onRequestFallback) throw new \
Error(`\"onRequestFallback\" not defined on ${this.constructor.name}`);\n     \
       return this.fallbackRequested = true, this.onRequestFallback(e2);\n    \
      }\n          validateSettings() {\n            throw new \
Error(`\"validateSettings\" not defined on ${this.constructor.name}`);\n      \
    }\n          addSubKernel(e2) {\n            if (null === this.subKernels \
&& (this.subKernels = []), !e2.source) throw new Error('subKernel missing \
\"source\" property');\n            if (!e2.property && isNaN(e2.property)) \
throw new Error('subKernel missing \"property\" property');\n            if \
(!e2.name) throw new Error('subKernel missing \"name\" property');\n          \
  return this.subKernels.push(e2), this;\n          }\n          destroy(e2) \
{\n            throw new Error(`\"destroy\" called on \
${this.constructor.name}`);\n          }\n          getBitRatio(e2) {\n       \
     if (\"single\" === this.precision) return 4;\n            if \
(Array.isArray(e2[0])) return this.getBitRatio(e2[0]);\n            if \
(e2.constructor === i) return this.getBitRatio(e2.value);\n            switch \
(e2.constructor) {\n              case Uint8ClampedArray:\n              case \
Uint8Array:\n              case Int8Array:\n                return 1;\n       \
       case Uint16Array:\n              case Int16Array:\n                \
return 2;\n              case Float32Array:\n              case Int32Array:\n \
             default:\n                return 4;\n            }\n          \
}\n          getPixels(e2) {\n            throw new Error(`\"getPixels\" \
called on ${this.constructor.name}`);\n          }\n          checkOutput() \
{\n            if (!this.output || !n.isArray(this.output)) throw new \
Error(\"kernel.output not an array\");\n            if (this.output.length < \
1) throw new Error(\"kernel.output is empty, needs at least 1 value\");\n     \
       for (let e2 = 0; e2 < this.output.length; e2++) if \
(isNaN(this.output[e2]) || this.output[e2] < 1) throw new \
Error(`${this.constructor.name}.output[${e2}] incorrectly defined as \
\\`${this.output[e2]}\\`, needs to be numeric, and greater than 0`);\n        \
  }\n          prependString(e2) {\n            throw new \
Error(`\"prependString\" called on ${this.constructor.name}`);\n          }\n \
         hasPrependString(e2) {\n            throw new \
Error(`\"hasPrependString\" called on ${this.constructor.name}`);\n          \
}\n          toJSON() {\n            return { settings: { output: \
this.output, pipeline: this.pipeline, argumentNames: this.argumentNames, \
argumentsTypes: this.argumentTypes, constants: this.constants, pluginNames: \
this.plugins ? this.plugins.map((e2) => e2.name) : null, returnType: \
this.returnType } };\n          }\n          buildSignature(e2) {\n           \
 const t2 = this.constructor;\n            this.signature = \
t2.getSignature(this, t2.getArgumentTypes(this, e2));\n          }\n          \
static getArgumentTypes(e2, t2) {\n            const r2 = new \
Array(t2.length);\n            for (let i2 = 0; i2 < t2.length; i2++) {\n     \
         const s = t2[i2], a = e2.argumentTypes[i2];\n              if \
(s.type) r2[i2] = s.type;\n              else switch (a) {\n                \
case \"Number\":\n                case \"Integer\":\n                case \
\"Float\":\n                case \"ArrayTexture(1)\":\n                  \
r2[i2] = n.getVariableType(s);\n                  break;\n                \
default:\n                  r2[i2] = a;\n              }\n            }\n     \
       return r2;\n          }\n          static getSignature(e2, t2) {\n     \
       throw new Error(`\"getSignature\" not implemented on ${this.name}`);\n \
         }\n          functionToIGPUFunction(e2, t2 = {}) {\n            if \
(\"string\" != typeof e2 && \"function\" != typeof e2) throw new \
Error(\"source not a string or function\");\n            const r2 = \
\"string\" == typeof e2 ? e2 : e2.toString();\n            let i2 = [];\n     \
       return i2 = Array.isArray(t2.argumentTypes) ? t2.argumentTypes : \
\"object\" == typeof t2.argumentTypes ? \
n.getArgumentNamesFromString(r2).map((e3) => t2.argumentTypes[e3]) || [] : \
t2.argumentTypes || [], { name: n.getFunctionNameFromString(r2) || null, \
source: r2, argumentTypes: i2, returnType: t2.returnType || null };\n         \
 }\n          onActivate(e2) {\n          }\n        } };\n      }, { \
\"../input\": 110, \"../utils\": 114 }], 37: [function(e, t, r) {\n        \
const n = \
`__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__S\
AMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = \
__LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 \
vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - \
1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - \
pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + \
sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 \
|| v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) \
{\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * \
log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= \
0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / \
3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + \
pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return \
pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return \
x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * \
int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / \
log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat \
_pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, \
v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - \
1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return \
floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) \
{\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + \
0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - \
y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n \
= 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) \
|| (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b \
/ 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n \
 return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int \
n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == \
1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b \
= b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  \
}\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  \
int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == \
1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b \
= b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  \
}\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = \
1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n \
     result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return \
result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes \
= BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) \
{\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < \
BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  \
}\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; \
i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += \
byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return \
result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return \
int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint \
bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  \
for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      \
break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) \
{\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result \
= 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i \
>= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = \
int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 \
integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * \
step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 \
res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), \
-res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, \
y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float \
x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > \
floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x \
- (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be \
dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON \
SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst \
vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, \
256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, \
0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) \
{\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x \
= texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n \
 float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float \
res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res \
= dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= \
gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int \
index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return \
texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * \
255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int \
index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return \
texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel \
== 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  \
return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  \
float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  \
float mantissa = (exp2(-exponent) * F);\n  // exponent += \
floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * \
SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = \
integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += \
vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = \
floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n \
 return texel;\n}\n\n// \
https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float \
value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n \
 float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, \
-value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  \
mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  \
result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = \
exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = \
floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  \
result.b = result.b + exponent*128.0;\n\n  result.g = \
floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  \
result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons \
end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 \
texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * \
int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = \
int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat \
get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  \
int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 \
st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel \
= texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat \
get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  \
int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  \
vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 \
texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return \
decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * \
z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), \
float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * \
4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat \
getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel \
= integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 \
st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel \
= texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  \
if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if \
(channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D \
tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + \
texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = \
vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return \
texture2D(tex, st / vec2(texSize));\n}\n\nfloat \
getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  \
return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 \
texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = \
getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], \
result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, \
ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + \
(texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / \
2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), \
float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / \
vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if \
(channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, \
0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, \
texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 \
getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  \
int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - \
vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = \
vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, \
readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return \
tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else \
{\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      \
readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / \
vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, \
tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n  \
  }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, \
y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * \
z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = \
vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = \
texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, \
texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, \
float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, \
float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  \
actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, \
float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if \
(divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return \
-mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = \
abs(divisor);\n  }\n  return mod(number, \
divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__\
;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * \
float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  \
__MAIN_RESULT__;\n}`;\n        t.exports = { fragmentShader: n };\n      }, \
{}], 38: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../utils\"), { FunctionNode: i } = e(\"../function-node\");\n        \
const s = { Array: \"sampler2D\", \"Array(2)\": \"vec2\", \"Array(3)\": \
\"vec3\", \"Array(4)\": \"vec4\", \"Matrix(2)\": \"mat2\", \"Matrix(3)\": \
\"mat3\", \"Matrix(4)\": \"mat4\", Array2D: \"sampler2D\", Array3D: \
\"sampler2D\", Boolean: \"bool\", Float: \"float\", Input: \"sampler2D\", \
Integer: \"int\", Number: \"float\", LiteralInteger: \"float\", \
NumberTexture: \"sampler2D\", MemoryOptimizedNumberTexture: \"sampler2D\", \
\"ArrayTexture(1)\": \"sampler2D\", \"ArrayTexture(2)\": \"sampler2D\", \
\"ArrayTexture(3)\": \"sampler2D\", \"ArrayTexture(4)\": \"sampler2D\", \
HTMLVideo: \"sampler2D\", HTMLCanvas: \"sampler2D\", OffscreenCanvas: \
\"sampler2D\", HTMLImage: \"sampler2D\", ImageBitmap: \"sampler2D\", \
ImageData: \"sampler2D\", HTMLImageArray: \"sampler2DArray\" }, a = { \
\"===\": \"==\", \"!==\": \"!=\" };\n        t.exports = { WebGLFunctionNode: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), t2 && t2.hasOwnProperty(\"fixIntegerDivisionAccuracy\") && \
(this.fixIntegerDivisionAccuracy = t2.fixIntegerDivisionAccuracy);\n          \
}\n          astConditionalExpression(e2, t2) {\n            if \
(\"ConditionalExpression\" !== e2.type) throw this.astErrorOutput(\"Not a \
conditional expression\", e2);\n            const r2 = \
this.getType(e2.consequent), n2 = this.getType(e2.alternate);\n            \
return null === r2 && null === n2 ? (t2.push(\"if (\"), \
this.astGeneric(e2.test, t2), t2.push(\") {\"), \
this.astGeneric(e2.consequent, t2), t2.push(\";\"), t2.push(\"} else {\"), \
this.astGeneric(e2.alternate, t2), t2.push(\";\"), t2.push(\"}\"), t2) : \
(t2.push(\"(\"), this.astGeneric(e2.test, t2), t2.push(\"?\"), \
this.astGeneric(e2.consequent, t2), t2.push(\":\"), \
this.astGeneric(e2.alternate, t2), t2.push(\")\"), t2);\n          }\n        \
  astFunction(e2, t2) {\n            if (this.isRootKernel) \
t2.push(\"void\");\n            else {\n              if (!this.returnType) \
{\n                this.findLastReturn() && (this.returnType = \
this.getType(e2.body), \"LiteralInteger\" === this.returnType && \
(this.returnType = \"Number\"));\n              }\n              const { \
returnType: r2 } = this;\n              if (r2) {\n                const e3 = \
s[r2];\n                if (!e3) throw new Error(`unknown type ${r2}`);\n     \
           t2.push(e3);\n              } else t2.push(\"void\");\n            \
}\n            if (t2.push(\" \"), t2.push(this.name), t2.push(\"(\"), \
!this.isRootKernel) for (let r2 = 0; r2 < this.argumentNames.length; ++r2) \
{\n              const i2 = this.argumentNames[r2];\n              r2 > 0 && \
t2.push(\", \");\n              let a2 = \
this.argumentTypes[this.argumentNames.indexOf(i2)];\n              if (!a2) \
throw this.astErrorOutput(`Unknown argument ${i2} type`, e2);\n              \
\"LiteralInteger\" === a2 && (this.argumentTypes[r2] = a2 = \"Number\");\n    \
          const o = s[a2];\n              if (!o) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n              const u = \
n.sanitizeName(i2);\n              \"sampler2D\" === o || \"sampler2DArray\" \
=== o ? t2.push(`${o} user_${u},ivec2 user_${u}Size,ivec3 user_${u}Dim`) : \
t2.push(`${o} user_${u}`);\n            }\n            t2.push(\") {\\n\");\n \
           for (let r2 = 0; r2 < e2.body.body.length; ++r2) \
this.astGeneric(e2.body.body[r2], t2), t2.push(\"\\n\");\n            return \
t2.push(\"}\\n\"), t2;\n          }\n          astReturnStatement(e2, t2) {\n \
           if (!e2.argument) throw this.astErrorOutput(\"Unexpected return \
statement\", e2);\n            this.pushState(\"skip-literal-correction\");\n \
           const r2 = this.getType(e2.argument);\n            \
this.popState(\"skip-literal-correction\");\n            const n2 = [];\n     \
       switch (this.returnType || (this.returnType = \"LiteralInteger\" === \
r2 || \"Integer\" === r2 ? \"Number\" : r2), this.returnType) {\n             \
 case \"LiteralInteger\":\n              case \"Number\":\n              case \
\"Float\":\n                switch (r2) {\n                  case \
\"Integer\":\n                    n2.push(\"float(\"), \
this.astGeneric(e2.argument, n2), n2.push(\")\");\n                    \
break;\n                  case \"LiteralInteger\":\n                    \
this.castLiteralToFloat(e2.argument, n2), \"Integer\" === this.getType(e2) && \
(n2.unshift(\"float(\"), n2.push(\")\"));\n                    break;\n       \
           default:\n                    this.astGeneric(e2.argument, n2);\n  \
              }\n                break;\n              case \"Integer\":\n    \
            switch (r2) {\n                  case \"Float\":\n                \
  case \"Number\":\n                    this.castValueToInteger(e2.argument, \
n2);\n                    break;\n                  case \
\"LiteralInteger\":\n                    \
this.castLiteralToInteger(e2.argument, n2);\n                    break;\n     \
             default:\n                    this.astGeneric(e2.argument, \
n2);\n                }\n                break;\n              case \
\"Array(4)\":\n              case \"Array(3)\":\n              case \
\"Array(2)\":\n              case \"Matrix(2)\":\n              case \
\"Matrix(3)\":\n              case \"Matrix(4)\":\n              case \
\"Input\":\n                this.astGeneric(e2.argument, n2);\n               \
 break;\n              default:\n                throw \
this.astErrorOutput(`unhandled return type ${this.returnType}`, e2);\n        \
    }\n            return this.isRootKernel ? (t2.push(`kernelResult = \
${n2.join(\"\")};`), t2.push(\"return;\")) : this.isSubKernel ? \
(t2.push(`subKernelResult_${this.name} = ${n2.join(\"\")};`), t2.push(`return \
subKernelResult_${this.name};`)) : t2.push(`return ${n2.join(\"\")};`), t2;\n \
         }\n          astLiteral(e2, t2) {\n            if (isNaN(e2.value)) \
throw this.astErrorOutput(\"Non-numeric literal not supported : \" + \
e2.value, e2);\n            const r2 = this.astKey(e2);\n            return \
Number.isInteger(e2.value) ? this.isState(\"casting-to-integer\") || \
this.isState(\"building-integer\") ? (this.literalTypes[r2] = \"Integer\", \
t2.push(`${e2.value}`)) : (this.isState(\"casting-to-float\") || \
this.isState(\"building-float\"), this.literalTypes[r2] = \"Number\", \
t2.push(`${e2.value}.0`)) : this.isState(\"casting-to-integer\") || \
this.isState(\"building-integer\") ? (this.literalTypes[r2] = \"Integer\", \
t2.push(Math.round(e2.value))) : (this.literalTypes[r2] = \"Number\", \
t2.push(`${e2.value}`)), t2;\n          }\n          astBinaryExpression(e2, \
t2) {\n            if (this.checkAndUpconvertOperator(e2, t2)) return t2;\n   \
         if (this.fixIntegerDivisionAccuracy && \"/\" === e2.operator) {\n    \
          switch (t2.push(\"divWithIntCheck(\"), \
this.pushState(\"building-float\"), this.getType(e2.left)) {\n                \
case \"Integer\":\n                  this.castValueToFloat(e2.left, t2);\n    \
              break;\n                case \"LiteralInteger\":\n              \
    this.castLiteralToFloat(e2.left, t2);\n                  break;\n         \
       default:\n                  this.astGeneric(e2.left, t2);\n            \
  }\n              switch (t2.push(\", \"), this.getType(e2.right)) {\n       \
         case \"Integer\":\n                  this.castValueToFloat(e2.right, \
t2);\n                  break;\n                case \"LiteralInteger\":\n    \
              this.castLiteralToFloat(e2.right, t2);\n                  \
break;\n                default:\n                  this.astGeneric(e2.right, \
t2);\n              }\n              return \
this.popState(\"building-float\"), t2.push(\")\"), t2;\n            }\n       \
     t2.push(\"(\");\n            const r2 = this.getType(e2.left) || \
\"Number\", n2 = this.getType(e2.right) || \"Number\";\n            if (!r2 \
|| !n2) throw this.astErrorOutput(\"Unhandled binary expression\", e2);\n     \
       const i2 = r2 + \" & \" + n2;\n            switch (i2) {\n             \
 case \"Integer & Integer\":\n                \
this.pushState(\"building-integer\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-integer\");\n                break;\n              \
case \"Number & Float\":\n              case \"Float & Number\":\n            \
  case \"Float & Float\":\n              case \"Number & Number\":\n          \
      this.pushState(\"building-float\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-float\");\n                break;\n              \
case \"LiteralInteger & LiteralInteger\":\n                \
this.isState(\"casting-to-integer\") || this.isState(\"building-integer\") ? \
(this.pushState(\"building-integer\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-integer\")) : (this.pushState(\"building-float\"), \
this.castLiteralToFloat(e2.left, t2), t2.push(a[e2.operator] || e2.operator), \
this.castLiteralToFloat(e2.right, t2), this.popState(\"building-float\"));\n  \
              break;\n              case \"Integer & Float\":\n              \
case \"Integer & Number\":\n                if ((\">\" === e2.operator || \
\"<\" === e2.operator && \"Literal\" === e2.right.type) && \
!Number.isInteger(e2.right.value)) {\n                  \
this.pushState(\"building-float\"), this.castValueToFloat(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-float\");\n                  break;\n                \
}\n                if (this.pushState(\"building-integer\"), \
this.astGeneric(e2.left, t2), t2.push(a[e2.operator] || e2.operator), \
this.pushState(\"casting-to-integer\"), \"Literal\" === e2.right.type) {\n    \
              const r3 = [];\n                  this.astGeneric(e2.right, \
r3);\n                  if (\"Integer\" !== this.getType(e2.right)) throw \
this.astErrorOutput(\"Unhandled binary expression with literal\", e2);\n      \
            t2.push(r3.join(\"\"));\n                } else \
t2.push(\"int(\"), this.astGeneric(e2.right, t2), t2.push(\")\");\n           \
     this.popState(\"casting-to-integer\"), \
this.popState(\"building-integer\");\n                break;\n              \
case \"Integer & LiteralInteger\":\n                \
this.pushState(\"building-integer\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.castLiteralToInteger(e2.right, \
t2), this.popState(\"building-integer\");\n                break;\n           \
   case \"Number & Integer\":\n              case \"Float & Integer\":\n      \
          this.pushState(\"building-float\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.castValueToFloat(e2.right, t2), \
this.popState(\"building-float\");\n                break;\n              \
case \"Float & LiteralInteger\":\n              case \"Number & \
LiteralInteger\":\n                this.pushState(\"building-float\"), \
this.astGeneric(e2.left, t2), t2.push(a[e2.operator] || e2.operator), \
this.castLiteralToFloat(e2.right, t2), this.popState(\"building-float\");\n   \
             break;\n              case \"LiteralInteger & Float\":\n         \
     case \"LiteralInteger & Number\":\n                \
this.isState(\"casting-to-integer\") ? (this.pushState(\"building-integer\"), \
this.castLiteralToInteger(e2.left, t2), t2.push(a[e2.operator] || \
e2.operator), this.castValueToInteger(e2.right, t2), \
this.popState(\"building-integer\")) : (this.pushState(\"building-float\"), \
this.astGeneric(e2.left, t2), t2.push(a[e2.operator] || e2.operator), \
this.pushState(\"casting-to-float\"), this.astGeneric(e2.right, t2), \
this.popState(\"casting-to-float\"), this.popState(\"building-float\"));\n    \
            break;\n              case \"LiteralInteger & Integer\":\n        \
        this.pushState(\"building-integer\"), \
this.castLiteralToInteger(e2.left, t2), t2.push(a[e2.operator] || \
e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-integer\");\n                break;\n              \
case \"Boolean & Boolean\":\n                \
this.pushState(\"building-boolean\"), this.astGeneric(e2.left, t2), \
t2.push(a[e2.operator] || e2.operator), this.astGeneric(e2.right, t2), \
this.popState(\"building-boolean\");\n                break;\n              \
default:\n                throw this.astErrorOutput(`Unhandled binary \
expression between ${i2}`, e2);\n            }\n            return \
t2.push(\")\"), t2;\n          }\n          checkAndUpconvertOperator(e2, t2) \
{\n            const r2 = this.checkAndUpconvertBitwiseOperators(e2, t2);\n   \
         if (r2) return r2;\n            const n2 = { \"%\": \
this.fixIntegerDivisionAccuracy ? \"integerCorrectionModulo\" : \"modulo\", \
\"**\": \"pow\" }[e2.operator];\n            if (!n2) return null;\n          \
  switch (t2.push(n2), t2.push(\"(\"), this.getType(e2.left)) {\n             \
 case \"Integer\":\n                this.castValueToFloat(e2.left, t2);\n     \
           break;\n              case \"LiteralInteger\":\n                \
this.castLiteralToFloat(e2.left, t2);\n                break;\n              \
default:\n                this.astGeneric(e2.left, t2);\n            }\n      \
      switch (t2.push(\",\"), this.getType(e2.right)) {\n              case \
\"Integer\":\n                this.castValueToFloat(e2.right, t2);\n          \
      break;\n              case \"LiteralInteger\":\n                \
this.castLiteralToFloat(e2.right, t2);\n                break;\n              \
default:\n                this.astGeneric(e2.right, t2);\n            }\n     \
       return t2.push(\")\"), t2;\n          }\n          \
checkAndUpconvertBitwiseOperators(e2, t2) {\n            const r2 = { \"&\": \
\"bitwiseAnd\", \"|\": \"bitwiseOr\", \"^\": \"bitwiseXOR\", \"<<\": \
\"bitwiseZeroFillLeftShift\", \">>\": \"bitwiseSignedRightShift\", \">>>\": \
\"bitwiseZeroFillRightShift\" }[e2.operator];\n            if (!r2) return \
null;\n            t2.push(r2), t2.push(\"(\");\n            switch \
(this.getType(e2.left)) {\n              case \"Number\":\n              case \
\"Float\":\n                this.castValueToInteger(e2.left, t2);\n           \
     break;\n              case \"LiteralInteger\":\n                \
this.castLiteralToInteger(e2.left, t2);\n                break;\n             \
 default:\n                this.astGeneric(e2.left, t2);\n            }\n     \
       t2.push(\",\");\n            switch (this.getType(e2.right)) {\n       \
       case \"Number\":\n              case \"Float\":\n                \
this.castValueToInteger(e2.right, t2);\n                break;\n              \
case \"LiteralInteger\":\n                this.castLiteralToInteger(e2.right, \
t2);\n                break;\n              default:\n                \
this.astGeneric(e2.right, t2);\n            }\n            return \
t2.push(\")\"), t2;\n          }\n          checkAndUpconvertBitwiseUnary(e2, \
t2) {\n            const r2 = { \"~\": \"bitwiseNot\" }[e2.operator];\n       \
     if (!r2) return null;\n            switch (t2.push(r2), t2.push(\"(\"), \
this.getType(e2.argument)) {\n              case \"Number\":\n              \
case \"Float\":\n                this.castValueToInteger(e2.argument, t2);\n  \
              break;\n              case \"LiteralInteger\":\n                \
this.castLiteralToInteger(e2.argument, t2);\n                break;\n         \
     default:\n                this.astGeneric(e2.argument, t2);\n            \
}\n            return t2.push(\")\"), t2;\n          }\n          \
castLiteralToInteger(e2, t2) {\n            return \
this.pushState(\"casting-to-integer\"), this.astGeneric(e2, t2), \
this.popState(\"casting-to-integer\"), t2;\n          }\n          \
castLiteralToFloat(e2, t2) {\n            return \
this.pushState(\"casting-to-float\"), this.astGeneric(e2, t2), \
this.popState(\"casting-to-float\"), t2;\n          }\n          \
castValueToInteger(e2, t2) {\n            return \
this.pushState(\"casting-to-integer\"), t2.push(\"int(\"), \
this.astGeneric(e2, t2), t2.push(\")\"), \
this.popState(\"casting-to-integer\"), t2;\n          }\n          \
castValueToFloat(e2, t2) {\n            return \
this.pushState(\"casting-to-float\"), t2.push(\"float(\"), \
this.astGeneric(e2, t2), t2.push(\")\"), this.popState(\"casting-to-float\"), \
t2;\n          }\n          astIdentifierExpression(e2, t2) {\n            if \
(\"Identifier\" !== e2.type) throw this.astErrorOutput(\"IdentifierExpression \
- not an Identifier\", e2);\n            const r2 = this.getType(e2), i2 = \
n.sanitizeName(e2.name);\n            return \"Infinity\" === e2.name ? \
t2.push(\"3.402823466e+38\") : \"Boolean\" === r2 && \
this.argumentNames.indexOf(i2) > -1 ? t2.push(`bool(user_${i2})`) : \
t2.push(`user_${i2}`), t2;\n          }\n          astForStatement(e2, t2) \
{\n            if (\"ForStatement\" !== e2.type) throw \
this.astErrorOutput(\"Invalid for statement\", e2);\n            const r2 = \
[], n2 = [], i2 = [], s2 = [];\n            let a2 = null;\n            if \
(e2.init) {\n              const { declarations: t3 } = e2.init;\n            \
  t3.length > 1 && (a2 = false), this.astGeneric(e2.init, r2);\n              \
for (let e3 = 0; e3 < t3.length; e3++) t3[e3].init && \"Literal\" !== \
t3[e3].init.type && (a2 = false);\n            } else a2 = false;\n           \
 if (e2.test ? this.astGeneric(e2.test, n2) : a2 = false, e2.update ? \
this.astGeneric(e2.update, i2) : a2 = false, e2.body && \
(this.pushState(\"loop-body\"), this.astGeneric(e2.body, s2), \
this.popState(\"loop-body\")), null === a2 && (a2 = this.isSafe(e2.init) && \
this.isSafe(e2.test)), a2) {\n              const e3 = r2.join(\"\"), a3 = \
\";\" !== e3[e3.length - 1];\n              t2.push(`for (${e3}${a3 ? \";\" : \
\"\"}${n2.join(\"\")};${i2.join(\"\")}){\n`), t2.push(s2.join(\"\")), \
t2.push(\"}\\n\");\n            } else {\n              const e3 = \
this.getInternalVariableName(\"safeI\");\n              r2.length > 0 && \
t2.push(r2.join(\"\"), \"\\n\"), t2.push(`for (int \
${e3}=0;${e3}<LOOP_MAX;${e3}++){\n`), n2.length > 0 && t2.push(`if \
(!${n2.join(\"\")}) break;\n`), t2.push(s2.join(\"\")), \
t2.push(`\n${i2.join(\"\")};`), t2.push(\"}\\n\");\n            }\n           \
 return t2;\n          }\n          astWhileStatement(e2, t2) {\n            \
if (\"WhileStatement\" !== e2.type) throw this.astErrorOutput(\"Invalid while \
statement\", e2);\n            const r2 = \
this.getInternalVariableName(\"safeI\");\n            return t2.push(`for \
(int ${r2}=0;${r2}<LOOP_MAX;${r2}++){\n`), t2.push(\"if (!\"), \
this.astGeneric(e2.test, t2), t2.push(\") break;\\n\"), \
this.astGeneric(e2.body, t2), t2.push(\"}\\n\"), t2;\n          }\n          \
astDoWhileStatement(e2, t2) {\n            if (\"DoWhileStatement\" !== \
e2.type) throw this.astErrorOutput(\"Invalid while statement\", e2);\n        \
    const r2 = this.getInternalVariableName(\"safeI\");\n            return \
t2.push(`for (int ${r2}=0;${r2}<LOOP_MAX;${r2}++){\n`), \
this.astGeneric(e2.body, t2), t2.push(\"if (!\"), this.astGeneric(e2.test, \
t2), t2.push(\") break;\\n\"), t2.push(\"}\\n\"), t2;\n          }\n          \
astAssignmentExpression(e2, t2) {\n            if (\"%=\" === e2.operator) \
this.astGeneric(e2.left, t2), t2.push(\"=\"), t2.push(\"mod(\"), \
this.astGeneric(e2.left, t2), t2.push(\",\"), this.astGeneric(e2.right, t2), \
t2.push(\")\");\n            else {\n              if (\"**=\" !== \
e2.operator) {\n                const r2 = this.getType(e2.left), n2 = \
this.getType(e2.right);\n                return this.astGeneric(e2.left, t2), \
t2.push(e2.operator), \"Integer\" !== r2 && \"Integer\" === n2 ? \
(t2.push(\"float(\"), this.astGeneric(e2.right, t2), t2.push(\")\")) : \
this.astGeneric(e2.right, t2), t2;\n              }\n              \
this.astGeneric(e2.left, t2), t2.push(\"=\"), t2.push(\"pow(\"), \
this.astGeneric(e2.left, t2), t2.push(\",\"), this.astGeneric(e2.right, t2), \
t2.push(\")\");\n            }\n          }\n          astBlockStatement(e2, \
t2) {\n            if (this.isState(\"loop-body\")) {\n              \
this.pushState(\"block-body\");\n              for (let r2 = 0; r2 < \
e2.body.length; r2++) this.astGeneric(e2.body[r2], t2);\n              \
this.popState(\"block-body\");\n            } else {\n              \
t2.push(\"{\\n\");\n              for (let r2 = 0; r2 < e2.body.length; r2++) \
this.astGeneric(e2.body[r2], t2);\n              t2.push(\"}\\n\");\n         \
   }\n            return t2;\n          }\n          \
astVariableDeclaration(e2, t2) {\n            const r2 = e2.declarations;\n   \
         if (!r2 || !r2[0] || !r2[0].init) throw \
this.astErrorOutput(\"Unexpected expression\", e2);\n            const i2 = \
[];\n            let a2 = null;\n            const o = [];\n            let u \
= [];\n            for (let t3 = 0; t3 < r2.length; t3++) {\n              \
const i3 = r2[t3], l = i3.init, h = this.getDeclaration(i3.id), c = \
this.getType(i3.init);\n              let p = c;\n              \
\"LiteralInteger\" === p && (p = \"Integer\" === h.suggestedType ? \
\"Integer\" : \"Number\");\n              const d = s[p];\n              if \
(!d) throw this.astErrorOutput(`Markup type ${p} not handled`, e2);\n         \
     const m = [];\n              if (\"Integer\" === c && \"Integer\" === p) \
{\n                if (h.valueType = \"Number\", 0 === t3 || null === a2) \
m.push(\"float \");\n                else if (p !== a2) throw new \
Error(\"Unhandled declaration\");\n                a2 = p, \
m.push(`user_${n.sanitizeName(i3.id.name)}=`), m.push(\"float(\"), \
this.astGeneric(l, m), m.push(\")\");\n              } else h.valueType = p, \
0 === t3 || null === a2 ? m.push(`${d} `) : p !== a2 && \
(o.push(u.join(\",\")), u = [], m.push(`${d} `)), a2 = p, \
m.push(`user_${n.sanitizeName(i3.id.name)}=`), \"Number\" === c && \
\"Integer\" === p ? l.left && \"Literal\" === l.left.type ? \
this.astGeneric(l, m) : (m.push(\"int(\"), this.astGeneric(l, m), \
m.push(\")\")) : \"LiteralInteger\" === c && \"Integer\" === p ? \
this.castLiteralToInteger(l, m) : this.astGeneric(l, m);\n              \
u.push(m.join(\"\"));\n            }\n            return u.length > 0 && \
o.push(u.join(\",\")), i2.push(o.join(\";\")), t2.push(i2.join(\"\")), \
t2.push(\";\"), t2;\n          }\n          astIfStatement(e2, t2) {\n        \
    return t2.push(\"if (\"), this.astGeneric(e2.test, t2), t2.push(\")\"), \
\"BlockStatement\" === e2.consequent.type ? this.astGeneric(e2.consequent, \
t2) : (t2.push(\" {\\n\"), this.astGeneric(e2.consequent, t2), \
t2.push(\"\\n}\\n\")), e2.alternate && (t2.push(\"else \"), \
\"BlockStatement\" === e2.alternate.type || \"IfStatement\" === \
e2.alternate.type ? this.astGeneric(e2.alternate, t2) : (t2.push(\" {\\n\"), \
this.astGeneric(e2.alternate, t2), t2.push(\"\\n}\\n\"))), t2;\n          }\n \
         astSwitchStatement(e2, t2) {\n            if (\"SwitchStatement\" \
!== e2.type) throw this.astErrorOutput(\"Invalid switch statement\", e2);\n   \
         const { discriminant: r2, cases: n2 } = e2, i2 = this.getType(r2), \
s2 = `switchDiscriminant${this.astKey(e2, \"_\")}`;\n            switch (i2) \
{\n              case \"Float\":\n              case \"Number\":\n            \
    t2.push(`float ${s2} = `), this.astGeneric(r2, t2), t2.push(\";\\n\");\n  \
              break;\n              case \"Integer\":\n                \
t2.push(`int ${s2} = `), this.astGeneric(r2, t2), t2.push(\";\\n\");\n        \
    }\n            if (1 === n2.length && !n2[0].test) return \
this.astGeneric(n2[0].consequent, t2), t2;\n            let a2 = false, o = \
[], u = false, l = false;\n            for (let e3 = 0; e3 < n2.length; e3++) \
{\n              if (n2[e3].test) {\n                if (0 !== e3 && l ? a2 ? \
(t2.push(`${s2} == `), a2 = false) : t2.push(` else if (${s2} == `) : (l = \
true, t2.push(`if (${s2} == `)), \"Integer\" === i2) {\n                  \
switch (this.getType(n2[e3].test)) {\n                    case \"Number\":\n  \
                  case \"Float\":\n                      \
this.castValueToInteger(n2[e3].test, t2);\n                      break;\n     \
               case \"LiteralInteger\":\n                      \
this.castLiteralToInteger(n2[e3].test, t2);\n                  }\n            \
    } else {\n                  if (\"Float\" !== i2) throw new \
Error(\"unhanlded\");\n                  switch (this.getType(n2[e3].test)) \
{\n                    case \"LiteralInteger\":\n                      \
this.castLiteralToFloat(n2[e3].test, t2);\n                      break;\n     \
               case \"Integer\":\n                      \
this.castValueToFloat(n2[e3].test, t2);\n                  }\n                \
}\n                if (!n2[e3].consequent || 0 === n2[e3].consequent.length) \
{\n                  a2 = true, t2.push(\" || \");\n                  \
continue;\n                }\n                t2.push(\") {\\n\");\n          \
    } else {\n                if (n2.length > e3 + 1) {\n                  u \
= true, this.astGeneric(n2[e3].consequent, o);\n                  continue;\n \
               }\n                t2.push(\" else {\\n\");\n              }\n \
             this.astGeneric(n2[e3].consequent, t2), t2.push(\"\\n}\");\n     \
       }\n            return u && (t2.push(\" else {\"), \
t2.push(o.join(\"\")), t2.push(\"}\")), t2;\n          }\n          \
astThisExpression(e2, t2) {\n            return t2.push(\"this\"), t2;\n      \
    }\n          astMemberExpression(e2, t2) {\n            const { property: \
r2, name: i2, signature: s2, origin: a2, type: o, xProperty: u, yProperty: l, \
zProperty: h } = this.getMemberExpressionDetails(e2);\n            switch \
(s2) {\n              case \"value.thread.value\":\n              case \
\"this.thread.value\":\n                if (\"x\" !== i2 && \"y\" !== i2 && \
\"z\" !== i2) throw this.astErrorOutput(\"Unexpected expression, expected \
`this.thread.x`, `this.thread.y`, or `this.thread.z`\", e2);\n                \
return t2.push(`threadId.${i2}`), t2;\n              case \
\"this.output.value\":\n                if (this.dynamicOutput) switch (i2) \
{\n                  case \"x\":\n                    \
this.isState(\"casting-to-float\") ? t2.push(\"float(uOutputDim.x)\") : \
t2.push(\"uOutputDim.x\");\n                    break;\n                  \
case \"y\":\n                    this.isState(\"casting-to-float\") ? \
t2.push(\"float(uOutputDim.y)\") : t2.push(\"uOutputDim.y\");\n               \
     break;\n                  case \"z\":\n                    \
this.isState(\"casting-to-float\") ? t2.push(\"float(uOutputDim.z)\") : \
t2.push(\"uOutputDim.z\");\n                    break;\n                  \
default:\n                    throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n                }\n                else switch (i2) {\n   \
               case \"x\":\n                    \
this.isState(\"casting-to-integer\") ? t2.push(this.output[0]) : \
t2.push(this.output[0], \".0\");\n                    break;\n                \
  case \"y\":\n                    this.isState(\"casting-to-integer\") ? \
t2.push(this.output[1]) : t2.push(this.output[1], \".0\");\n                  \
  break;\n                  case \"z\":\n                    \
this.isState(\"casting-to-integer\") ? t2.push(this.output[2]) : \
t2.push(this.output[2], \".0\");\n                    break;\n                \
  default:\n                    throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n                }\n                return t2;\n           \
   case \"value\":\n                throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n              case \"value[]\":\n              case \
\"value[][]\":\n              case \"value[][][]\":\n              case \
\"value[][][][]\":\n              case \"value.value\":\n                if \
(\"Math\" === a2) return t2.push(Math[i2]), t2;\n                const s3 = \
n.sanitizeName(i2);\n                switch (r2) {\n                  case \
\"r\":\n                    return t2.push(`user_${s3}.r`), t2;\n             \
     case \"g\":\n                    return t2.push(`user_${s3}.g`), t2;\n   \
               case \"b\":\n                    return \
t2.push(`user_${s3}.b`), t2;\n                  case \"a\":\n                 \
   return t2.push(`user_${s3}.a`), t2;\n                }\n                \
break;\n              case \"this.constants.value\":\n                if \
(void 0 === u) switch (o) {\n                  case \"Array(2)\":\n           \
       case \"Array(3)\":\n                  case \"Array(4)\":\n             \
       return t2.push(`constants_${n.sanitizeName(i2)}`), t2;\n               \
 }\n              case \"this.constants.value[]\":\n              case \
\"this.constants.value[][]\":\n              case \
\"this.constants.value[][][]\":\n              case \
\"this.constants.value[][][][]\":\n                break;\n              case \
\"fn()[]\":\n                return this.astCallExpression(e2.object, t2), \
t2.push(\"[\"), t2.push(this.memberExpressionPropertyMarkup(r2)), \
t2.push(\"]\"), t2;\n              case \"fn()[][]\":\n                return \
this.astCallExpression(e2.object.object, t2), t2.push(\"[\"), \
t2.push(this.memberExpressionPropertyMarkup(e2.object.property)), \
t2.push(\"]\"), t2.push(\"[\"), \
t2.push(this.memberExpressionPropertyMarkup(e2.property)), t2.push(\"]\"), \
t2;\n              case \"[][]\":\n                return \
this.astArrayExpression(e2.object, t2), t2.push(\"[\"), \
t2.push(this.memberExpressionPropertyMarkup(r2)), t2.push(\"]\"), t2;\n       \
       default:\n                throw this.astErrorOutput(\"Unexpected \
expression\", e2);\n            }\n            if (false === e2.computed) \
switch (o) {\n              case \"Number\":\n              case \
\"Integer\":\n              case \"Float\":\n              case \
\"Boolean\":\n                return t2.push(`${a2}_${n.sanitizeName(i2)}`), \
t2;\n            }\n            const c = `${a2}_${n.sanitizeName(i2)}`;\n    \
        switch (o) {\n              case \"Array(2)\":\n              case \
\"Array(3)\":\n              case \"Array(4)\":\n                \
this.astGeneric(e2.object, t2), t2.push(\"[\"), \
t2.push(this.memberExpressionPropertyMarkup(u)), t2.push(\"]\");\n            \
    break;\n              case \"HTMLImageArray\":\n                \
t2.push(`getImage3D(${c}, ${c}Size, ${c}Dim, `), this.memberExpressionXYZ(u, \
l, h, t2), t2.push(\")\");\n                break;\n              case \
\"ArrayTexture(1)\":\n                t2.push(`getFloatFromSampler2D(${c}, \
${c}Size, ${c}Dim, `), this.memberExpressionXYZ(u, l, h, t2), \
t2.push(\")\");\n                break;\n              case \"Array1D(2)\":\n \
             case \"Array2D(2)\":\n              case \"Array3D(2)\":\n       \
         t2.push(`getMemoryOptimizedVec2(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"ArrayTexture(2)\":\n                \
t2.push(`getVec2FromSampler2D(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"Array1D(3)\":\n              case \
\"Array2D(3)\":\n              case \"Array3D(3)\":\n                \
t2.push(`getMemoryOptimizedVec3(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"ArrayTexture(3)\":\n                \
t2.push(`getVec3FromSampler2D(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"Array1D(4)\":\n              case \
\"Array2D(4)\":\n              case \"Array3D(4)\":\n                \
t2.push(`getMemoryOptimizedVec4(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"ArrayTexture(4)\":\n              case \
\"HTMLCanvas\":\n              case \"OffscreenCanvas\":\n              case \
\"HTMLImage\":\n              case \"ImageBitmap\":\n              case \
\"ImageData\":\n              case \"HTMLVideo\":\n                \
t2.push(`getVec4FromSampler2D(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"NumberTexture\":\n              case \
\"Array\":\n              case \"Array2D\":\n              case \
\"Array3D\":\n              case \"Array4D\":\n              case \
\"Input\":\n              case \"Number\":\n              case \"Float\":\n   \
           case \"Integer\":\n                if (\"single\" === \
this.precision) t2.push(`getMemoryOptimized32(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                else \
{\n                  const e3 = \"user\" === a2 ? \
this.lookupFunctionArgumentBitRatio(this.name, i2) : \
this.constantBitRatios[i2];\n                  switch (e3) {\n                \
    case 1:\n                      t2.push(`get8(${c}, ${c}Size, ${c}Dim, \
`);\n                      break;\n                    case 2:\n              \
        t2.push(`get16(${c}, ${c}Size, ${c}Dim, `);\n                      \
break;\n                    case 4:\n                    case 0:\n            \
          t2.push(`get32(${c}, ${c}Size, ${c}Dim, `);\n                      \
break;\n                    default:\n                      throw new \
Error(`unhandled bit ratio of ${e3}`);\n                  }\n                 \
 this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                }\n  \
              break;\n              case \"MemoryOptimizedNumberTexture\":\n  \
              t2.push(`getMemoryOptimized32(${c}, ${c}Size, ${c}Dim, `), \
this.memberExpressionXYZ(u, l, h, t2), t2.push(\")\");\n                \
break;\n              case \"Matrix(2)\":\n              case \
\"Matrix(3)\":\n              case \"Matrix(4)\":\n                \
t2.push(`${c}[${this.memberExpressionPropertyMarkup(l)}]`), l && \
t2.push(`[${this.memberExpressionPropertyMarkup(u)}]`);\n                \
break;\n              default:\n                throw new Error(`unhandled \
member expression \"${o}\"`);\n            }\n            return t2;\n        \
  }\n          astCallExpression(e2, t2) {\n            if (!e2.callee) throw \
this.astErrorOutput(\"Unknown CallExpression\", e2);\n            let r2 = \
null;\n            const i2 = this.isAstMathFunction(e2);\n            if (r2 \
= i2 || e2.callee.object && \"ThisExpression\" === e2.callee.object.type ? \
e2.callee.property.name : \"SequenceExpression\" !== e2.callee.type || \
\"Literal\" !== e2.callee.expressions[0].type || \
isNaN(e2.callee.expressions[0].raw) ? e2.callee.name : \
e2.callee.expressions[1].property.name, !r2) throw \
this.astErrorOutput(\"Unhandled function, couldn't find name\", e2);\n        \
    switch (r2) {\n              case \"pow\":\n                r2 = \
\"_pow\";\n                break;\n              case \"round\":\n            \
    r2 = \"_round\";\n            }\n            if \
(this.calledFunctions.indexOf(r2) < 0 && this.calledFunctions.push(r2), \
\"random\" === r2 && this.plugins && this.plugins.length > 0) for (let e3 = \
0; e3 < this.plugins.length; e3++) {\n              const r3 = \
this.plugins[e3];\n              if (\"Math.random()\" === r3.functionMatch \
&& r3.functionReplace) return t2.push(r3.functionReplace), t2;\n            \
}\n            if (this.onFunctionCall && this.onFunctionCall(this.name, r2, \
e2.arguments), t2.push(r2), t2.push(\"(\"), i2) for (let r3 = 0; r3 < \
e2.arguments.length; ++r3) {\n              const n2 = e2.arguments[r3], i3 = \
this.getType(n2);\n              if (r3 > 0 && t2.push(\", \"), \"Integer\" \
=== i3) this.castValueToFloat(n2, t2);\n              else \
this.astGeneric(n2, t2);\n            }\n            else {\n              \
const i3 = this.lookupFunctionArgumentTypes(r2) || [];\n              for \
(let s2 = 0; s2 < e2.arguments.length; ++s2) {\n                const a2 = \
e2.arguments[s2];\n                let o = i3[s2];\n                s2 > 0 && \
t2.push(\", \");\n                const u = this.getType(a2);\n               \
 switch (o || (this.triggerImplyArgumentType(r2, s2, u, this), o = u), u) {\n \
                 case \"Boolean\":\n                    this.astGeneric(a2, \
t2);\n                    continue;\n                  case \"Number\":\n     \
             case \"Float\":\n                    if (\"Integer\" === o) {\n  \
                    t2.push(\"int(\"), this.astGeneric(a2, t2), \
t2.push(\")\");\n                      continue;\n                    }\n     \
               if (\"Number\" === o || \"Float\" === o) {\n                   \
   this.astGeneric(a2, t2);\n                      continue;\n                \
    }\n                    if (\"LiteralInteger\" === o) {\n                  \
    this.castLiteralToFloat(a2, t2);\n                      continue;\n       \
             }\n                    break;\n                  case \
\"Integer\":\n                    if (\"Number\" === o || \"Float\" === o) \
{\n                      t2.push(\"float(\"), this.astGeneric(a2, t2), \
t2.push(\")\");\n                      continue;\n                    }\n     \
               if (\"Integer\" === o) {\n                      \
this.astGeneric(a2, t2);\n                      continue;\n                   \
 }\n                    break;\n                  case \"LiteralInteger\":\n  \
                  if (\"Integer\" === o) {\n                      \
this.castLiteralToInteger(a2, t2);\n                      continue;\n         \
           }\n                    if (\"Number\" === o || \"Float\" === o) \
{\n                      this.castLiteralToFloat(a2, t2);\n                   \
   continue;\n                    }\n                    if \
(\"LiteralInteger\" === o) {\n                      this.astGeneric(a2, \
t2);\n                      continue;\n                    }\n                \
    break;\n                  case \"Array(2)\":\n                  case \
\"Array(3)\":\n                  case \"Array(4)\":\n                    if \
(o === u) {\n                      if (\"Identifier\" === a2.type) \
t2.push(`user_${n.sanitizeName(a2.name)}`);\n                      else {\n   \
                     if (\"ArrayExpression\" !== a2.type && \
\"MemberExpression\" !== a2.type && \"CallExpression\" !== a2.type) throw \
this.astErrorOutput(`Unhandled argument type ${a2.type}`, e2);\n              \
          this.astGeneric(a2, t2);\n                      }\n                 \
     continue;\n                    }\n                    break;\n           \
       case \"HTMLCanvas\":\n                  case \"OffscreenCanvas\":\n    \
              case \"HTMLImage\":\n                  case \"ImageBitmap\":\n  \
                case \"ImageData\":\n                  case \
\"HTMLImageArray\":\n                  case \"HTMLVideo\":\n                  \
case \"ArrayTexture(1)\":\n                  case \"ArrayTexture(2)\":\n      \
            case \"ArrayTexture(3)\":\n                  case \
\"ArrayTexture(4)\":\n                  case \"Array\":\n                  \
case \"Input\":\n                    if (o === u) {\n                      if \
(\"Identifier\" !== a2.type) throw this.astErrorOutput(`Unhandled argument \
type ${a2.type}`, e2);\n                      \
this.triggerImplyArgumentBitRatio(this.name, a2.name, r2, s2);\n              \
        const i4 = n.sanitizeName(a2.name);\n                      \
t2.push(`user_${i4},user_${i4}Size,user_${i4}Dim`);\n                      \
continue;\n                    }\n                }\n                throw \
this.astErrorOutput(`Unhandled argument combination of ${u} and ${o} for \
argument named \"${a2.name}\"`, e2);\n              }\n            }\n        \
    return t2.push(\")\"), t2;\n          }\n          astArrayExpression(e2, \
t2) {\n            const r2 = this.getType(e2), n2 = e2.elements.length;\n    \
        switch (r2) {\n              case \"Matrix(2)\":\n              case \
\"Matrix(3)\":\n              case \"Matrix(4)\":\n                \
t2.push(`mat${n2}(`);\n                break;\n              default:\n       \
         t2.push(`vec${n2}(`);\n            }\n            for (let r3 = 0; \
r3 < n2; ++r3) {\n              r3 > 0 && t2.push(\", \");\n              \
const n3 = e2.elements[r3];\n              this.astGeneric(n3, t2);\n         \
   }\n            return t2.push(\")\"), t2;\n          }\n          \
memberExpressionXYZ(e2, t2, r2, n2) {\n            return r2 ? \
n2.push(this.memberExpressionPropertyMarkup(r2), \", \") : n2.push(\"0, \"), \
t2 ? n2.push(this.memberExpressionPropertyMarkup(t2), \", \") : n2.push(\"0, \
\"), n2.push(this.memberExpressionPropertyMarkup(e2)), n2;\n          }\n     \
     memberExpressionPropertyMarkup(e2) {\n            if (!e2) throw new \
Error(\"Property not set\");\n            const t2 = [];\n            switch \
(this.getType(e2)) {\n              case \"Number\":\n              case \
\"Float\":\n                this.castValueToInteger(e2, t2);\n                \
break;\n              case \"LiteralInteger\":\n                \
this.castLiteralToInteger(e2, t2);\n                break;\n              \
default:\n                this.astGeneric(e2, t2);\n            }\n           \
 return t2.join(\"\");\n          }\n        } };\n      }, { \
\"../../utils\": 114, \"../function-node\": 10 }], 39: [function(e, t, r) {\n \
       const { WebGLKernelValueBoolean: n } = e(\"./kernel-value/boolean\"), \
{ WebGLKernelValueFloat: i } = e(\"./kernel-value/float\"), { \
WebGLKernelValueInteger: s } = e(\"./kernel-value/integer\"), { \
WebGLKernelValueHTMLImage: a } = e(\"./kernel-value/html-image\"), { \
WebGLKernelValueDynamicHTMLImage: o } = \
e(\"./kernel-value/dynamic-html-image\"), { WebGLKernelValueHTMLVideo: u } = \
e(\"./kernel-value/html-video\"), { WebGLKernelValueDynamicHTMLVideo: l } = \
e(\"./kernel-value/dynamic-html-video\"), { WebGLKernelValueSingleInput: h } \
= e(\"./kernel-value/single-input\"), { WebGLKernelValueDynamicSingleInput: c \
} = e(\"./kernel-value/dynamic-single-input\"), { \
WebGLKernelValueUnsignedInput: p } = e(\"./kernel-value/unsigned-input\"), { \
WebGLKernelValueDynamicUnsignedInput: d } = \
e(\"./kernel-value/dynamic-unsigned-input\"), { \
WebGLKernelValueMemoryOptimizedNumberTexture: m } = \
e(\"./kernel-value/memory-optimized-number-texture\"), { \
WebGLKernelValueDynamicMemoryOptimizedNumberTexture: f } = \
e(\"./kernel-value/dynamic-memory-optimized-number-texture\"), { \
WebGLKernelValueNumberTexture: g } = e(\"./kernel-value/number-texture\"), { \
WebGLKernelValueDynamicNumberTexture: x } = \
e(\"./kernel-value/dynamic-number-texture\"), { WebGLKernelValueSingleArray: \
y } = e(\"./kernel-value/single-array\"), { \
WebGLKernelValueDynamicSingleArray: b } = \
e(\"./kernel-value/dynamic-single-array\"), { WebGLKernelValueSingleArray1DI: \
T } = e(\"./kernel-value/single-array1d-i\"), { \
WebGLKernelValueDynamicSingleArray1DI: v } = \
e(\"./kernel-value/dynamic-single-array1d-i\"), { \
WebGLKernelValueSingleArray2DI: S } = e(\"./kernel-value/single-array2d-i\"), \
{ WebGLKernelValueDynamicSingleArray2DI: A } = \
e(\"./kernel-value/dynamic-single-array2d-i\"), { \
WebGLKernelValueSingleArray3DI: _ } = e(\"./kernel-value/single-array3d-i\"), \
{ WebGLKernelValueDynamicSingleArray3DI: E } = \
e(\"./kernel-value/dynamic-single-array3d-i\"), { WebGLKernelValueArray2: w } \
= e(\"./kernel-value/array2\"), { WebGLKernelValueArray3: k } = \
e(\"./kernel-value/array3\"), { WebGLKernelValueArray4: I } = \
e(\"./kernel-value/array4\"), { WebGLKernelValueUnsignedArray: D } = \
e(\"./kernel-value/unsigned-array\"), { WebGLKernelValueDynamicUnsignedArray: \
C } = e(\"./kernel-value/dynamic-unsigned-array\"), $ = { unsigned: { \
dynamic: { Boolean: n, Integer: s, Float: i, Array: C, \"Array(2)\": w, \
\"Array(3)\": k, \"Array(4)\": I, \"Array1D(2)\": false, \"Array1D(3)\": \
false, \"Array1D(4)\": false, \"Array2D(2)\": false, \"Array2D(3)\": false, \
\"Array2D(4)\": false, \"Array3D(2)\": false, \"Array3D(3)\": false, \
\"Array3D(4)\": false, Input: d, NumberTexture: x, \"ArrayTexture(1)\": x, \
\"ArrayTexture(2)\": x, \"ArrayTexture(3)\": x, \"ArrayTexture(4)\": x, \
MemoryOptimizedNumberTexture: f, HTMLCanvas: o, OffscreenCanvas: o, \
HTMLImage: o, ImageBitmap: o, ImageData: o, HTMLImageArray: false, HTMLVideo: \
l }, static: { Boolean: n, Float: i, Integer: s, Array: D, \"Array(2)\": w, \
\"Array(3)\": k, \"Array(4)\": I, \"Array1D(2)\": false, \"Array1D(3)\": \
false, \"Array1D(4)\": false, \"Array2D(2)\": false, \"Array2D(3)\": false, \
\"Array2D(4)\": false, \"Array3D(2)\": false, \"Array3D(3)\": false, \
\"Array3D(4)\": false, Input: p, NumberTexture: g, \"ArrayTexture(1)\": g, \
\"ArrayTexture(2)\": g, \"ArrayTexture(3)\": g, \"ArrayTexture(4)\": g, \
MemoryOptimizedNumberTexture: m, HTMLCanvas: a, OffscreenCanvas: a, \
HTMLImage: a, ImageBitmap: a, ImageData: a, HTMLImageArray: false, HTMLVideo: \
u } }, single: { dynamic: { Boolean: n, Integer: s, Float: i, Array: b, \
\"Array(2)\": w, \"Array(3)\": k, \"Array(4)\": I, \"Array1D(2)\": v, \
\"Array1D(3)\": v, \"Array1D(4)\": v, \"Array2D(2)\": A, \"Array2D(3)\": A, \
\"Array2D(4)\": A, \"Array3D(2)\": E, \"Array3D(3)\": E, \"Array3D(4)\": E, \
Input: c, NumberTexture: x, \"ArrayTexture(1)\": x, \"ArrayTexture(2)\": x, \
\"ArrayTexture(3)\": x, \"ArrayTexture(4)\": x, MemoryOptimizedNumberTexture: \
f, HTMLCanvas: o, OffscreenCanvas: o, HTMLImage: o, ImageBitmap: o, \
ImageData: o, HTMLImageArray: false, HTMLVideo: l }, static: { Boolean: n, \
Float: i, Integer: s, Array: y, \"Array(2)\": w, \"Array(3)\": k, \
\"Array(4)\": I, \"Array1D(2)\": T, \"Array1D(3)\": T, \"Array1D(4)\": T, \
\"Array2D(2)\": S, \"Array2D(3)\": S, \"Array2D(4)\": S, \"Array3D(2)\": _, \
\"Array3D(3)\": _, \"Array3D(4)\": _, Input: h, NumberTexture: g, \
\"ArrayTexture(1)\": g, \"ArrayTexture(2)\": g, \"ArrayTexture(3)\": g, \
\"ArrayTexture(4)\": g, MemoryOptimizedNumberTexture: m, HTMLCanvas: a, \
OffscreenCanvas: a, HTMLImage: a, ImageBitmap: a, ImageData: a, \
HTMLImageArray: false, HTMLVideo: u } } };\n        t.exports = { \
lookupKernelValueType: function(e2, t2, r2, n2) {\n          if (!e2) throw \
new Error(\"type missing\");\n          if (!t2) throw new Error(\"dynamic \
missing\");\n          if (!r2) throw new Error(\"precision missing\");\n     \
     n2.type && (e2 = n2.type);\n          const i2 = $[r2][t2];\n          \
if (false === i2[e2]) return null;\n          if (void 0 === i2[e2]) throw \
new Error(`Could not find a KernelValue for ${e2}`);\n          return \
i2[e2];\n        }, kernelValueMaps: $ };\n      }, { \
\"./kernel-value/array2\": 41, \"./kernel-value/array3\": 42, \
\"./kernel-value/array4\": 43, \"./kernel-value/boolean\": 44, \
\"./kernel-value/dynamic-html-image\": 45, \
\"./kernel-value/dynamic-html-video\": 46, \
\"./kernel-value/dynamic-memory-optimized-number-texture\": 47, \
\"./kernel-value/dynamic-number-texture\": 48, \
\"./kernel-value/dynamic-single-array\": 49, \
\"./kernel-value/dynamic-single-array1d-i\": 50, \
\"./kernel-value/dynamic-single-array2d-i\": 51, \
\"./kernel-value/dynamic-single-array3d-i\": 52, \
\"./kernel-value/dynamic-single-input\": 53, \
\"./kernel-value/dynamic-unsigned-array\": 54, \
\"./kernel-value/dynamic-unsigned-input\": 55, \"./kernel-value/float\": 56, \
\"./kernel-value/html-image\": 57, \"./kernel-value/html-video\": 58, \
\"./kernel-value/integer\": 60, \
\"./kernel-value/memory-optimized-number-texture\": 61, \
\"./kernel-value/number-texture\": 62, \"./kernel-value/single-array\": 63, \
\"./kernel-value/single-array1d-i\": 64, \"./kernel-value/single-array2d-i\": \
65, \"./kernel-value/single-array3d-i\": 66, \"./kernel-value/single-input\": \
67, \"./kernel-value/unsigned-array\": 68, \"./kernel-value/unsigned-input\": \
69 }], 40: [function(e, t, r) {\n        const { WebGLKernelValue: n } = \
e(\"./index\"), { Input: i } = e(\"../../../input\");\n        t.exports = { \
WebGLKernelArray: class extends n {\n          checkSize(e2, t2) {\n          \
  if (!this.kernel.validate) return;\n            const { maxTextureSize: r2 \
} = this.kernel.constructor.features;\n            if (e2 > r2 || t2 > r2) \
throw e2 > t2 ? new Error(`Argument texture width of ${e2} larger than \
maximum size of ${r2} for your GPU`) : e2 < t2 ? new Error(`Argument texture \
height of ${t2} larger than maximum size of ${r2} for your GPU`) : new \
Error(`Argument texture height and width of ${t2} larger than maximum size of \
${r2} for your GPU`);\n          }\n          setup() {\n            \
this.requestTexture(), this.setupTexture(), this.defineTexture();\n          \
}\n          requestTexture() {\n            this.texture = \
this.onRequestTexture();\n          }\n          defineTexture() {\n          \
  const { context: e2 } = this;\n            \
e2.activeTexture(this.contextHandle), e2.bindTexture(e2.TEXTURE_2D, \
this.texture), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, \
e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, \
e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, \
e2.NEAREST), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, \
e2.NEAREST);\n          }\n          setupTexture() {\n            \
this.contextHandle = this.onRequestContextHandle(), this.index = \
this.onRequestIndex(), this.dimensionsId = this.id + \"Dim\", this.sizeId = \
this.id + \"Size\";\n          }\n          getBitRatio(e2) {\n            if \
(Array.isArray(e2[0])) return this.getBitRatio(e2[0]);\n            if \
(e2.constructor === i) return this.getBitRatio(e2.value);\n            switch \
(e2.constructor) {\n              case Uint8ClampedArray:\n              case \
Uint8Array:\n              case Int8Array:\n                return 1;\n       \
       case Uint16Array:\n              case Int16Array:\n                \
return 2;\n              case Float32Array:\n              case Int32Array:\n \
             default:\n                return 4;\n            }\n          \
}\n          destroy() {\n            this.prevArg && this.prevArg.delete(), \
this.context.deleteTexture(this.texture);\n          }\n        } };\n      \
}, { \"../../../input\": 110, \"./index\": 59 }], 41: [function(e, t, r) {\n  \
      const { WebGLKernelValue: n } = e(\"./index\");\n        t.exports = { \
WebGLKernelValueArray2: class extends n {\n          constructor(e2, t2) {\n  \
          super(e2, t2), this.uploadValue = e2;\n          }\n          \
getSource(e2) {\n            return \"constants\" === this.origin ? `const \
vec2 ${this.id} = vec2(${e2[0]},${e2[1]});\n` : `uniform vec2 \
${this.id};\n`;\n          }\n          getStringValueHandler() {\n           \
 return \"constants\" === this.origin ? \"\" : `const \
uploadValue_${this.name} = ${this.varName};\n`;\n          }\n          \
updateValue(e2) {\n            \"constants\" !== this.origin && \
this.kernel.setUniform2fv(this.id, this.uploadValue = e2);\n          }\n     \
   } };\n      }, { \"./index\": 59 }], 42: [function(e, t, r) {\n        \
const { WebGLKernelValue: n } = e(\"./index\");\n        t.exports = { \
WebGLKernelValueArray3: class extends n {\n          constructor(e2, t2) {\n  \
          super(e2, t2), this.uploadValue = e2;\n          }\n          \
getSource(e2) {\n            return \"constants\" === this.origin ? `const \
vec3 ${this.id} = vec3(${e2[0]},${e2[1]},${e2[2]});\n` : `uniform vec3 \
${this.id};\n`;\n          }\n          getStringValueHandler() {\n           \
 return \"constants\" === this.origin ? \"\" : `const \
uploadValue_${this.name} = ${this.varName};\n`;\n          }\n          \
updateValue(e2) {\n            \"constants\" !== this.origin && \
this.kernel.setUniform3fv(this.id, this.uploadValue = e2);\n          }\n     \
   } };\n      }, { \"./index\": 59 }], 43: [function(e, t, r) {\n        \
const { WebGLKernelValue: n } = e(\"./index\");\n        t.exports = { \
WebGLKernelValueArray4: class extends n {\n          constructor(e2, t2) {\n  \
          super(e2, t2), this.uploadValue = e2;\n          }\n          \
getSource(e2) {\n            return \"constants\" === this.origin ? `const \
vec4 ${this.id} = vec4(${e2[0]},${e2[1]},${e2[2]},${e2[3]});\n` : `uniform \
vec4 ${this.id};\n`;\n          }\n          getStringValueHandler() {\n      \
      return \"constants\" === this.origin ? \"\" : `const \
uploadValue_${this.name} = ${this.varName};\n`;\n          }\n          \
updateValue(e2) {\n            \"constants\" !== this.origin && \
this.kernel.setUniform4fv(this.id, this.uploadValue = e2);\n          }\n     \
   } };\n      }, { \"./index\": 59 }], 44: [function(e, t, r) {\n        \
const { utils: n } = e(\"../../../utils\"), { WebGLKernelValue: i } = \
e(\"./index\");\n        t.exports = { WebGLKernelValueBoolean: class extends \
i {\n          constructor(e2, t2) {\n            super(e2, t2), \
this.uploadValue = e2;\n          }\n          getSource(e2) {\n            \
return \"constants\" === this.origin ? `const bool ${this.id} = ${e2};\n` : \
`uniform bool ${this.id};\n`;\n          }\n          getStringValueHandler() \
{\n            return `const uploadValue_${this.name} = \
${this.varName};\n`;\n          }\n          updateValue(e2) {\n            \
\"constants\" !== this.origin && this.kernel.setUniform1i(this.id, \
this.uploadValue = e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./index\": 59 }], 45: [function(e, t, r) {\n       \
 const { utils: n } = e(\"../../../utils\"), { WebGLKernelValueHTMLImage: i } \
= e(\"./html-image\");\n        t.exports = { \
WebGLKernelValueDynamicHTMLImage: class extends i {\n          getSource() \
{\n            return n.linesToString([`uniform sampler2D ${this.id}`, \
`uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n     \
     }\n          updateValue(e2) {\n            const { width: t2, height: \
r2 } = e2;\n            this.checkSize(t2, r2), this.dimensions = [t2, r2, \
1], this.textureSize = [t2, r2], this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./html-image\": 57 }], 46: [function(e, t, r) {\n  \
      const { WebGLKernelValueDynamicHTMLImage: n } = \
e(\"./dynamic-html-image\");\n        t.exports = { \
WebGLKernelValueDynamicHTMLVideo: class extends n {\n        } };\n      }, { \
\"./dynamic-html-image\": 45 }], 47: [function(e, t, r) {\n        const { \
utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueMemoryOptimizedNumberTexture: i } = \
e(\"./memory-optimized-number-texture\");\n        t.exports = { \
WebGLKernelValueDynamicMemoryOptimizedNumberTexture: class extends i {\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.dimensions = e2.dimensions, this.checkSize(e2.size[0], e2.size[1]), \
this.textureSize = e2.size, this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./memory-optimized-number-texture\": 61 }], 48: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueNumberTexture: i } = e(\"./number-texture\");\n        \
t.exports = { WebGLKernelValueDynamicNumberTexture: class extends i {\n       \
   getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.dimensions = e2.dimensions, this.checkSize(e2.size[0], e2.size[1]), \
this.textureSize = e2.size, this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./number-texture\": 62 }], 49: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray: i } = e(\"./single-array\");\n        t.exports \
= { WebGLKernelValueDynamicSingleArray: class extends i {\n          \
getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.dimensions = n.getDimensions(e2, true), this.textureSize = \
n.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * \
this.bitRatio, this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.uploadValue = new Float32Array(this.uploadArrayLength), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./single-array\": 63 }], 50: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray1DI: i } = e(\"./single-array1d-i\");\n        \
t.exports = { WebGLKernelValueDynamicSingleArray1DI: class extends i {\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./single-array1d-i\": 64 }], 51: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray2DI: i } = e(\"./single-array2d-i\");\n        \
t.exports = { WebGLKernelValueDynamicSingleArray2DI: class extends i {\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./single-array2d-i\": 65 }], 52: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray3DI: i } = e(\"./single-array3d-i\");\n        \
t.exports = { WebGLKernelValueDynamicSingleArray3DI: class extends i {\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./single-array3d-i\": 66 }], 53: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleInput: i } = e(\"./single-input\");\n        t.exports \
= { WebGLKernelValueDynamicSingleInput: class extends i {\n          \
getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  let [t2, r2, i2] = e2.size;\n            this.dimensions = new \
Int32Array([t2 || 1, r2 || 1, i2 || 1]), this.textureSize = \
n.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * \
this.bitRatio, this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.uploadValue = new Float32Array(this.uploadArrayLength), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./single-input\": 67 }], 54: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueUnsignedArray: i } = e(\"./unsigned-array\");\n        \
t.exports = { WebGLKernelValueDynamicUnsignedArray: class extends i {\n       \
   getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.dimensions = n.getDimensions(e2, true), this.textureSize = \
n.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / \
this.bitRatio), this.checkSize(this.textureSize[0], this.textureSize[1]);\n   \
         const t2 = this.getTransferArrayType(e2);\n            \
this.preUploadValue = new t2(this.uploadArrayLength), this.uploadValue = new \
Uint8Array(this.preUploadValue.buffer), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./unsigned-array\": 68 }], 55: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueUnsignedInput: i } = e(\"./unsigned-input\");\n        \
t.exports = { WebGLKernelValueDynamicUnsignedInput: class extends i {\n       \
   getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  let [t2, r2, i2] = e2.size;\n            this.dimensions = new \
Int32Array([t2 || 1, r2 || 1, i2 || 1]), this.textureSize = \
n.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / \
this.bitRatio), this.checkSize(this.textureSize[0], this.textureSize[1]);\n   \
         const s = this.getTransferArrayType(e2.value);\n            \
this.preUploadValue = new s(this.uploadArrayLength), this.uploadValue = new \
Uint8Array(this.preUploadValue.buffer), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./unsigned-input\": 69 }], 56: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelValue: i \
} = e(\"./index\");\n        t.exports = { WebGLKernelValueFloat: class \
extends i {\n          constructor(e2, t2) {\n            super(e2, t2), \
this.uploadValue = e2;\n          }\n          getStringValueHandler() {\n    \
        return `const uploadValue_${this.name} = ${this.varName};\n`;\n       \
   }\n          getSource(e2) {\n            return \"constants\" === \
this.origin ? Number.isInteger(e2) ? `const float ${this.id} = ${e2}.0;\n` : \
`const float ${this.id} = ${e2};\n` : `uniform float ${this.id};\n`;\n        \
  }\n          updateValue(e2) {\n            \"constants\" !== this.origin \
&& this.kernel.setUniform1f(this.id, this.uploadValue = e2);\n          }\n   \
     } };\n      }, { \"../../../utils\": 114, \"./index\": 59 }], 57: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelArray: i } = e(\"./array\");\n        t.exports = { \
WebGLKernelValueHTMLImage: class extends i {\n          constructor(e2, t2) \
{\n            super(e2, t2);\n            const { width: r2, height: n2 } = \
e2;\n            this.checkSize(r2, n2), this.dimensions = [r2, n2, 1], \
this.textureSize = [r2, n2], this.uploadValue = e2;\n          }\n          \
getStringValueHandler() {\n            return `const uploadValue_${this.name} \
= ${this.varName};\n`;\n          }\n          getSource() {\n            \
return n.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} \
= ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 \
${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            t2.activeTexture(this.contextHandle), \
t2.bindTexture(t2.TEXTURE_2D, this.texture), \
t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, true), t2.texImage2D(t2.TEXTURE_2D, 0, \
t2.RGBA, t2.RGBA, t2.UNSIGNED_BYTE, this.uploadValue = e2), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 58: [function(e, t, r) \
{\n        const { WebGLKernelValueHTMLImage: n } = e(\"./html-image\");\n    \
    t.exports = { WebGLKernelValueHTMLVideo: class extends n {\n        } \
};\n      }, { \"./html-image\": 57 }], 59: [function(e, t, r) {\n        \
const { utils: n } = e(\"../../../utils\"), { KernelValue: i } = \
e(\"../../kernel-value\");\n        t.exports = { WebGLKernelValue: class \
extends i {\n          constructor(e2, t2) {\n            super(e2, t2), \
this.dimensionsId = null, this.sizeId = null, this.initialValueConstructor = \
e2.constructor, this.onRequestTexture = t2.onRequestTexture, \
this.onRequestIndex = t2.onRequestIndex, this.uploadValue = null, \
this.textureSize = null, this.bitRatio = null, this.prevArg = null;\n         \
 }\n          get id() {\n            return \
`${this.origin}_${n.sanitizeName(this.name)}`;\n          }\n          \
setup() {\n          }\n          getTransferArrayType(e2) {\n            if \
(Array.isArray(e2[0])) return this.getTransferArrayType(e2[0]);\n            \
switch (e2.constructor) {\n              case Array:\n              case \
Int32Array:\n              case Int16Array:\n              case Int8Array:\n  \
              return Float32Array;\n              case Uint8ClampedArray:\n   \
           case Uint8Array:\n              case Uint16Array:\n              \
case Uint32Array:\n              case Float32Array:\n              case \
Float64Array:\n                return e2.constructor;\n            }\n        \
    return console.warn(\"Unfamiliar constructor type.  Will go ahead and \
use, but likley this may result in a transfer of zeros\"), e2.constructor;\n  \
        }\n          getStringValueHandler() {\n            throw new \
Error(`\"getStringValueHandler\" not implemented on \
${this.constructor.name}`);\n          }\n          \
getVariablePrecisionString() {\n            return \
this.kernel.getVariablePrecisionString(this.textureSize || void 0, \
this.tactic || void 0);\n          }\n          destroy() {\n          }\n    \
    } };\n      }, { \"../../../utils\": 114, \"../../kernel-value\": 35 }], \
60: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ WebGLKernelValue: i } = e(\"./index\");\n        t.exports = { \
WebGLKernelValueInteger: class extends i {\n          constructor(e2, t2) {\n \
           super(e2, t2), this.uploadValue = e2;\n          }\n          \
getStringValueHandler() {\n            return `const uploadValue_${this.name} \
= ${this.varName};\n`;\n          }\n          getSource(e2) {\n            \
return \"constants\" === this.origin ? `const int ${this.id} = \
${parseInt(e2)};\n` : `uniform int ${this.id};\n`;\n          }\n          \
updateValue(e2) {\n            \"constants\" !== this.origin && \
this.kernel.setUniform1i(this.id, this.uploadValue = e2);\n          }\n      \
  } };\n      }, { \"../../../utils\": 114, \"./index\": 59 }], 61: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelArray: i } = e(\"./array\"), s = \"Source and destination textures \
are the same.  Use immutable = true and manually cleanup kernel output \
texture memory with texture.delete()\";\n        t.exports = { \
WebGLKernelValueMemoryOptimizedNumberTexture: class extends i {\n          \
constructor(e2, t2) {\n            super(e2, t2);\n            const [r2, n2] \
= e2.size;\n            this.checkSize(r2, n2), this.dimensions = \
e2.dimensions, this.textureSize = e2.size, this.uploadValue = e2.texture, \
this.forceUploadEachRun = true;\n          }\n          setup() {\n           \
 this.setupTexture();\n          }\n          getStringValueHandler() {\n     \
       return `const uploadValue_${this.name} = \
${this.varName}.texture;\n`;\n          }\n          getSource() {\n          \
  return n.linesToString([`uniform sampler2D ${this.id}`, `ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            if (e2.constructor !== \
this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            if \
(this.checkContext && e2.context !== this.context) throw new Error(`Value \
${this.name} (${this.type}) must be from same context`);\n            const { \
kernel: t2, context: r2 } = this;\n            if (t2.pipeline) if \
(t2.immutable) t2.updateTextureArgumentRefs(this, e2);\n            else {\n  \
            if (t2.texture && t2.texture.texture === e2.texture) throw new \
Error(s);\n              if (t2.mappedTextures) {\n                const { \
mappedTextures: r3 } = t2;\n                for (let t3 = 0; t3 < r3.length; \
t3++) if (r3[t3].texture === e2.texture) throw new Error(s);\n              \
}\n            }\n            r2.activeTexture(this.contextHandle), \
r2.bindTexture(r2.TEXTURE_2D, this.uploadValue = e2.texture), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        }, \
sameError: s };\n      }, { \"../../../utils\": 114, \"./array\": 40 }], 62: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelArray: i } = e(\"./array\"), { sameError: s } = \
e(\"./memory-optimized-number-texture\");\n        t.exports = { \
WebGLKernelValueNumberTexture: class extends i {\n          constructor(e2, \
t2) {\n            super(e2, t2);\n            const [r2, n2] = e2.size;\n    \
        this.checkSize(r2, n2);\n            const { size: i2, dimensions: s2 \
} = e2;\n            this.bitRatio = this.getBitRatio(e2), this.dimensions = \
s2, this.textureSize = i2, this.uploadValue = e2.texture, \
this.forceUploadEachRun = true;\n          }\n          setup() {\n           \
 this.setupTexture();\n          }\n          getStringValueHandler() {\n     \
       return `const uploadValue_${this.name} = \
${this.varName}.texture;\n`;\n          }\n          getSource() {\n          \
  return n.linesToString([`uniform sampler2D ${this.id}`, `ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            if (e2.constructor !== \
this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            if \
(this.checkContext && e2.context !== this.context) throw new Error(`Value \
${this.name} (${this.type}) must be from same context`);\n            const { \
kernel: t2, context: r2 } = this;\n            if (t2.pipeline) if \
(t2.immutable) t2.updateTextureArgumentRefs(this, e2);\n            else {\n  \
            if (t2.texture && t2.texture.texture === e2.texture) throw new \
Error(s);\n              if (t2.mappedTextures) {\n                const { \
mappedTextures: r3 } = t2;\n                for (let t3 = 0; t3 < r3.length; \
t3++) if (r3[t3].texture === e2.texture) throw new Error(s);\n              \
}\n            }\n            r2.activeTexture(this.contextHandle), \
r2.bindTexture(r2.TEXTURE_2D, this.uploadValue = e2.texture), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40, \
\"./memory-optimized-number-texture\": 61 }], 63: [function(e, t, r) {\n      \
  const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i } = \
e(\"./array\");\n        t.exports = { WebGLKernelValueSingleArray: class \
extends i {\n          constructor(e2, t2) {\n            super(e2, t2), \
this.bitRatio = 4, this.dimensions = n.getDimensions(e2, true), \
this.textureSize = n.getMemoryOptimizedFloatTextureSize(this.dimensions, \
this.bitRatio), this.uploadArrayLength = this.textureSize[0] * \
this.textureSize[1] * this.bitRatio, this.checkSize(this.textureSize[0], \
this.textureSize[1]), this.uploadValue = new \
Float32Array(this.uploadArrayLength);\n          }\n          \
getStringValueHandler() {\n            return n.linesToString([`const \
uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, \
`flattenTo(${this.varName}, uploadValue_${this.name})`]);\n          }\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flattenTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 64: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueSingleArray1DI: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), this.bitRatio = 4, this.setShape(e2);\n          }\n          \
setShape(e2) {\n            const t2 = n.getDimensions(e2, true);\n           \
 this.textureSize = n.getMemoryOptimizedFloatTextureSize(t2, this.bitRatio), \
this.dimensions = new Int32Array([t2[1], 1, 1]), this.uploadArrayLength = \
this.textureSize[0] * this.textureSize[1] * this.bitRatio, \
this.checkSize(this.textureSize[0], this.textureSize[1]), this.uploadValue = \
new Float32Array(this.uploadArrayLength);\n          }\n          \
getStringValueHandler() {\n            return n.linesToString([`const \
uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, \
`flattenTo(${this.varName}, uploadValue_${this.name})`]);\n          }\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flatten2dArrayTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 65: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueSingleArray2DI: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), this.bitRatio = 4, this.setShape(e2);\n          }\n          \
setShape(e2) {\n            const t2 = n.getDimensions(e2, true);\n           \
 this.textureSize = n.getMemoryOptimizedFloatTextureSize(t2, this.bitRatio), \
this.dimensions = new Int32Array([t2[1], t2[2], 1]), this.uploadArrayLength = \
this.textureSize[0] * this.textureSize[1] * this.bitRatio, \
this.checkSize(this.textureSize[0], this.textureSize[1]), this.uploadValue = \
new Float32Array(this.uploadArrayLength);\n          }\n          \
getStringValueHandler() {\n            return n.linesToString([`const \
uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, \
`flattenTo(${this.varName}, uploadValue_${this.name})`]);\n          }\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flatten3dArrayTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 66: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueSingleArray3DI: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), this.bitRatio = 4, this.setShape(e2);\n          }\n          \
setShape(e2) {\n            const t2 = n.getDimensions(e2, true);\n           \
 this.textureSize = n.getMemoryOptimizedFloatTextureSize(t2, this.bitRatio), \
this.dimensions = new Int32Array([t2[1], t2[2], t2[3]]), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * \
this.bitRatio, this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.uploadValue = new Float32Array(this.uploadArrayLength);\n          }\n   \
       getStringValueHandler() {\n            return n.linesToString([`const \
uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, \
`flattenTo(${this.varName}, uploadValue_${this.name})`]);\n          }\n      \
    getSource() {\n            return n.linesToString([`uniform sampler2D \
${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flatten4dArrayTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 67: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueSingleInput: class \
extends i {\n          constructor(e2, t2) {\n            super(e2, t2), \
this.bitRatio = 4;\n            let [r2, i2, s] = e2.size;\n            \
this.dimensions = new Int32Array([r2 || 1, i2 || 1, s || 1]), \
this.textureSize = n.getMemoryOptimizedFloatTextureSize(this.dimensions, \
this.bitRatio), this.uploadArrayLength = this.textureSize[0] * \
this.textureSize[1] * this.bitRatio, this.checkSize(this.textureSize[0], \
this.textureSize[1]), this.uploadValue = new \
Float32Array(this.uploadArrayLength);\n          }\n          \
getStringValueHandler() {\n            return n.linesToString([`const \
uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, \
`flattenTo(${this.varName}.value, uploadValue_${this.name})`]);\n          \
}\n          getSource() {\n            return n.linesToString([`uniform \
sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flattenTo(e2.value, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 68: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueUnsignedArray: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), this.bitRatio = this.getBitRatio(e2), this.dimensions = \
n.getDimensions(e2, true), this.textureSize = \
n.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / \
this.bitRatio), this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.TranserArrayType = this.getTransferArrayType(e2), this.preUploadValue = \
new this.TranserArrayType(this.uploadArrayLength), this.uploadValue = new \
Uint8Array(this.preUploadValue.buffer);\n          }\n          \
getStringValueHandler() {\n            return n.linesToString([`const \
preUploadValue_${this.name} = new \
${this.TranserArrayType.name}(${this.uploadArrayLength})`, `const \
uploadValue_${this.name} = new \
Uint8Array(preUploadValue_${this.name}.buffer)`, `flattenTo(${this.varName}, \
preUploadValue_${this.name})`]);\n          }\n          getSource() {\n      \
      return n.linesToString([`uniform sampler2D ${this.id}`, `ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            if (e2.constructor !== \
this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flattenTo(e2, this.preUploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.UNSIGNED_BYTE, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 69: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { WebGLKernelArray: i \
} = e(\"./array\");\n        t.exports = { WebGLKernelValueUnsignedInput: \
class extends i {\n          constructor(e2, t2) {\n            super(e2, \
t2), this.bitRatio = this.getBitRatio(e2);\n            const [r2, i2, s] = \
e2.size;\n            this.dimensions = new Int32Array([r2 || 1, i2 || 1, s \
|| 1]), this.textureSize = \
n.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / \
this.bitRatio), this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.TranserArrayType = this.getTransferArrayType(e2.value), \
this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength), \
this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n          }\n \
         getStringValueHandler() {\n            return \
n.linesToString([`const preUploadValue_${this.name} = new \
${this.TranserArrayType.name}(${this.uploadArrayLength})`, `const \
uploadValue_${this.name} = new \
Uint8Array(preUploadValue_${this.name}.buffer)`, \
`flattenTo(${this.varName}.value, preUploadValue_${this.name})`]);\n          \
}\n          getSource() {\n            return n.linesToString([`uniform \
sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, \
${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = \
ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, \
${this.dimensions[2]})`]);\n          }\n          updateValue(e2) {\n        \
    if (e2.constructor !== this.initialValueConstructor) return void \
this.onUpdateValueMismatch(value.constructor);\n            const { context: \
t2 } = this;\n            n.flattenTo(e2.value, this.preUploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.UNSIGNED_BYTE, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"./array\": 40 }], 70: [function(e, t, r) \
{\n        const { GLKernel: n } = e(\"../gl/kernel\"), { FunctionBuilder: i \
} = e(\"../function-builder\"), { WebGLFunctionNode: s } = \
e(\"./function-node\"), { utils: a } = e(\"../../utils\"), o = \
e(\"../../plugins/math-random-uniformly-distributed\"), { fragmentShader: u } \
= e(\"./fragment-shader\"), { vertexShader: l } = e(\"./vertex-shader\"), { \
glKernelString: h } = e(\"../gl/kernel-string\"), { lookupKernelValueType: c \
} = e(\"./kernel-value-maps\");\n        let p = null, d = null, m = null, f \
= null, g = null;\n        const x = [o], y = [], b = {};\n        t.exports \
= { WebGLKernel: class extends n {\n          static get isSupported() {\n    \
        return null !== p || (this.setupFeatureChecks(), p = \
this.isContextMatch(m)), p;\n          }\n          static \
setupFeatureChecks() {\n            \"undefined\" != typeof document ? d = \
document.createElement(\"canvas\") : \"undefined\" != typeof OffscreenCanvas \
&& (d = new OffscreenCanvas(0, 0)), d && (m = d.getContext(\"webgl\") || \
d.getContext(\"experimental-webgl\"), m && m.getExtension && (f = { \
OES_texture_float: m.getExtension(\"OES_texture_float\"), \
OES_texture_float_linear: m.getExtension(\"OES_texture_float_linear\"), \
OES_element_index_uint: m.getExtension(\"OES_element_index_uint\"), \
WEBGL_draw_buffers: m.getExtension(\"WEBGL_draw_buffers\") }, g = \
this.getFeatures()));\n          }\n          static isContextMatch(e2) {\n   \
         return \"undefined\" != typeof WebGLRenderingContext && e2 \
instanceof WebGLRenderingContext;\n          }\n          static \
getIsTextureFloat() {\n            return Boolean(f.OES_texture_float);\n     \
     }\n          static getIsDrawBuffers() {\n            return \
Boolean(f.WEBGL_draw_buffers);\n          }\n          static \
getChannelCount() {\n            return f.WEBGL_draw_buffers ? \
m.getParameter(f.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n          \
}\n          static getMaxTextureSize() {\n            return \
m.getParameter(m.MAX_TEXTURE_SIZE);\n          }\n          static \
lookupKernelValueType(e2, t2, r2, n2) {\n            return c(e2, t2, r2, \
n2);\n          }\n          static get testCanvas() {\n            return \
d;\n          }\n          static get testContext() {\n            return \
m;\n          }\n          static get features() {\n            return g;\n   \
       }\n          static get fragmentShader() {\n            return u;\n    \
      }\n          static get vertexShader() {\n            return l;\n       \
   }\n          constructor(e2, t2) {\n            super(e2, t2), \
this.program = null, this.pipeline = t2.pipeline, this.endianness = \
a.systemEndianness(), this.extensions = {}, this.argumentTextureCount = 0, \
this.constantTextureCount = 0, this.fragShader = null, this.vertShader = \
null, this.drawBuffersMap = null, this.maxTexSize = null, \
this.onRequestSwitchKernel = null, this.texture = null, this.mappedTextures = \
null, this.mergeSettings(e2.settings || t2), this.threadDim = null, \
this.framebuffer = null, this.buffer = null, this.textureCache = [], \
this.programUniformLocationCache = {}, this.uniform1fCache = {}, \
this.uniform1iCache = {}, this.uniform2fCache = {}, this.uniform2fvCache = \
{}, this.uniform2ivCache = {}, this.uniform3fvCache = {}, \
this.uniform3ivCache = {}, this.uniform4fvCache = {}, this.uniform4ivCache = \
{};\n          }\n          initCanvas() {\n            if (\"undefined\" != \
typeof document) {\n              const e2 = \
document.createElement(\"canvas\");\n              return e2.width = 2, \
e2.height = 2, e2;\n            }\n            if (\"undefined\" != typeof \
OffscreenCanvas) return new OffscreenCanvas(0, 0);\n          }\n          \
initContext() {\n            const e2 = { alpha: false, depth: false, \
antialias: false };\n            return this.canvas.getContext(\"webgl\", e2) \
|| this.canvas.getContext(\"experimental-webgl\", e2);\n          }\n         \
 initPlugins(e2) {\n            const t2 = [], { source: r2 } = this;\n       \
     if (\"string\" == typeof r2) for (let e3 = 0; e3 < x.length; e3++) {\n   \
           const n2 = x[e3];\n              r2.match(n2.functionMatch) && \
t2.push(n2);\n            }\n            else if (\"object\" == typeof r2 && \
e2.pluginNames) for (let r3 = 0; r3 < x.length; r3++) {\n              const \
n2 = x[r3];\n              e2.pluginNames.some((e3) => e3 === n2.name) && \
t2.push(n2);\n            }\n            return t2;\n          }\n          \
initExtensions() {\n            this.extensions = { OES_texture_float: \
this.context.getExtension(\"OES_texture_float\"), OES_texture_float_linear: \
this.context.getExtension(\"OES_texture_float_linear\"), \
OES_element_index_uint: \
this.context.getExtension(\"OES_element_index_uint\"), WEBGL_draw_buffers: \
this.context.getExtension(\"WEBGL_draw_buffers\"), WEBGL_color_buffer_float: \
this.context.getExtension(\"WEBGL_color_buffer_float\") };\n          }\n     \
     validateSettings(e2) {\n            if (!this.validate) return void \
(this.texSize = a.getKernelTextureSize({ optimizeFloatMemory: \
this.optimizeFloatMemory, precision: this.precision }, this.output));\n       \
     const { features: t2 } = this.constructor;\n            if (true === \
this.optimizeFloatMemory && !t2.isTextureFloat) throw new Error(\"Float \
textures are not supported\");\n            if (\"single\" === this.precision \
&& !t2.isFloatRead) throw new Error(\"Single precision not supported\");\n    \
        if (!this.graphical && null === this.precision && t2.isTextureFloat \
&& (this.precision = t2.isFloatRead ? \"single\" : \"unsigned\"), \
this.subKernels && this.subKernels.length > 0 && \
!this.extensions.WEBGL_draw_buffers) throw new Error(\"could not instantiate \
draw buffers extension\");\n            if (null === \
this.fixIntegerDivisionAccuracy ? this.fixIntegerDivisionAccuracy = \
!t2.isIntegerDivisionAccurate : this.fixIntegerDivisionAccuracy && \
t2.isIntegerDivisionAccurate && (this.fixIntegerDivisionAccuracy = false), \
this.checkOutput(), !this.output || 0 === this.output.length) {\n             \
 if (1 !== e2.length) throw new Error(\"Auto output only supported for \
kernels with only one input\");\n              const t3 = \
a.getVariableType(e2[0], this.strictIntegers);\n              switch (t3) {\n \
               case \"Array\":\n                  this.output = \
a.getDimensions(t3);\n                  break;\n                case \
\"NumberTexture\":\n                case \"MemoryOptimizedNumberTexture\":\n  \
              case \"ArrayTexture(1)\":\n                case \
\"ArrayTexture(2)\":\n                case \"ArrayTexture(3)\":\n             \
   case \"ArrayTexture(4)\":\n                  this.output = e2[0].output;\n \
                 break;\n                default:\n                  throw \
new Error(\"Auto output not supported for input type: \" + t3);\n             \
 }\n            }\n            if (this.graphical) {\n              if (2 !== \
this.output.length) throw new Error(\"Output must have 2 dimensions on \
graphical mode\");\n              return \"precision\" === this.precision && \
(this.precision = \"unsigned\", console.warn(\"Cannot use graphical mode and \
single precision at the same time\")), void (this.texSize = \
a.clone(this.output));\n            }\n            null === this.precision && \
t2.isTextureFloat && (this.precision = \"single\"), this.texSize = \
a.getKernelTextureSize({ optimizeFloatMemory: this.optimizeFloatMemory, \
precision: this.precision }, this.output), this.checkTextureSize();\n         \
 }\n          updateMaxTexSize() {\n            const { texSize: e2, canvas: \
t2 } = this;\n            if (null === this.maxTexSize) {\n              let \
r2 = y.indexOf(t2);\n              -1 === r2 && (r2 = y.length, y.push(t2), \
b[r2] = [e2[0], e2[1]]), this.maxTexSize = b[r2];\n            }\n            \
this.maxTexSize[0] < e2[0] && (this.maxTexSize[0] = e2[0]), \
this.maxTexSize[1] < e2[1] && (this.maxTexSize[1] = e2[1]);\n          }\n    \
      setupArguments(e2) {\n            this.kernelArguments = [], \
this.argumentTextureCount = 0;\n            const t2 = null === \
this.argumentTypes;\n            if (t2 && (this.argumentTypes = []), \
this.argumentSizes = [], this.argumentBitRatios = [], e2.length < \
this.argumentNames.length) throw new Error(\"not enough arguments for \
kernel\");\n            if (e2.length > this.argumentNames.length) throw new \
Error(\"too many arguments for kernel\");\n            const { context: r2 } \
= this;\n            let n2 = 0;\n            const i2 = () => \
this.createTexture(), s2 = () => this.constantTextureCount + n2++, o2 = (e3) \
=> {\n              this.switchKernels({ type: \"argumentMismatch\", needed: \
e3 });\n            }, u2 = () => r2.TEXTURE0 + this.constantTextureCount + \
this.argumentTextureCount++;\n            for (let n3 = 0; n3 < e2.length; \
n3++) {\n              const l2 = e2[n3], h2 = this.argumentNames[n3];\n      \
        let c2;\n              t2 ? (c2 = a.getVariableType(l2, \
this.strictIntegers), this.argumentTypes.push(c2)) : c2 = \
this.argumentTypes[n3];\n              const p2 = \
this.constructor.lookupKernelValueType(c2, this.dynamicArguments ? \
\"dynamic\" : \"static\", this.precision, e2[n3]);\n              if (null \
=== p2) return this.requestFallback(e2);\n              const d2 = new p2(l2, \
{ name: h2, type: c2, tactic: this.tactic, origin: \"user\", context: r2, \
checkContext: this.checkContext, kernel: this, strictIntegers: \
this.strictIntegers, onRequestTexture: i2, onRequestIndex: s2, \
onUpdateValueMismatch: o2, onRequestContextHandle: u2 });\n              \
this.kernelArguments.push(d2), d2.setup(), \
this.argumentSizes.push(d2.textureSize), this.argumentBitRatios[n3] = \
d2.bitRatio;\n            }\n          }\n          createTexture() {\n       \
     const e2 = this.context.createTexture();\n            return \
this.textureCache.push(e2), e2;\n          }\n          setupConstants(e2) \
{\n            const { context: t2 } = this;\n            \
this.kernelConstants = [], this.forceUploadKernelConstants = [];\n            \
let r2 = null === this.constantTypes;\n            r2 && (this.constantTypes \
= {}), this.constantBitRatios = {};\n            let n2 = 0;\n            for \
(const i2 in this.constants) {\n              const s2 = \
this.constants[i2];\n              let o2;\n              r2 ? (o2 = \
a.getVariableType(s2, this.strictIntegers), this.constantTypes[i2] = o2) : o2 \
= this.constantTypes[i2];\n              const u2 = \
this.constructor.lookupKernelValueType(o2, \"static\", this.precision, s2);\n \
             if (null === u2) return this.requestFallback(e2);\n              \
const l2 = new u2(s2, { name: i2, type: o2, tactic: this.tactic, origin: \
\"constants\", context: this.context, checkContext: this.checkContext, \
kernel: this, strictIntegers: this.strictIntegers, onRequestTexture: () => \
this.createTexture(), onRequestIndex: () => n2++, onRequestContextHandle: () \
=> t2.TEXTURE0 + this.constantTextureCount++ });\n              \
this.constantBitRatios[i2] = l2.bitRatio, this.kernelConstants.push(l2), \
l2.setup(), l2.forceUploadEachRun && \
this.forceUploadKernelConstants.push(l2);\n            }\n          }\n       \
   build() {\n            if (this.built) return;\n            if \
(this.initExtensions(), this.validateSettings(arguments), \
this.setupConstants(arguments), this.fallbackRequested) return;\n            \
if (this.setupArguments(arguments), this.fallbackRequested) return;\n         \
   this.updateMaxTexSize(), this.translateSource();\n            const e2 = \
this.pickRenderStrategy(arguments);\n            if (e2) return e2;\n         \
   const { texSize: t2, context: r2, canvas: n2 } = this;\n            \
r2.enable(r2.SCISSOR_TEST), this.pipeline && this.precision, r2.viewport(0, \
0, this.maxTexSize[0], this.maxTexSize[1]), n2.width = this.maxTexSize[0], \
n2.height = this.maxTexSize[1];\n            const i2 = this.threadDim = \
Array.from(this.output);\n            for (; i2.length < 3; ) i2.push(1);\n   \
         const s2 = this.getVertexShader(arguments), a2 = \
r2.createShader(r2.VERTEX_SHADER);\n            r2.shaderSource(a2, s2), \
r2.compileShader(a2), this.vertShader = a2;\n            const o2 = \
this.getFragmentShader(arguments), u2 = \
r2.createShader(r2.FRAGMENT_SHADER);\n            if (r2.shaderSource(u2, \
o2), r2.compileShader(u2), this.fragShader = u2, this.debug && \
(console.log(\"GLSL Shader Output:\"), console.log(o2)), \
!r2.getShaderParameter(a2, r2.COMPILE_STATUS)) throw new Error(\"Error \
compiling vertex shader: \" + r2.getShaderInfoLog(a2));\n            if \
(!r2.getShaderParameter(u2, r2.COMPILE_STATUS)) throw new Error(\"Error \
compiling fragment shader: \" + r2.getShaderInfoLog(u2));\n            const \
l2 = this.program = r2.createProgram();\n            r2.attachShader(l2, a2), \
r2.attachShader(l2, u2), r2.linkProgram(l2), this.framebuffer = \
r2.createFramebuffer(), this.framebuffer.width = t2[0], \
this.framebuffer.height = t2[1], this.rawValueFramebuffers = {};\n            \
const h2 = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]), c2 = new \
Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), p2 = h2.byteLength;\n            let \
d2 = this.buffer;\n            d2 ? r2.bindBuffer(r2.ARRAY_BUFFER, d2) : (d2 \
= this.buffer = r2.createBuffer(), r2.bindBuffer(r2.ARRAY_BUFFER, d2), \
r2.bufferData(r2.ARRAY_BUFFER, h2.byteLength + c2.byteLength, \
r2.STATIC_DRAW)), r2.bufferSubData(r2.ARRAY_BUFFER, 0, h2), \
r2.bufferSubData(r2.ARRAY_BUFFER, p2, c2);\n            const m2 = \
r2.getAttribLocation(this.program, \"aPos\");\n            \
r2.enableVertexAttribArray(m2), r2.vertexAttribPointer(m2, 2, r2.FLOAT, \
false, 0, 0);\n            const f2 = r2.getAttribLocation(this.program, \
\"aTexCoord\");\n            r2.enableVertexAttribArray(f2), \
r2.vertexAttribPointer(f2, 2, r2.FLOAT, false, 0, p2), \
r2.bindFramebuffer(r2.FRAMEBUFFER, this.framebuffer);\n            let g2 = \
0;\n            r2.useProgram(this.program);\n            for (let e3 in \
this.constants) this.kernelConstants[g2++].updateValue(this.constants[e3]);\n \
           this._setupOutputTexture(), null !== this.subKernels && \
this.subKernels.length > 0 && (this._mappedTextureSwitched = {}, \
this._setupSubOutputTextures()), this.buildSignature(arguments), this.built = \
true;\n          }\n          translateSource() {\n            const e2 = \
i.fromKernel(this, s, { fixIntegerDivisionAccuracy: \
this.fixIntegerDivisionAccuracy });\n            this.translatedSource = \
e2.getPrototypeString(\"kernel\"), this.setupReturnTypes(e2);\n          }\n  \
        setupReturnTypes(e2) {\n            if (this.graphical || \
this.returnType || (this.returnType = e2.getKernelResultType()), \
this.subKernels && this.subKernels.length > 0) for (let t2 = 0; t2 < \
this.subKernels.length; t2++) {\n              const r2 = \
this.subKernels[t2];\n              r2.returnType || (r2.returnType = \
e2.getSubKernelResultType(t2));\n            }\n          }\n          run() \
{\n            const { kernelArguments: e2, texSize: t2, \
forceUploadKernelConstants: r2, context: n2 } = this;\n            \
n2.useProgram(this.program), n2.scissor(0, 0, t2[0], t2[1]), \
this.dynamicOutput && (this.setUniform3iv(\"uOutputDim\", new \
Int32Array(this.threadDim)), this.setUniform2iv(\"uTexSize\", t2)), \
this.setUniform2f(\"ratio\", t2[0] / this.maxTexSize[0], t2[1] / \
this.maxTexSize[1]);\n            for (let e3 = 0; e3 < r2.length; e3++) {\n  \
            const t3 = r2[e3];\n              if \
(t3.updateValue(this.constants[t3.name]), this.switchingKernels) return;\n    \
        }\n            for (let t3 = 0; t3 < e2.length; t3++) if \
(e2[t3].updateValue(arguments[t3]), this.switchingKernels) return;\n          \
  if (this.plugins) for (let e3 = 0; e3 < this.plugins.length; e3++) {\n      \
        const t3 = this.plugins[e3];\n              t3.onBeforeRun && \
t3.onBeforeRun(this);\n            }\n            if (this.graphical) return \
this.pipeline ? (n2.bindRenderbuffer(n2.RENDERBUFFER, null), \
n2.bindFramebuffer(n2.FRAMEBUFFER, this.framebuffer), this.immutable && \
this._replaceOutputTexture(), n2.drawArrays(n2.TRIANGLE_STRIP, 0, 4), \
this.immutable ? this.texture.clone() : this.texture) : \
(n2.bindRenderbuffer(n2.RENDERBUFFER, null), \
n2.bindFramebuffer(n2.FRAMEBUFFER, null), void \
n2.drawArrays(n2.TRIANGLE_STRIP, 0, 4));\n            \
n2.bindFramebuffer(n2.FRAMEBUFFER, this.framebuffer), this.immutable && \
this._replaceOutputTexture(), null !== this.subKernels && (this.immutable && \
this._replaceSubOutputTextures(), this.drawBuffers()), \
n2.drawArrays(n2.TRIANGLE_STRIP, 0, 4);\n          }\n          drawBuffers() \
{\n            \
this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n   \
       }\n          getInternalFormat() {\n            return \
this.context.RGBA;\n          }\n          getTextureFormat() {\n            \
const { context: e2 } = this;\n            if (this.getInternalFormat() === \
e2.RGBA) return e2.RGBA;\n            throw new Error(\"Unknown internal \
format\");\n          }\n          _replaceOutputTexture() {\n            if \
(this.texture.beforeMutate() || this._textureSwitched) {\n              const \
e2 = this.context;\n              e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, this.texture.texture, 0), \
this._textureSwitched = false;\n            }\n          }\n          \
_setupOutputTexture() {\n            const e2 = this.context, t2 = \
this.texSize;\n            if (this.texture) return void \
e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, \
this.texture.texture, 0);\n            const r2 = this.createTexture();\n     \
       e2.activeTexture(e2.TEXTURE0 + this.constantTextureCount + \
this.argumentTextureCount), e2.bindTexture(e2.TEXTURE_2D, r2), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST);\n         \
   const n2 = this.getInternalFormat();\n            \"single\" === \
this.precision ? e2.texImage2D(e2.TEXTURE_2D, 0, n2, t2[0], t2[1], 0, \
e2.RGBA, e2.FLOAT, null) : e2.texImage2D(e2.TEXTURE_2D, 0, n2, t2[0], t2[1], \
0, n2, e2.UNSIGNED_BYTE, null), e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, r2, 0), this.texture = new \
this.TextureConstructor({ texture: r2, size: t2, dimensions: this.threadDim, \
output: this.output, context: this.context, internalFormat: \
this.getInternalFormat(), textureFormat: this.getTextureFormat(), kernel: \
this });\n          }\n          _replaceSubOutputTextures() {\n            \
const e2 = this.context;\n            for (let t2 = 0; t2 < \
this.mappedTextures.length; t2++) {\n              const r2 = \
this.mappedTextures[t2];\n              (r2.beforeMutate() || \
this._mappedTextureSwitched[t2]) && (e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0 + t2 + 1, e2.TEXTURE_2D, r2.texture, 0), \
this._mappedTextureSwitched[t2] = false);\n            }\n          }\n       \
   _setupSubOutputTextures() {\n            const e2 = this.context;\n        \
    if (this.mappedTextures) {\n              for (let t3 = 0; t3 < \
this.subKernels.length; t3++) e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0 + t3 + 1, e2.TEXTURE_2D, \
this.mappedTextures[t3].texture, 0);\n              return;\n            }\n  \
          const t2 = this.texSize;\n            this.drawBuffersMap = \
[e2.COLOR_ATTACHMENT0], this.mappedTextures = [];\n            for (let r2 = \
0; r2 < this.subKernels.length; r2++) {\n              const n2 = \
this.createTexture();\n              \
this.drawBuffersMap.push(e2.COLOR_ATTACHMENT0 + r2 + 1), \
e2.activeTexture(e2.TEXTURE0 + this.constantTextureCount + \
this.argumentTextureCount + r2), e2.bindTexture(e2.TEXTURE_2D, n2), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST), \
\"single\" === this.precision ? e2.texImage2D(e2.TEXTURE_2D, 0, e2.RGBA, \
t2[0], t2[1], 0, e2.RGBA, e2.FLOAT, null) : e2.texImage2D(e2.TEXTURE_2D, 0, \
e2.RGBA, t2[0], t2[1], 0, e2.RGBA, e2.UNSIGNED_BYTE, null), \
e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0 + r2 + 1, \
e2.TEXTURE_2D, n2, 0), this.mappedTextures.push(new this.TextureConstructor({ \
texture: n2, size: t2, dimensions: this.threadDim, output: this.output, \
context: this.context, internalFormat: this.getInternalFormat(), \
textureFormat: this.getTextureFormat(), kernel: this }));\n            }\n    \
      }\n          setUniform1f(e2, t2) {\n            if \
(this.uniform1fCache.hasOwnProperty(e2)) {\n              if (t2 === \
this.uniform1fCache[e2]) return;\n            }\n            \
this.uniform1fCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform1f(r2, t2);\n   \
       }\n          setUniform1i(e2, t2) {\n            if \
(this.uniform1iCache.hasOwnProperty(e2)) {\n              if (t2 === \
this.uniform1iCache[e2]) return;\n            }\n            \
this.uniform1iCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform1i(r2, t2);\n   \
       }\n          setUniform2f(e2, t2, r2) {\n            if \
(this.uniform2fCache.hasOwnProperty(e2)) {\n              const n3 = \
this.uniform2fCache[e2];\n              if (t2 === n3[0] && r2 === n3[1]) \
return;\n            }\n            this.uniform2fCache[e2] = [t2, r2];\n     \
       const n2 = this.getUniformLocation(e2);\n            \
this.context.uniform2f(n2, t2, r2);\n          }\n          setUniform2fv(e2, \
t2) {\n            if (this.uniform2fvCache.hasOwnProperty(e2)) {\n           \
   const r3 = this.uniform2fvCache[e2];\n              if (t2[0] === r3[0] && \
t2[1] === r3[1]) return;\n            }\n            this.uniform2fvCache[e2] \
= t2;\n            const r2 = this.getUniformLocation(e2);\n            \
this.context.uniform2fv(r2, t2);\n          }\n          setUniform2iv(e2, \
t2) {\n            if (this.uniform2ivCache.hasOwnProperty(e2)) {\n           \
   const r3 = this.uniform2ivCache[e2];\n              if (t2[0] === r3[0] && \
t2[1] === r3[1]) return;\n            }\n            this.uniform2ivCache[e2] \
= t2;\n            const r2 = this.getUniformLocation(e2);\n            \
this.context.uniform2iv(r2, t2);\n          }\n          setUniform3fv(e2, \
t2) {\n            if (this.uniform3fvCache.hasOwnProperty(e2)) {\n           \
   const r3 = this.uniform3fvCache[e2];\n              if (t2[0] === r3[0] && \
t2[1] === r3[1] && t2[2] === r3[2]) return;\n            }\n            \
this.uniform3fvCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform3fv(r2, t2);\n  \
        }\n          setUniform3iv(e2, t2) {\n            if \
(this.uniform3ivCache.hasOwnProperty(e2)) {\n              const r3 = \
this.uniform3ivCache[e2];\n              if (t2[0] === r3[0] && t2[1] === \
r3[1] && t2[2] === r3[2]) return;\n            }\n            \
this.uniform3ivCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform3iv(r2, t2);\n  \
        }\n          setUniform4fv(e2, t2) {\n            if \
(this.uniform4fvCache.hasOwnProperty(e2)) {\n              const r3 = \
this.uniform4fvCache[e2];\n              if (t2[0] === r3[0] && t2[1] === \
r3[1] && t2[2] === r3[2] && t2[3] === r3[3]) return;\n            }\n         \
   this.uniform4fvCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform4fv(r2, t2);\n  \
        }\n          setUniform4iv(e2, t2) {\n            if \
(this.uniform4ivCache.hasOwnProperty(e2)) {\n              const r3 = \
this.uniform4ivCache[e2];\n              if (t2[0] === r3[0] && t2[1] === \
r3[1] && t2[2] === r3[2] && t2[3] === r3[3]) return;\n            }\n         \
   this.uniform4ivCache[e2] = t2;\n            const r2 = \
this.getUniformLocation(e2);\n            this.context.uniform4iv(r2, t2);\n  \
        }\n          getUniformLocation(e2) {\n            return \
this.programUniformLocationCache.hasOwnProperty(e2) ? \
this.programUniformLocationCache[e2] : this.programUniformLocationCache[e2] = \
this.context.getUniformLocation(this.program, e2);\n          }\n          \
_getFragShaderArtifactMap(e2) {\n            return { HEADER: \
this._getHeaderString(), LOOP_MAX: this._getLoopMaxString(), PLUGINS: \
this._getPluginsString(), CONSTANTS: this._getConstantsString(), \
DECODE32_ENDIANNESS: this._getDecode32EndiannessString(), \
ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(), \
DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(), \
INJECTED_NATIVE: this._getInjectedNative(), MAIN_CONSTANTS: \
this._getMainConstantsString(), MAIN_ARGUMENTS: \
this._getMainArgumentsString(e2), KERNEL: this.getKernelString(), \
MAIN_RESULT: this.getMainResultString(), FLOAT_TACTIC_DECLARATION: \
this.getFloatTacticDeclaration(), INT_TACTIC_DECLARATION: \
this.getIntTacticDeclaration(), SAMPLER_2D_TACTIC_DECLARATION: \
this.getSampler2DTacticDeclaration(), SAMPLER_2D_ARRAY_TACTIC_DECLARATION: \
this.getSampler2DArrayTacticDeclaration() };\n          }\n          \
_getVertShaderArtifactMap(e2) {\n            return { \
FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(), \
INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(), \
SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(), \
SAMPLER_2D_ARRAY_TACTIC_DECLARATION: \
this.getSampler2DArrayTacticDeclaration() };\n          }\n          \
_getHeaderString() {\n            return null !== this.subKernels ? \
\"#extension GL_EXT_draw_buffers : require\\n\" : \"\";\n          }\n        \
  _getLoopMaxString() {\n            return this.loopMaxIterations ? ` \
${parseInt(this.loopMaxIterations)};\n` : \" 1000;\\n\";\n          }\n       \
   _getPluginsString() {\n            return this.plugins ? \
this.plugins.map((e2) => e2.source && this.source.match(e2.functionMatch) ? \
e2.source : \"\").join(\"\\n\") : \"\\n\";\n          }\n          \
_getConstantsString() {\n            const e2 = [], { threadDim: t2, texSize: \
r2 } = this;\n            return this.dynamicOutput ? e2.push(\"uniform ivec3 \
uOutputDim\", \"uniform ivec2 uTexSize\") : e2.push(`ivec3 uOutputDim = \
ivec3(${t2[0]}, ${t2[1]}, ${t2[2]})`, `ivec2 uTexSize = ivec2(${r2[0]}, \
${r2[1]})`), a.linesToString(e2);\n          }\n          \
_getTextureCoordinate() {\n            const e2 = this.subKernels;\n          \
  return null === e2 || e2.length < 1 ? \"varying vec2 vTexCoord;\\n\" : \
\"out vec2 vTexCoord;\\n\";\n          }\n          \
_getDecode32EndiannessString() {\n            return \"LE\" === \
this.endianness ? \"\" : \"  texel.rgba = texel.abgr;\\n\";\n          }\n    \
      _getEncode32EndiannessString() {\n            return \"LE\" === \
this.endianness ? \"\" : \"  texel.rgba = texel.abgr;\\n\";\n          }\n    \
      _getDivideWithIntegerCheckString() {\n            return \
this.fixIntegerDivisionAccuracy ? \"float divWithIntCheck(float x, float y) \
{\\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\\n    \
return float(int(x) / int(y));\\n  }\\n  return x / y;\\n}\\n\\nfloat \
integerCorrectionModulo(float number, float divisor) {\\n  if (number < 0.0) \
{\\n    number = abs(number);\\n    if (divisor < 0.0) {\\n      divisor = \
abs(divisor);\\n    }\\n    return -(number - (divisor * \
floor(divWithIntCheck(number, divisor))));\\n  }\\n  if (divisor < 0.0) {\\n  \
  divisor = abs(divisor);\\n  }\\n  return number - (divisor * \
floor(divWithIntCheck(number, divisor)));\\n}\" : \"\";\n          }\n        \
  _getMainArgumentsString(e2) {\n            const t2 = [], { argumentNames: \
r2 } = this;\n            for (let n2 = 0; n2 < r2.length; n2++) \
t2.push(this.kernelArguments[n2].getSource(e2[n2]));\n            return \
t2.join(\"\");\n          }\n          _getInjectedNative() {\n            \
return this.injectedNative || \"\";\n          }\n          \
_getMainConstantsString() {\n            const e2 = [], { constants: t2 } = \
this;\n            if (t2) {\n              let r2 = 0;\n              for \
(const n2 in t2) this.constants.hasOwnProperty(n2) && \
e2.push(this.kernelConstants[r2++].getSource(this.constants[n2]));\n          \
  }\n            return e2.join(\"\");\n          }\n          \
getRawValueFramebuffer(e2, t2) {\n            if \
(this.rawValueFramebuffers[e2] || (this.rawValueFramebuffers[e2] = {}), \
!this.rawValueFramebuffers[e2][t2]) {\n              const r2 = \
this.context.createFramebuffer();\n              r2.width = e2, r2.height = \
t2, this.rawValueFramebuffers[e2][t2] = r2;\n            }\n            \
return this.rawValueFramebuffers[e2][t2];\n          }\n          \
getKernelResultDeclaration() {\n            switch (this.returnType) {\n      \
        case \"Array(2)\":\n                return \"vec2 kernelResult\";\n   \
           case \"Array(3)\":\n                return \"vec3 \
kernelResult\";\n              case \"Array(4)\":\n                return \
\"vec4 kernelResult\";\n              case \"LiteralInteger\":\n              \
case \"Float\":\n              case \"Number\":\n              case \
\"Integer\":\n                return \"float kernelResult\";\n              \
default:\n                if (this.graphical) return \"float \
kernelResult\";\n                throw new Error(`unrecognized output type \
\"${this.returnType}\"`);\n            }\n          }\n          \
getKernelString() {\n            const e2 = \
[this.getKernelResultDeclaration()], { subKernels: t2 } = this;\n            \
if (null !== t2) switch (this.returnType) {\n              case \"Number\":\n \
             case \"Float\":\n              case \"Integer\":\n               \
 for (let r2 = 0; r2 < t2.length; r2++) {\n                  const n2 = \
t2[r2];\n                  e2.push(\"Integer\" === n2.returnType ? `int \
subKernelResult_${n2.name} = 0` : `float subKernelResult_${n2.name} = \
0.0`);\n                }\n                break;\n              case \
\"Array(2)\":\n                for (let r2 = 0; r2 < t2.length; r2++) \
e2.push(`vec2 subKernelResult_${t2[r2].name}`);\n                break;\n     \
         case \"Array(3)\":\n                for (let r2 = 0; r2 < t2.length; \
r2++) e2.push(`vec3 subKernelResult_${t2[r2].name}`);\n                \
break;\n              case \"Array(4)\":\n                for (let r2 = 0; r2 \
< t2.length; r2++) e2.push(`vec4 subKernelResult_${t2[r2].name}`);\n          \
  }\n            return a.linesToString(e2) + this.translatedSource;\n        \
  }\n          getMainResultGraphical() {\n            return \
a.linesToString([\"  threadId = indexTo3D(index, uOutputDim)\", \"  \
kernel()\", \"  gl_FragColor = actualColor\"]);\n          }\n          \
getMainResultPackedPixels() {\n            switch (this.returnType) {\n       \
       case \"LiteralInteger\":\n              case \"Number\":\n             \
 case \"Integer\":\n              case \"Float\":\n                return \
this.getMainResultKernelPackedPixels() + \
this.getMainResultSubKernelPackedPixels();\n              default:\n          \
      throw new Error(`packed output only usable with Numbers, \
\"${this.returnType}\" specified`);\n            }\n          }\n          \
getMainResultKernelPackedPixels() {\n            return a.linesToString([\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", `  gl_FragData[0] \
= ${this.useLegacyEncoder ? \"legacyEncode32\" : \
\"encode32\"}(kernelResult)`]);\n          }\n          \
getMainResultSubKernelPackedPixels() {\n            const e2 = [];\n          \
  if (!this.subKernels) return \"\";\n            for (let t2 = 0; t2 < \
this.subKernels.length; t2++) {\n              \"Integer\" === \
this.subKernels[t2].returnType ? e2.push(`  gl_FragData[${t2 + 1}] = \
${this.useLegacyEncoder ? \"legacyEncode32\" : \
\"encode32\"}(float(subKernelResult_${this.subKernels[t2].name}))`) : \
e2.push(`  gl_FragData[${t2 + 1}] = ${this.useLegacyEncoder ? \
\"legacyEncode32\" : \
\"encode32\"}(subKernelResult_${this.subKernels[t2].name})`);\n            \
}\n            return a.linesToString(e2);\n          }\n          \
getMainResultMemoryOptimizedFloats() {\n            const e2 = [\"  index *= \
4\"];\n            switch (this.returnType) {\n              case \
\"Number\":\n              case \"Integer\":\n              case \"Float\":\n \
               const t2 = [\"r\", \"g\", \"b\", \"a\"];\n                for \
(let r2 = 0; r2 < t2.length; r2++) {\n                  const n2 = t2[r2];\n  \
                this.getMainResultKernelMemoryOptimizedFloats(e2, n2), \
this.getMainResultSubKernelMemoryOptimizedFloats(e2, n2), r2 + 1 < t2.length \
&& e2.push(\"  index += 1\");\n                }\n                break;\n    \
          default:\n                throw new Error(`optimized output only \
usable with Numbers, ${this.returnType} specified`);\n            }\n         \
   return a.linesToString(e2);\n          }\n          \
getMainResultKernelMemoryOptimizedFloats(e2, t2) {\n            e2.push(\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", `  \
gl_FragData[0].${t2} = kernelResult`);\n          }\n          \
getMainResultSubKernelMemoryOptimizedFloats(e2, t2) {\n            if \
(!this.subKernels) return e2;\n            for (let r2 = 0; r2 < \
this.subKernels.length; r2++) {\n              \"Integer\" === \
this.subKernels[r2].returnType ? e2.push(`  gl_FragData[${r2 + 1}].${t2} = \
float(subKernelResult_${this.subKernels[r2].name})`) : e2.push(`  \
gl_FragData[${r2 + 1}].${t2} = \
subKernelResult_${this.subKernels[r2].name}`);\n            }\n          }\n  \
        getMainResultKernelNumberTexture() {\n            return [\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  \
gl_FragData[0][0] = kernelResult\"];\n          }\n          \
getMainResultSubKernelNumberTexture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) {\n              const r2 = \
this.subKernels[t2];\n              \"Integer\" === r2.returnType ? e2.push(` \
 gl_FragData[${t2 + 1}][0] = float(subKernelResult_${r2.name})`) : e2.push(`  \
gl_FragData[${t2 + 1}][0] = subKernelResult_${r2.name}`);\n            }\n    \
        return e2;\n          }\n          getMainResultKernelArray2Texture() \
{\n            return [\"  threadId = indexTo3D(index, uOutputDim)\", \"  \
kernel()\", \"  gl_FragData[0][0] = kernelResult[0]\", \"  gl_FragData[0][1] \
= kernelResult[1]\"];\n          }\n          \
getMainResultSubKernelArray2Texture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) e2.push(`  gl_FragData[${t2 + 1}][0] = \
subKernelResult_${this.subKernels[t2].name}[0]`, `  gl_FragData[${t2 + 1}][1] \
= subKernelResult_${this.subKernels[t2].name}[1]`);\n            return e2;\n \
         }\n          getMainResultKernelArray3Texture() {\n            \
return [\"  threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  \
gl_FragData[0][0] = kernelResult[0]\", \"  gl_FragData[0][1] = \
kernelResult[1]\", \"  gl_FragData[0][2] = kernelResult[2]\"];\n          }\n \
         getMainResultSubKernelArray3Texture() {\n            const e2 = \
[];\n            if (!this.subKernels) return e2;\n            for (let t2 = \
0; t2 < this.subKernels.length; ++t2) e2.push(`  gl_FragData[${t2 + 1}][0] = \
subKernelResult_${this.subKernels[t2].name}[0]`, `  gl_FragData[${t2 + 1}][1] \
= subKernelResult_${this.subKernels[t2].name}[1]`, `  gl_FragData[${t2 + \
1}][2] = subKernelResult_${this.subKernels[t2].name}[2]`);\n            \
return e2;\n          }\n          getMainResultKernelArray4Texture() {\n     \
       return [\"  threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \
\"  gl_FragData[0] = kernelResult\"];\n          }\n          \
getMainResultSubKernelArray4Texture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            switch (this.returnType) {\n \
             case \"Number\":\n              case \"Float\":\n              \
case \"Integer\":\n                for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) {\n                  \"Integer\" === \
this.subKernels[t2].returnType ? e2.push(`  gl_FragData[${t2 + 1}] = \
float(subKernelResult_${this.subKernels[t2].name})`) : e2.push(`  \
gl_FragData[${t2 + 1}] = subKernelResult_${this.subKernels[t2].name}`);\n     \
           }\n                break;\n              case \"Array(2)\":\n      \
          for (let t2 = 0; t2 < this.subKernels.length; ++t2) e2.push(`  \
gl_FragData[${t2 + 1}][0] = subKernelResult_${this.subKernels[t2].name}[0]`, \
`  gl_FragData[${t2 + 1}][1] = \
subKernelResult_${this.subKernels[t2].name}[1]`);\n                break;\n   \
           case \"Array(3)\":\n                for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) e2.push(`  gl_FragData[${t2 + 1}][0] = \
subKernelResult_${this.subKernels[t2].name}[0]`, `  gl_FragData[${t2 + 1}][1] \
= subKernelResult_${this.subKernels[t2].name}[1]`, `  gl_FragData[${t2 + \
1}][2] = subKernelResult_${this.subKernels[t2].name}[2]`);\n                \
break;\n              case \"Array(4)\":\n                for (let t2 = 0; t2 \
< this.subKernels.length; ++t2) e2.push(`  gl_FragData[${t2 + 1}][0] = \
subKernelResult_${this.subKernels[t2].name}[0]`, `  gl_FragData[${t2 + 1}][1] \
= subKernelResult_${this.subKernels[t2].name}[1]`, `  gl_FragData[${t2 + \
1}][2] = subKernelResult_${this.subKernels[t2].name}[2]`, `  gl_FragData[${t2 \
+ 1}][3] = subKernelResult_${this.subKernels[t2].name}[3]`);\n            }\n \
           return e2;\n          }\n          replaceArtifacts(e2, t2) {\n    \
        return e2.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, \
(e3, r2) => {\n              if (t2.hasOwnProperty(r2)) return t2[r2];\n      \
        throw `unhandled artifact ${r2}`;\n            });\n          }\n     \
     getFragmentShader(e2) {\n            return null !== \
this.compiledFragmentShader ? this.compiledFragmentShader : \
this.compiledFragmentShader = \
this.replaceArtifacts(this.constructor.fragmentShader, \
this._getFragShaderArtifactMap(e2));\n          }\n          \
getVertexShader(e2) {\n            return null !== this.compiledVertexShader \
? this.compiledVertexShader : this.compiledVertexShader = \
this.replaceArtifacts(this.constructor.vertexShader, \
this._getVertShaderArtifactMap(e2));\n          }\n          toString() {\n   \
         const e2 = a.linesToString([\"const gl = context\"]);\n            \
return h(this.constructor, arguments, this, e2);\n          }\n          \
destroy(e2) {\n            if (!this.context) return;\n            \
this.buffer && this.context.deleteBuffer(this.buffer), this.framebuffer && \
this.context.deleteFramebuffer(this.framebuffer);\n            for (const e3 \
in this.rawValueFramebuffers) {\n              for (const t3 in \
this.rawValueFramebuffers[e3]) \
this.context.deleteFramebuffer(this.rawValueFramebuffers[e3][t3]), delete \
this.rawValueFramebuffers[e3][t3];\n              delete \
this.rawValueFramebuffers[e3];\n            }\n            if \
(this.vertShader && this.context.deleteShader(this.vertShader), \
this.fragShader && this.context.deleteShader(this.fragShader), this.program \
&& this.context.deleteProgram(this.program), this.texture) {\n              \
this.texture.delete();\n              const e3 = \
this.textureCache.indexOf(this.texture.texture);\n              e3 > -1 && \
this.textureCache.splice(e3, 1), this.texture = null;\n            }\n        \
    if (this.mappedTextures && this.mappedTextures.length) {\n              \
for (let e3 = 0; e3 < this.mappedTextures.length; e3++) {\n                \
const t3 = this.mappedTextures[e3];\n                t3.delete();\n           \
     const r2 = this.textureCache.indexOf(t3.texture);\n                r2 > \
-1 && this.textureCache.splice(r2, 1);\n              }\n              \
this.mappedTextures = null;\n            }\n            if \
(this.kernelArguments) for (let e3 = 0; e3 < this.kernelArguments.length; \
e3++) this.kernelArguments[e3].destroy();\n            if \
(this.kernelConstants) for (let e3 = 0; e3 < this.kernelConstants.length; \
e3++) this.kernelConstants[e3].destroy();\n            for (; \
this.textureCache.length > 0; ) {\n              const e3 = \
this.textureCache.pop();\n              this.context.deleteTexture(e3);\n     \
       }\n            if (e2) {\n              const e3 = \
y.indexOf(this.canvas);\n              e3 >= 0 && (y[e3] = null, b[e3] = \
null);\n            }\n            if (this.destroyExtensions(), delete \
this.context, delete this.canvas, !this.gpu) return;\n            const t2 = \
this.gpu.kernels.indexOf(this);\n            -1 !== t2 && \
this.gpu.kernels.splice(t2, 1);\n          }\n          destroyExtensions() \
{\n            this.extensions.OES_texture_float = null, \
this.extensions.OES_texture_float_linear = null, \
this.extensions.OES_element_index_uint = null, \
this.extensions.WEBGL_draw_buffers = null;\n          }\n          static \
destroyContext(e2) {\n            const t2 = \
e2.getExtension(\"WEBGL_lose_context\");\n            t2 && \
t2.loseContext();\n          }\n          toJSON() {\n            const e2 = \
super.toJSON();\n            return e2.functionNodes = i.fromKernel(this, \
s).toJSON(), e2.settings.threadDim = this.threadDim, e2;\n          }\n       \
 } };\n      }, { \"../../plugins/math-random-uniformly-distributed\": 112, \
\"../../utils\": 114, \"../function-builder\": 9, \"../gl/kernel\": 13, \
\"../gl/kernel-string\": 12, \"./fragment-shader\": 37, \"./function-node\": \
38, \"./kernel-value-maps\": 39, \"./vertex-shader\": 71 }], 71: [function(e, \
t, r) {\n        t.exports = { vertexShader: \
\"__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_2D_\
TACTIC_DECLARATION__;\\n\\nattribute vec2 aPos;\\nattribute vec2 \
aTexCoord;\\n\\nvarying vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid \
main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, \
1);\\n  vTexCoord = aTexCoord;\\n}\" };\n      }, {}], 72: [function(e, t, r) \
{\n        const n = `#version 300 \
es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n\
__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\
\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin \
vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 \
== 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  \
if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return \
-pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return \
pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return \
x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * \
int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / \
log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat \
_pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, \
v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst \
int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / \
y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \
\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || \
(modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / \
2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  \
return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n \
= 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) \
!= (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b \
/ 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n \
 return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int \
n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && \
(modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / \
2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  \
return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n \
 \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      \
result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return \
result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes \
= BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) \
{\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < \
BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  \
}\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; \
i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += \
byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return \
result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return \
int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint \
bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  \
for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      \
break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) \
{\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result \
= 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i \
>= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = \
int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 \
integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * \
step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 \
res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), \
-res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, \
y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float \
x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > \
floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x \
- (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be \
dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON \
SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst \
vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, \
256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, \
0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) \
{\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x \
= texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n \
 float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float \
res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res \
= dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= \
gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int \
index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * \
255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int \
index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * \
255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float \
sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float \
mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  \
vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = \
integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  \
texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, \
2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // \
1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// \
https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float \
value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n \
 float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, \
-value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  \
mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  \
result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = \
exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = \
floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  \
result.b = result.b + exponent*128.0;\n\n  result.g = \
floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  \
result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons \
end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 \
texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * \
int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = \
int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat \
get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  \
int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 \
st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel \
= texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat \
get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  \
int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * \
2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  \
vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return \
decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y \
* z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, \
w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / \
vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat \
getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int \
channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n \
 vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  \
index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  \
return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, \
ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + \
texDim.y * z);\n  int w = texSize.x;\n  vec2 st = \
vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return \
texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, \
ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + \
texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = \
vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return \
texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat \
getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  \
return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 \
texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = \
getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], \
result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, \
ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + \
texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n \
 int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), \
float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  \
if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return \
vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 \
getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  \
return vec3(result[0], result[1], result[2]);\n}\n\nvec3 \
getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int \
y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  \
int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - \
vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = \
vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, \
readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return \
tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else \
{\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      \
readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / \
vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, \
tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n  \
  }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, \
y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 \
texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * \
z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = \
vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = \
texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, \
texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, \
float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, \
float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float \
divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor \
< 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, \
divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  \
return mod(number, \
divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__\
;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * \
float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  \
__MAIN_RESULT__;\n}`;\n        t.exports = { fragmentShader: n };\n      }, \
{}], 73: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../utils\"), { WebGLFunctionNode: i } = \
e(\"../web-gl/function-node\");\n        t.exports = { WebGL2FunctionNode: \
class extends i {\n          astIdentifierExpression(e2, t2) {\n            \
if (\"Identifier\" !== e2.type) throw \
this.astErrorOutput(\"IdentifierExpression - not an Identifier\", e2);\n      \
      const r2 = this.getType(e2), i2 = n.sanitizeName(e2.name);\n            \
return \"Infinity\" === e2.name ? t2.push(\"intBitsToFloat(2139095039)\") : \
\"Boolean\" === r2 && this.argumentNames.indexOf(i2) > -1 ? \
t2.push(`bool(user_${i2})`) : t2.push(`user_${i2}`), t2;\n          }\n       \
 } };\n      }, { \"../../utils\": 114, \"../web-gl/function-node\": 38 }], \
74: [function(e, t, r) {\n        const { WebGL2KernelValueBoolean: n } = \
e(\"./kernel-value/boolean\"), { WebGL2KernelValueFloat: i } = \
e(\"./kernel-value/float\"), { WebGL2KernelValueInteger: s } = \
e(\"./kernel-value/integer\"), { WebGL2KernelValueHTMLImage: a } = \
e(\"./kernel-value/html-image\"), { WebGL2KernelValueDynamicHTMLImage: o } = \
e(\"./kernel-value/dynamic-html-image\"), { WebGL2KernelValueHTMLImageArray: \
u } = e(\"./kernel-value/html-image-array\"), { \
WebGL2KernelValueDynamicHTMLImageArray: l } = \
e(\"./kernel-value/dynamic-html-image-array\"), { WebGL2KernelValueHTMLVideo: \
h } = e(\"./kernel-value/html-video\"), { WebGL2KernelValueDynamicHTMLVideo: \
c } = e(\"./kernel-value/dynamic-html-video\"), { \
WebGL2KernelValueSingleInput: p } = e(\"./kernel-value/single-input\"), { \
WebGL2KernelValueDynamicSingleInput: d } = \
e(\"./kernel-value/dynamic-single-input\"), { WebGL2KernelValueUnsignedInput: \
m } = e(\"./kernel-value/unsigned-input\"), { \
WebGL2KernelValueDynamicUnsignedInput: f } = \
e(\"./kernel-value/dynamic-unsigned-input\"), { \
WebGL2KernelValueMemoryOptimizedNumberTexture: g } = \
e(\"./kernel-value/memory-optimized-number-texture\"), { \
WebGL2KernelValueDynamicMemoryOptimizedNumberTexture: x } = \
e(\"./kernel-value/dynamic-memory-optimized-number-texture\"), { \
WebGL2KernelValueNumberTexture: y } = e(\"./kernel-value/number-texture\"), { \
WebGL2KernelValueDynamicNumberTexture: b } = \
e(\"./kernel-value/dynamic-number-texture\"), { WebGL2KernelValueSingleArray: \
T } = e(\"./kernel-value/single-array\"), { \
WebGL2KernelValueDynamicSingleArray: v } = \
e(\"./kernel-value/dynamic-single-array\"), { \
WebGL2KernelValueSingleArray1DI: S } = \
e(\"./kernel-value/single-array1d-i\"), { \
WebGL2KernelValueDynamicSingleArray1DI: A } = \
e(\"./kernel-value/dynamic-single-array1d-i\"), { \
WebGL2KernelValueSingleArray2DI: _ } = \
e(\"./kernel-value/single-array2d-i\"), { \
WebGL2KernelValueDynamicSingleArray2DI: E } = \
e(\"./kernel-value/dynamic-single-array2d-i\"), { \
WebGL2KernelValueSingleArray3DI: w } = \
e(\"./kernel-value/single-array3d-i\"), { \
WebGL2KernelValueDynamicSingleArray3DI: k } = \
e(\"./kernel-value/dynamic-single-array3d-i\"), { WebGL2KernelValueArray2: I \
} = e(\"./kernel-value/array2\"), { WebGL2KernelValueArray3: D } = \
e(\"./kernel-value/array3\"), { WebGL2KernelValueArray4: C } = \
e(\"./kernel-value/array4\"), { WebGL2KernelValueUnsignedArray: $ } = \
e(\"./kernel-value/unsigned-array\"), { \
WebGL2KernelValueDynamicUnsignedArray: L } = \
e(\"./kernel-value/dynamic-unsigned-array\"), R = { unsigned: { dynamic: { \
Boolean: n, Integer: s, Float: i, Array: L, \"Array(2)\": I, \"Array(3)\": D, \
\"Array(4)\": C, \"Array1D(2)\": false, \"Array1D(3)\": false, \
\"Array1D(4)\": false, \"Array2D(2)\": false, \"Array2D(3)\": false, \
\"Array2D(4)\": false, \"Array3D(2)\": false, \"Array3D(3)\": false, \
\"Array3D(4)\": false, Input: f, NumberTexture: b, \"ArrayTexture(1)\": b, \
\"ArrayTexture(2)\": b, \"ArrayTexture(3)\": b, \"ArrayTexture(4)\": b, \
MemoryOptimizedNumberTexture: x, HTMLCanvas: o, OffscreenCanvas: o, \
HTMLImage: o, ImageBitmap: o, ImageData: o, HTMLImageArray: l, HTMLVideo: c \
}, static: { Boolean: n, Float: i, Integer: s, Array: $, \"Array(2)\": I, \
\"Array(3)\": D, \"Array(4)\": C, \"Array1D(2)\": false, \"Array1D(3)\": \
false, \"Array1D(4)\": false, \"Array2D(2)\": false, \"Array2D(3)\": false, \
\"Array2D(4)\": false, \"Array3D(2)\": false, \"Array3D(3)\": false, \
\"Array3D(4)\": false, Input: m, NumberTexture: y, \"ArrayTexture(1)\": y, \
\"ArrayTexture(2)\": y, \"ArrayTexture(3)\": y, \"ArrayTexture(4)\": y, \
MemoryOptimizedNumberTexture: x, HTMLCanvas: a, OffscreenCanvas: a, \
HTMLImage: a, ImageBitmap: a, ImageData: a, HTMLImageArray: u, HTMLVideo: h } \
}, single: { dynamic: { Boolean: n, Integer: s, Float: i, Array: v, \
\"Array(2)\": I, \"Array(3)\": D, \"Array(4)\": C, \"Array1D(2)\": A, \
\"Array1D(3)\": A, \"Array1D(4)\": A, \"Array2D(2)\": E, \"Array2D(3)\": E, \
\"Array2D(4)\": E, \"Array3D(2)\": k, \"Array3D(3)\": k, \"Array3D(4)\": k, \
Input: d, NumberTexture: b, \"ArrayTexture(1)\": b, \"ArrayTexture(2)\": b, \
\"ArrayTexture(3)\": b, \"ArrayTexture(4)\": b, MemoryOptimizedNumberTexture: \
x, HTMLCanvas: o, OffscreenCanvas: o, HTMLImage: o, ImageBitmap: o, \
ImageData: o, HTMLImageArray: l, HTMLVideo: c }, static: { Boolean: n, Float: \
i, Integer: s, Array: T, \"Array(2)\": I, \"Array(3)\": D, \"Array(4)\": C, \
\"Array1D(2)\": S, \"Array1D(3)\": S, \"Array1D(4)\": S, \"Array2D(2)\": _, \
\"Array2D(3)\": _, \"Array2D(4)\": _, \"Array3D(2)\": w, \"Array3D(3)\": w, \
\"Array3D(4)\": w, Input: p, NumberTexture: y, \"ArrayTexture(1)\": y, \
\"ArrayTexture(2)\": y, \"ArrayTexture(3)\": y, \"ArrayTexture(4)\": y, \
MemoryOptimizedNumberTexture: g, HTMLCanvas: a, OffscreenCanvas: a, \
HTMLImage: a, ImageBitmap: a, ImageData: a, HTMLImageArray: u, HTMLVideo: h } \
} };\n        t.exports = { kernelValueMaps: R, lookupKernelValueType: \
function(e2, t2, r2, n2) {\n          if (!e2) throw new Error(\"type \
missing\");\n          if (!t2) throw new Error(\"dynamic missing\");\n       \
   if (!r2) throw new Error(\"precision missing\");\n          n2.type && (e2 \
= n2.type);\n          const i2 = R[r2][t2];\n          if (false === i2[e2]) \
return null;\n          if (void 0 === i2[e2]) throw new Error(`Could not \
find a KernelValue for ${e2}`);\n          return i2[e2];\n        } };\n     \
 }, { \"./kernel-value/array2\": 75, \"./kernel-value/array3\": 76, \
\"./kernel-value/array4\": 77, \"./kernel-value/boolean\": 78, \
\"./kernel-value/dynamic-html-image\": 80, \
\"./kernel-value/dynamic-html-image-array\": 79, \
\"./kernel-value/dynamic-html-video\": 81, \
\"./kernel-value/dynamic-memory-optimized-number-texture\": 82, \
\"./kernel-value/dynamic-number-texture\": 83, \
\"./kernel-value/dynamic-single-array\": 84, \
\"./kernel-value/dynamic-single-array1d-i\": 85, \
\"./kernel-value/dynamic-single-array2d-i\": 86, \
\"./kernel-value/dynamic-single-array3d-i\": 87, \
\"./kernel-value/dynamic-single-input\": 88, \
\"./kernel-value/dynamic-unsigned-array\": 89, \
\"./kernel-value/dynamic-unsigned-input\": 90, \"./kernel-value/float\": 91, \
\"./kernel-value/html-image\": 93, \"./kernel-value/html-image-array\": 92, \
\"./kernel-value/html-video\": 94, \"./kernel-value/integer\": 95, \
\"./kernel-value/memory-optimized-number-texture\": 96, \
\"./kernel-value/number-texture\": 97, \"./kernel-value/single-array\": 98, \
\"./kernel-value/single-array1d-i\": 99, \"./kernel-value/single-array2d-i\": \
100, \"./kernel-value/single-array3d-i\": 101, \
\"./kernel-value/single-input\": 102, \"./kernel-value/unsigned-array\": 103, \
\"./kernel-value/unsigned-input\": 104 }], 75: [function(e, t, r) {\n        \
const { WebGLKernelValueArray2: n } = \
e(\"../../web-gl/kernel-value/array2\");\n        t.exports = { \
WebGL2KernelValueArray2: class extends n {\n        } };\n      }, { \
\"../../web-gl/kernel-value/array2\": 41 }], 76: [function(e, t, r) {\n       \
 const { WebGLKernelValueArray3: n } = \
e(\"../../web-gl/kernel-value/array3\");\n        t.exports = { \
WebGL2KernelValueArray3: class extends n {\n        } };\n      }, { \
\"../../web-gl/kernel-value/array3\": 42 }], 77: [function(e, t, r) {\n       \
 const { WebGLKernelValueArray4: n } = \
e(\"../../web-gl/kernel-value/array4\");\n        t.exports = { \
WebGL2KernelValueArray4: class extends n {\n        } };\n      }, { \
\"../../web-gl/kernel-value/array4\": 43 }], 78: [function(e, t, r) {\n       \
 const { WebGLKernelValueBoolean: n } = \
e(\"../../web-gl/kernel-value/boolean\");\n        t.exports = { \
WebGL2KernelValueBoolean: class extends n {\n        } };\n      }, { \
\"../../web-gl/kernel-value/boolean\": 44 }], 79: [function(e, t, r) {\n      \
  const { utils: n } = e(\"../../../utils\"), { \
WebGL2KernelValueHTMLImageArray: i } = e(\"./html-image-array\");\n        \
t.exports = { WebGL2KernelValueDynamicHTMLImageArray: class extends i {\n     \
     getSource() {\n            const e2 = \
this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2DArray ${this.id}`, `uniform ${e2} \
ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 ${this.dimensionsId}`]);\n        \
  }\n          updateValue(e2) {\n            const { width: t2, height: r2 } \
= e2[0];\n            this.checkSize(t2, r2), this.dimensions = [t2, r2, \
e2.length], this.textureSize = [t2, r2], \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"./html-image-array\": 92 }], 80: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueDynamicHTMLImage: i } = \
e(\"../../web-gl/kernel-value/dynamic-html-image\");\n        t.exports = { \
WebGL2KernelValueDynamicHTMLImage: class extends i {\n          getSource() \
{\n            const e2 = this.getVariablePrecisionString();\n            \
return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `uniform ${e2} \
ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 ${this.dimensionsId}`]);\n        \
  }\n        } };\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/dynamic-html-image\": 45 }], 81: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGL2KernelValueDynamicHTMLImage: i } = e(\"./dynamic-html-image\");\n       \
 t.exports = { WebGL2KernelValueDynamicHTMLVideo: class extends i {\n        \
} };\n      }, { \"../../../utils\": 114, \"./dynamic-html-image\": 80 }], \
82: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ WebGLKernelValueDynamicMemoryOptimizedNumberTexture: i } = \
e(\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\");\n   \
     t.exports = { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture: \
class extends i {\n          getSource() {\n            return \
n.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 \
${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n          }\n       \
 } };\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\": 47 }], \
83: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ WebGLKernelValueDynamicNumberTexture: i } = \
e(\"../../web-gl/kernel-value/dynamic-number-texture\");\n        t.exports = \
{ WebGL2KernelValueDynamicNumberTexture: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \
\"../../web-gl/kernel-value/dynamic-number-texture\": 48 }], 84: [function(e, \
t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGL2KernelValueSingleArray: i } = \
e(\"../../web-gl2/kernel-value/single-array\");\n        t.exports = { \
WebGL2KernelValueDynamicSingleArray: class extends i {\n          getSource() \
{\n            const e2 = this.getVariablePrecisionString();\n            \
return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `uniform ${e2} \
ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 ${this.dimensionsId}`]);\n        \
  }\n          updateValue(e2) {\n            this.dimensions = \
n.getDimensions(e2, true), this.textureSize = \
n.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio), \
this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * \
this.bitRatio, this.checkSize(this.textureSize[0], this.textureSize[1]), \
this.uploadValue = new Float32Array(this.uploadArrayLength), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"../../web-gl2/kernel-value/single-array\": 98 }], \
85: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ WebGL2KernelValueSingleArray1DI: i } = \
e(\"../../web-gl2/kernel-value/single-array1d-i\");\n        t.exports = { \
WebGL2KernelValueDynamicSingleArray1DI: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"../../web-gl2/kernel-value/single-array1d-i\": 99 \
}], 86: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { WebGL2KernelValueSingleArray2DI: i } = \
e(\"../../web-gl2/kernel-value/single-array2d-i\");\n        t.exports = { \
WebGL2KernelValueDynamicSingleArray2DI: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"../../web-gl2/kernel-value/single-array2d-i\": 100 \
}], 87: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { WebGL2KernelValueSingleArray3DI: i } = \
e(\"../../web-gl2/kernel-value/single-array3d-i\");\n        t.exports = { \
WebGL2KernelValueDynamicSingleArray3DI: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n          updateValue(e2) {\n          \
  this.setShape(e2), this.kernel.setUniform3iv(this.dimensionsId, \
this.dimensions), this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"../../web-gl2/kernel-value/single-array3d-i\": 101 \
}], 88: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { WebGL2KernelValueSingleInput: i } = \
e(\"../../web-gl2/kernel-value/single-input\");\n        t.exports = { \
WebGL2KernelValueDynamicSingleInput: class extends i {\n          getSource() \
{\n            const e2 = this.getVariablePrecisionString();\n            \
return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `uniform ${e2} \
ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 ${this.dimensionsId}`]);\n        \
  }\n          updateValue(e2) {\n            let [t2, r2, i2] = e2.size;\n   \
         this.dimensions = new Int32Array([t2 || 1, r2 || 1, i2 || 1]), \
this.textureSize = n.getMemoryOptimizedFloatTextureSize(this.dimensions, \
this.bitRatio), this.uploadArrayLength = this.textureSize[0] * \
this.textureSize[1] * this.bitRatio, this.checkSize(this.textureSize[0], \
this.textureSize[1]), this.uploadValue = new \
Float32Array(this.uploadArrayLength), \
this.kernel.setUniform3iv(this.dimensionsId, this.dimensions), \
this.kernel.setUniform2iv(this.sizeId, this.textureSize), \
super.updateValue(e2);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \"../../web-gl2/kernel-value/single-input\": 102 }], \
89: [function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), \
{ WebGLKernelValueDynamicUnsignedArray: i } = \
e(\"../../web-gl/kernel-value/dynamic-unsigned-array\");\n        t.exports = \
{ WebGL2KernelValueDynamicUnsignedArray: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \
\"../../web-gl/kernel-value/dynamic-unsigned-array\": 54 }], 90: [function(e, \
t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueDynamicUnsignedInput: i } = \
e(\"../../web-gl/kernel-value/dynamic-unsigned-input\");\n        t.exports = \
{ WebGL2KernelValueDynamicUnsignedInput: class extends i {\n          \
getSource() {\n            const e2 = this.getVariablePrecisionString();\n    \
        return n.linesToString([`uniform ${e2} sampler2D ${this.id}`, \
`uniform ${e2} ivec2 ${this.sizeId}`, `uniform ${e2} ivec3 \
${this.dimensionsId}`]);\n          }\n        } };\n      }, { \
\"../../../utils\": 114, \
\"../../web-gl/kernel-value/dynamic-unsigned-input\": 55 }], 91: [function(e, \
t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueFloat: i } = e(\"../../web-gl/kernel-value/float\");\n        \
t.exports = { WebGL2KernelValueFloat: class extends i {\n        } };\n      \
}, { \"../../../utils\": 114, \"../../web-gl/kernel-value/float\": 56 }], 92: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelArray: i } = e(\"../../web-gl/kernel-value/array\");\n        \
t.exports = { WebGL2KernelValueHTMLImageArray: class extends i {\n          \
constructor(e2, t2) {\n            super(e2, t2), this.checkSize(e2[0].width, \
e2[0].height), this.dimensions = [e2[0].width, e2[0].height, e2.length], \
this.textureSize = [e2[0].width, e2[0].height];\n          }\n          \
defineTexture() {\n            const { context: e2 } = this;\n            \
e2.activeTexture(this.contextHandle), e2.bindTexture(e2.TEXTURE_2D_ARRAY, \
this.texture), e2.texParameteri(e2.TEXTURE_2D_ARRAY, e2.TEXTURE_MAG_FILTER, \
e2.NEAREST), e2.texParameteri(e2.TEXTURE_2D_ARRAY, e2.TEXTURE_MIN_FILTER, \
e2.NEAREST);\n          }\n          getStringValueHandler() {\n            \
return `const uploadValue_${this.name} = ${this.varName};\n`;\n          }\n  \
        getSource() {\n            const e2 = \
this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2DArray ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            const { context: t2 } = this;\n            \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D_ARRAY, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, true), \
t2.texImage3D(t2.TEXTURE_2D_ARRAY, 0, t2.RGBA, e2[0].width, e2[0].height, \
e2.length, 0, t2.RGBA, t2.UNSIGNED_BYTE, null);\n            for (let r2 = 0; \
r2 < e2.length; r2++) {\n              const n2 = 0, i2 = 0, s = 1;\n         \
     t2.texSubImage3D(t2.TEXTURE_2D_ARRAY, 0, n2, i2, r2, e2[r2].width, \
e2[r2].height, s, t2.RGBA, t2.UNSIGNED_BYTE, this.uploadValue = e2[r2]);\n    \
        }\n            this.kernel.setUniform1i(this.id, this.index);\n       \
   }\n        } };\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/array\": 40 }], 93: [function(e, t, r) {\n        \
const { utils: n } = e(\"../../../utils\"), { WebGLKernelValueHTMLImage: i } \
= e(\"../../web-gl/kernel-value/html-image\");\n        t.exports = { \
WebGL2KernelValueHTMLImage: class extends i {\n          getSource() {\n      \
      const e2 = this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n        } \
};\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/html-image\": 57 }], 94: [function(e, t, r) {\n   \
     const { utils: n } = e(\"../../../utils\"), { \
WebGL2KernelValueHTMLImage: i } = e(\"./html-image\");\n        t.exports = { \
WebGL2KernelValueHTMLVideo: class extends i {\n        } };\n      }, { \
\"../../../utils\": 114, \"./html-image\": 93 }], 95: [function(e, t, r) {\n  \
      const { WebGLKernelValueInteger: n } = \
e(\"../../web-gl/kernel-value/integer\");\n        t.exports = { \
WebGL2KernelValueInteger: class extends n {\n          getSource(e2) {\n      \
      const t2 = this.getVariablePrecisionString();\n            return \
\"constants\" === this.origin ? `const ${t2} int ${this.id} = \
${parseInt(e2)};\n` : `uniform ${t2} int ${this.id};\n`;\n          }\n       \
   updateValue(e2) {\n            \"constants\" !== this.origin && \
this.kernel.setUniform1i(this.id, this.uploadValue = e2);\n          }\n      \
  } };\n      }, { \"../../web-gl/kernel-value/integer\": 60 }], 96: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueMemoryOptimizedNumberTexture: i } = \
e(\"../../web-gl/kernel-value/memory-optimized-number-texture\");\n        \
t.exports = { WebGL2KernelValueMemoryOptimizedNumberTexture: class extends i \
{\n          getSource() {\n            const { id: e2, sizeId: t2, \
textureSize: r2, dimensionsId: i2, dimensions: s } = this, a = \
this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform sampler2D ${e2}`, `${a} ivec2 ${t2} = \
ivec2(${r2[0]}, ${r2[1]})`, `${a} ivec3 ${i2} = ivec3(${s[0]}, ${s[1]}, \
${s[2]})`]);\n          }\n        } };\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/memory-optimized-number-texture\": 61 }], 97: \
[function(e, t, r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueNumberTexture: i } = \
e(\"../../web-gl/kernel-value/number-texture\");\n        t.exports = { \
WebGL2KernelValueNumberTexture: class extends i {\n          getSource() {\n  \
          const { id: e2, sizeId: t2, textureSize: r2, dimensionsId: i2, \
dimensions: s } = this, a = this.getVariablePrecisionString();\n            \
return n.linesToString([`uniform ${a} sampler2D ${e2}`, `${a} ivec2 ${t2} = \
ivec2(${r2[0]}, ${r2[1]})`, `${a} ivec3 ${i2} = ivec3(${s[0]}, ${s[1]}, \
${s[2]})`]);\n          }\n        } };\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/number-texture\": 62 }], 98: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray: i } = \
e(\"../../web-gl/kernel-value/single-array\");\n        t.exports = { \
WebGL2KernelValueSingleArray: class extends i {\n          getSource() {\n    \
        const e2 = this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            if (e2.constructor !== \
this.initialValueConstructor) return void \
this.onUpdateValueMismatch(e2.constructor);\n            const { context: t2 \
} = this;\n            n.flattenTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA32F, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"../../web-gl/kernel-value/single-array\": \
63 }], 99: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { WebGLKernelValueSingleArray1DI: i } = \
e(\"../../web-gl/kernel-value/single-array1d-i\");\n        t.exports = { \
WebGL2KernelValueSingleArray1DI: class extends i {\n          updateValue(e2) \
{\n            if (e2.constructor !== this.initialValueConstructor) return \
void this.onUpdateValueMismatch(e2.constructor);\n            const { \
context: t2 } = this;\n            n.flattenTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA32F, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/single-array1d-i\": 64 }], 100: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray2DI: i } = \
e(\"../../web-gl/kernel-value/single-array2d-i\");\n        t.exports = { \
WebGL2KernelValueSingleArray2DI: class extends i {\n          updateValue(e2) \
{\n            if (e2.constructor !== this.initialValueConstructor) return \
void this.onUpdateValueMismatch(e2.constructor);\n            const { \
context: t2 } = this;\n            n.flattenTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA32F, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/single-array2d-i\": 65 }], 101: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleArray3DI: i } = \
e(\"../../web-gl/kernel-value/single-array3d-i\");\n        t.exports = { \
WebGL2KernelValueSingleArray3DI: class extends i {\n          updateValue(e2) \
{\n            if (e2.constructor !== this.initialValueConstructor) return \
void this.onUpdateValueMismatch(e2.constructor);\n            const { \
context: t2 } = this;\n            n.flattenTo(e2, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA32F, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/single-array3d-i\": 66 }], 102: [function(e, t, \
r) {\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueSingleInput: i } = \
e(\"../../web-gl/kernel-value/single-input\");\n        t.exports = { \
WebGL2KernelValueSingleInput: class extends i {\n          getSource() {\n    \
        const e2 = this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n          \
updateValue(e2) {\n            const { context: t2 } = this;\n            \
n.flattenTo(e2.value, this.uploadValue), \
t2.activeTexture(this.contextHandle), t2.bindTexture(t2.TEXTURE_2D, \
this.texture), t2.pixelStorei(t2.UNPACK_FLIP_Y_WEBGL, false), \
t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA32F, this.textureSize[0], \
this.textureSize[1], 0, t2.RGBA, t2.FLOAT, this.uploadValue), \
this.kernel.setUniform1i(this.id, this.index);\n          }\n        } };\n   \
   }, { \"../../../utils\": 114, \"../../web-gl/kernel-value/single-input\": \
67 }], 103: [function(e, t, r) {\n        const { utils: n } = \
e(\"../../../utils\"), { WebGLKernelValueUnsignedArray: i } = \
e(\"../../web-gl/kernel-value/unsigned-array\");\n        t.exports = { \
WebGL2KernelValueUnsignedArray: class extends i {\n          getSource() {\n  \
          const e2 = this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n        } \
};\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/unsigned-array\": 68 }], 104: [function(e, t, r) \
{\n        const { utils: n } = e(\"../../../utils\"), { \
WebGLKernelValueUnsignedInput: i } = \
e(\"../../web-gl/kernel-value/unsigned-input\");\n        t.exports = { \
WebGL2KernelValueUnsignedInput: class extends i {\n          getSource() {\n  \
          const e2 = this.getVariablePrecisionString();\n            return \
n.linesToString([`uniform ${e2} sampler2D ${this.id}`, `${e2} ivec2 \
${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, \
`${e2} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, \
${this.dimensions[1]}, ${this.dimensions[2]})`]);\n          }\n        } \
};\n      }, { \"../../../utils\": 114, \
\"../../web-gl/kernel-value/unsigned-input\": 69 }], 105: [function(e, t, r) \
{\n        const { WebGLKernel: n } = e(\"../web-gl/kernel\"), { \
WebGL2FunctionNode: i } = e(\"./function-node\"), { FunctionBuilder: s } = \
e(\"../function-builder\"), { utils: a } = e(\"../../utils\"), { \
fragmentShader: o } = e(\"./fragment-shader\"), { vertexShader: u } = \
e(\"./vertex-shader\"), { lookupKernelValueType: l } = \
e(\"./kernel-value-maps\");\n        let h = null, c = null, p = null, d = \
null, m = null;\n        t.exports = { WebGL2Kernel: class extends n {\n      \
    static get isSupported() {\n            return null !== h || \
(this.setupFeatureChecks(), h = this.isContextMatch(p)), h;\n          }\n    \
      static setupFeatureChecks() {\n            \"undefined\" != typeof \
document ? c = document.createElement(\"canvas\") : \"undefined\" != typeof \
OffscreenCanvas && (c = new OffscreenCanvas(0, 0)), c && (p = \
c.getContext(\"webgl2\"), p && p.getExtension && (d = { \
EXT_color_buffer_float: p.getExtension(\"EXT_color_buffer_float\"), \
OES_texture_float_linear: p.getExtension(\"OES_texture_float_linear\") }, m = \
this.getFeatures()));\n          }\n          static isContextMatch(e2) {\n   \
         return \"undefined\" != typeof WebGL2RenderingContext && e2 \
instanceof WebGL2RenderingContext;\n          }\n          static \
getFeatures() {\n            const e2 = this.testContext;\n            return \
Object.freeze({ isFloatRead: this.getIsFloatRead(), \
isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(), \
isSpeedTacticSupported: this.getIsSpeedTacticSupported(), kernelMap: true, \
isTextureFloat: true, isDrawBuffers: true, channelCount: \
this.getChannelCount(), maxTextureSize: this.getMaxTextureSize(), \
lowIntPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.LOW_INT), \
lowFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.LOW_FLOAT), mediumIntPrecision: \
e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.MEDIUM_INT), \
mediumFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.MEDIUM_FLOAT), highIntPrecision: \
e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, e2.HIGH_INT), \
highFloatPrecision: e2.getShaderPrecisionFormat(e2.FRAGMENT_SHADER, \
e2.HIGH_FLOAT) });\n          }\n          static getIsTextureFloat() {\n     \
       return true;\n          }\n          static getChannelCount() {\n      \
      return p.getParameter(p.MAX_DRAW_BUFFERS);\n          }\n          \
static getMaxTextureSize() {\n            return \
p.getParameter(p.MAX_TEXTURE_SIZE);\n          }\n          static \
lookupKernelValueType(e2, t2, r2, n2) {\n            return l(e2, t2, r2, \
n2);\n          }\n          static get testCanvas() {\n            return \
c;\n          }\n          static get testContext() {\n            return \
p;\n          }\n          static get features() {\n            return m;\n   \
       }\n          static get fragmentShader() {\n            return o;\n    \
      }\n          static get vertexShader() {\n            return u;\n       \
   }\n          initContext() {\n            return \
this.canvas.getContext(\"webgl2\", { alpha: false, depth: false, antialias: \
false });\n          }\n          initExtensions() {\n            \
this.extensions = { EXT_color_buffer_float: \
this.context.getExtension(\"EXT_color_buffer_float\"), \
OES_texture_float_linear: \
this.context.getExtension(\"OES_texture_float_linear\") };\n          }\n     \
     validateSettings(e2) {\n            if (!this.validate) return void \
(this.texSize = a.getKernelTextureSize({ optimizeFloatMemory: \
this.optimizeFloatMemory, precision: this.precision }, this.output));\n       \
     const { features: t2 } = this.constructor;\n            if (\"single\" \
=== this.precision && !t2.isFloatRead) throw new Error(\"Float texture \
outputs are not supported\");\n            if (this.graphical || null !== \
this.precision || (this.precision = t2.isFloatRead ? \"single\" : \
\"unsigned\"), null === this.fixIntegerDivisionAccuracy ? \
this.fixIntegerDivisionAccuracy = !t2.isIntegerDivisionAccurate : \
this.fixIntegerDivisionAccuracy && t2.isIntegerDivisionAccurate && \
(this.fixIntegerDivisionAccuracy = false), this.checkOutput(), !this.output \
|| 0 === this.output.length) {\n              if (1 !== e2.length) throw new \
Error(\"Auto output only supported for kernels with only one input\");\n      \
        const t3 = a.getVariableType(e2[0], this.strictIntegers);\n           \
   switch (t3) {\n                case \"Array\":\n                  \
this.output = a.getDimensions(t3);\n                  break;\n                \
case \"NumberTexture\":\n                case \
\"MemoryOptimizedNumberTexture\":\n                case \
\"ArrayTexture(1)\":\n                case \"ArrayTexture(2)\":\n             \
   case \"ArrayTexture(3)\":\n                case \"ArrayTexture(4)\":\n     \
             this.output = e2[0].output;\n                  break;\n          \
      default:\n                  throw new Error(\"Auto output not supported \
for input type: \" + t3);\n              }\n            }\n            if \
(this.graphical) {\n              if (2 !== this.output.length) throw new \
Error(\"Output must have 2 dimensions on graphical mode\");\n              \
return \"single\" === this.precision && (console.warn(\"Cannot use graphical \
mode and single precision at the same time\"), this.precision = \
\"unsigned\"), void (this.texSize = a.clone(this.output));\n            }\n   \
         !this.graphical && null === this.precision && t2.isTextureFloat && \
(this.precision = \"single\"), this.texSize = a.getKernelTextureSize({ \
optimizeFloatMemory: this.optimizeFloatMemory, precision: this.precision }, \
this.output), this.checkTextureSize();\n          }\n          \
translateSource() {\n            const e2 = s.fromKernel(this, i, { \
fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy });\n            \
this.translatedSource = e2.getPrototypeString(\"kernel\"), \
this.setupReturnTypes(e2);\n          }\n          drawBuffers() {\n          \
  this.context.drawBuffers(this.drawBuffersMap);\n          }\n          \
getTextureFormat() {\n            const { context: e2 } = this;\n            \
switch (this.getInternalFormat()) {\n              case e2.R32F:\n            \
    return e2.RED;\n              case e2.RG32F:\n                return \
e2.RG;\n              case e2.RGBA32F:\n              case e2.RGBA:\n         \
       return e2.RGBA;\n              default:\n                throw new \
Error(\"Unknown internal format\");\n            }\n          }\n          \
getInternalFormat() {\n            const { context: e2 } = this;\n            \
if (\"single\" === this.precision) {\n              if (this.pipeline) switch \
(this.returnType) {\n                case \"Number\":\n                case \
\"Float\":\n                case \"Integer\":\n                  return \
this.optimizeFloatMemory ? e2.RGBA32F : e2.R32F;\n                case \
\"Array(2)\":\n                  return e2.RG32F;\n                case \
\"Array(3)\":\n                case \"Array(4)\":\n                  return \
e2.RGBA32F;\n                default:\n                  throw new \
Error(\"Unhandled return type\");\n              }\n              return \
e2.RGBA32F;\n            }\n            return e2.RGBA;\n          }\n        \
  _setupOutputTexture() {\n            const e2 = this.context;\n            \
if (this.texture) return void e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, this.texture.texture, 0);\n            \
e2.bindFramebuffer(e2.FRAMEBUFFER, this.framebuffer);\n            const t2 = \
e2.createTexture(), r2 = this.texSize;\n            \
e2.activeTexture(e2.TEXTURE0 + this.constantTextureCount + \
this.argumentTextureCount), e2.bindTexture(e2.TEXTURE_2D, t2), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.REPEAT), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.REPEAT), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST);\n         \
   const n2 = this.getInternalFormat();\n            \"single\" === \
this.precision ? e2.texStorage2D(e2.TEXTURE_2D, 1, n2, r2[0], r2[1]) : \
e2.texImage2D(e2.TEXTURE_2D, 0, n2, r2[0], r2[1], 0, n2, e2.UNSIGNED_BYTE, \
null), e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, \
e2.TEXTURE_2D, t2, 0), this.texture = new this.TextureConstructor({ texture: \
t2, size: r2, dimensions: this.threadDim, output: this.output, context: \
this.context, internalFormat: this.getInternalFormat(), textureFormat: \
this.getTextureFormat(), kernel: this });\n          }\n          \
_setupSubOutputTextures() {\n            const e2 = this.context;\n           \
 if (this.mappedTextures) {\n              for (let t3 = 0; t3 < \
this.subKernels.length; t3++) e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0 + t3 + 1, e2.TEXTURE_2D, \
this.mappedTextures[t3].texture, 0);\n              return;\n            }\n  \
          const t2 = this.texSize;\n            this.drawBuffersMap = \
[e2.COLOR_ATTACHMENT0], this.mappedTextures = [];\n            for (let r2 = \
0; r2 < this.subKernels.length; r2++) {\n              const n2 = \
this.createTexture();\n              \
this.drawBuffersMap.push(e2.COLOR_ATTACHMENT0 + r2 + 1), \
e2.activeTexture(e2.TEXTURE0 + this.constantTextureCount + \
this.argumentTextureCount + r2), e2.bindTexture(e2.TEXTURE_2D, n2), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), \
e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST);\n         \
     const i2 = this.getInternalFormat();\n              \"single\" === \
this.precision ? e2.texStorage2D(e2.TEXTURE_2D, 1, i2, t2[0], t2[1]) : \
e2.texImage2D(e2.TEXTURE_2D, 0, e2.RGBA, t2[0], t2[1], 0, e2.RGBA, \
e2.UNSIGNED_BYTE, null), e2.framebufferTexture2D(e2.FRAMEBUFFER, \
e2.COLOR_ATTACHMENT0 + r2 + 1, e2.TEXTURE_2D, n2, 0), \
this.mappedTextures.push(new this.TextureConstructor({ texture: n2, size: t2, \
dimensions: this.threadDim, output: this.output, context: this.context, \
internalFormat: this.getInternalFormat(), textureFormat: \
this.getTextureFormat(), kernel: this }));\n            }\n          }\n      \
    _getHeaderString() {\n            return \"\";\n          }\n          \
_getTextureCoordinate() {\n            const e2 = this.subKernels, t2 = \
this.getVariablePrecisionString(this.texSize, this.tactic);\n            \
return null === e2 || e2.length < 1 ? `in ${t2} vec2 vTexCoord;\n` : `out \
${t2} vec2 vTexCoord;\n`;\n          }\n          _getMainArgumentsString(e2) \
{\n            const t2 = [], r2 = this.argumentNames;\n            for (let \
n2 = 0; n2 < r2.length; n2++) \
t2.push(this.kernelArguments[n2].getSource(e2[n2]));\n            return \
t2.join(\"\");\n          }\n          getKernelString() {\n            const \
e2 = [this.getKernelResultDeclaration()], t2 = this.subKernels;\n            \
if (null !== t2) switch (e2.push(\"layout(location = 0) out vec4 data0\"), \
this.returnType) {\n              case \"Number\":\n              case \
\"Float\":\n              case \"Integer\":\n                for (let r2 = 0; \
r2 < t2.length; r2++) {\n                  const n2 = t2[r2];\n               \
   e2.push(\"Integer\" === n2.returnType ? `int subKernelResult_${n2.name} = \
0` : `float subKernelResult_${n2.name} = 0.0`, `layout(location = ${r2 + 1}) \
out vec4 data${r2 + 1}`);\n                }\n                break;\n        \
      case \"Array(2)\":\n                for (let r2 = 0; r2 < t2.length; \
r2++) e2.push(`vec2 subKernelResult_${t2[r2].name}`, `layout(location = ${r2 \
+ 1}) out vec4 data${r2 + 1}`);\n                break;\n              case \
\"Array(3)\":\n                for (let r2 = 0; r2 < t2.length; r2++) \
e2.push(`vec3 subKernelResult_${t2[r2].name}`, `layout(location = ${r2 + 1}) \
out vec4 data${r2 + 1}`);\n                break;\n              case \
\"Array(4)\":\n                for (let r2 = 0; r2 < t2.length; r2++) \
e2.push(`vec4 subKernelResult_${t2[r2].name}`, `layout(location = ${r2 + 1}) \
out vec4 data${r2 + 1}`);\n            }\n            else e2.push(\"out vec4 \
data0\");\n            return a.linesToString(e2) + this.translatedSource;\n  \
        }\n          getMainResultGraphical() {\n            return \
a.linesToString([\"  threadId = indexTo3D(index, uOutputDim)\", \"  \
kernel()\", \"  data0 = actualColor\"]);\n          }\n          \
getMainResultPackedPixels() {\n            switch (this.returnType) {\n       \
       case \"LiteralInteger\":\n              case \"Number\":\n             \
 case \"Integer\":\n              case \"Float\":\n                return \
this.getMainResultKernelPackedPixels() + \
this.getMainResultSubKernelPackedPixels();\n              default:\n          \
      throw new Error(`packed output only usable with Numbers, \
\"${this.returnType}\" specified`);\n            }\n          }\n          \
getMainResultKernelPackedPixels() {\n            return a.linesToString([\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", `  data0 = \
${this.useLegacyEncoder ? \"legacyEncode32\" : \
\"encode32\"}(kernelResult)`]);\n          }\n          \
getMainResultSubKernelPackedPixels() {\n            const e2 = [];\n          \
  if (!this.subKernels) return \"\";\n            for (let t2 = 0; t2 < \
this.subKernels.length; t2++) {\n              \"Integer\" === \
this.subKernels[t2].returnType ? e2.push(`  data${t2 + 1} = \
${this.useLegacyEncoder ? \"legacyEncode32\" : \
\"encode32\"}(float(subKernelResult_${this.subKernels[t2].name}))`) : \
e2.push(`  data${t2 + 1} = ${this.useLegacyEncoder ? \"legacyEncode32\" : \
\"encode32\"}(subKernelResult_${this.subKernels[t2].name})`);\n            \
}\n            return a.linesToString(e2);\n          }\n          \
getMainResultKernelMemoryOptimizedFloats(e2, t2) {\n            e2.push(\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", `  data0.${t2} = \
kernelResult`);\n          }\n          \
getMainResultSubKernelMemoryOptimizedFloats(e2, t2) {\n            if \
(!this.subKernels) return e2;\n            for (let r2 = 0; r2 < \
this.subKernels.length; r2++) {\n              const n2 = \
this.subKernels[r2];\n              \"Integer\" === n2.returnType ? e2.push(` \
 data${r2 + 1}.${t2} = float(subKernelResult_${n2.name})`) : e2.push(`  \
data${r2 + 1}.${t2} = subKernelResult_${n2.name}`);\n            }\n          \
}\n          getMainResultKernelNumberTexture() {\n            return [\"  \
threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  data0[0] = \
kernelResult\"];\n          }\n          \
getMainResultSubKernelNumberTexture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) {\n              const r2 = \
this.subKernels[t2];\n              \"Integer\" === r2.returnType ? e2.push(` \
 data${t2 + 1}[0] = float(subKernelResult_${r2.name})`) : e2.push(`  data${t2 \
+ 1}[0] = subKernelResult_${r2.name}`);\n            }\n            return \
e2;\n          }\n          getMainResultKernelArray2Texture() {\n            \
return [\"  threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  \
data0[0] = kernelResult[0]\", \"  data0[1] = kernelResult[1]\"];\n          \
}\n          getMainResultSubKernelArray2Texture() {\n            const e2 = \
[];\n            if (!this.subKernels) return e2;\n            for (let t2 = \
0; t2 < this.subKernels.length; ++t2) {\n              const r2 = \
this.subKernels[t2];\n              e2.push(`  data${t2 + 1}[0] = \
subKernelResult_${r2.name}[0]`, `  data${t2 + 1}[1] = \
subKernelResult_${r2.name}[1]`);\n            }\n            return e2;\n     \
     }\n          getMainResultKernelArray3Texture() {\n            return \
[\"  threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  data0[0] \
= kernelResult[0]\", \"  data0[1] = kernelResult[1]\", \"  data0[2] = \
kernelResult[2]\"];\n          }\n          \
getMainResultSubKernelArray3Texture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) {\n              const r2 = \
this.subKernels[t2];\n              e2.push(`  data${t2 + 1}[0] = \
subKernelResult_${r2.name}[0]`, `  data${t2 + 1}[1] = \
subKernelResult_${r2.name}[1]`, `  data${t2 + 1}[2] = \
subKernelResult_${r2.name}[2]`);\n            }\n            return e2;\n     \
     }\n          getMainResultKernelArray4Texture() {\n            return \
[\"  threadId = indexTo3D(index, uOutputDim)\", \"  kernel()\", \"  data0 = \
kernelResult\"];\n          }\n          \
getMainResultSubKernelArray4Texture() {\n            const e2 = [];\n         \
   if (!this.subKernels) return e2;\n            for (let t2 = 0; t2 < \
this.subKernels.length; ++t2) e2.push(`  data${t2 + 1} = \
subKernelResult_${this.subKernels[t2].name}`);\n            return e2;\n      \
    }\n          destroyExtensions() {\n            \
this.extensions.EXT_color_buffer_float = null, \
this.extensions.OES_texture_float_linear = null;\n          }\n          \
toJSON() {\n            const e2 = super.toJSON();\n            return \
e2.functionNodes = s.fromKernel(this, i).toJSON(), e2.settings.threadDim = \
this.threadDim, e2;\n          }\n        } };\n      }, { \"../../utils\": \
114, \"../function-builder\": 9, \"../web-gl/kernel\": 70, \
\"./fragment-shader\": 72, \"./function-node\": 73, \"./kernel-value-maps\": \
74, \"./vertex-shader\": 106 }], 106: [function(e, t, r) {\n        t.exports \
= { vertexShader: \"#version 300 \
es\\n__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_\
2D_TACTIC_DECLARATION__;\\n\\nin vec2 aPos;\\nin vec2 aTexCoord;\\n\\nout \
vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position \
= vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = \
aTexCoord;\\n}\" };\n      }, {}], 107: [function(e, t, r) {\n        const n \
= e(\"./index\"), i = n.GPU;\n        for (const e2 in n) \
n.hasOwnProperty(e2) && \"GPU\" !== e2 && (i[e2] = n[e2]);\n        function \
s(e2) {\n          e2.GPU || Object.defineProperty(e2, \"GPU\", { get: () => \
i });\n        }\n        \"undefined\" != typeof window && s(window), \
\"undefined\" != typeof self && s(self), t.exports = n;\n      }, { \
\"./index\": 109 }], 108: [function(e, t, r) {\n        const { gpuMock: n } \
= e(\"gpu-mock.js\"), { utils: i } = e(\"./utils\"), { Kernel: s } = \
e(\"./backend/kernel\"), { CPUKernel: a } = e(\"./backend/cpu/kernel\"), { \
HeadlessGLKernel: o } = e(\"./backend/headless-gl/kernel\"), { WebGL2Kernel: \
u } = e(\"./backend/web-gl2/kernel\"), { WebGLKernel: l } = \
e(\"./backend/web-gl/kernel\"), { kernelRunShortcut: h } = \
e(\"./kernel-run-shortcut\"), c = [o, u, l], p = [\"gpu\", \"cpu\"], d = { \
headlessgl: o, webgl2: u, webgl: l };\n        let m = true;\n        \
function f(e2) {\n          if (!e2) return {};\n          const t2 = \
Object.assign({}, e2);\n          return e2.hasOwnProperty(\"floatOutput\") \
&& (i.warnDeprecated(\"setting\", \"floatOutput\", \"precision\"), \
t2.precision = e2.floatOutput ? \"single\" : \"unsigned\"), \
e2.hasOwnProperty(\"outputToTexture\") && (i.warnDeprecated(\"setting\", \
\"outputToTexture\", \"pipeline\"), t2.pipeline = \
Boolean(e2.outputToTexture)), e2.hasOwnProperty(\"outputImmutable\") && \
(i.warnDeprecated(\"setting\", \"outputImmutable\", \"immutable\"), \
t2.immutable = Boolean(e2.outputImmutable)), \
e2.hasOwnProperty(\"floatTextures\") && (i.warnDeprecated(\"setting\", \
\"floatTextures\", \"optimizeFloatMemory\"), t2.optimizeFloatMemory = \
Boolean(e2.floatTextures)), t2;\n        }\n        t.exports = { GPU: class \
{\n          static disableValidation() {\n            m = false;\n          \
}\n          static enableValidation() {\n            m = true;\n          \
}\n          static get isGPUSupported() {\n            return c.some((e2) => \
e2.isSupported);\n          }\n          static get isKernelMapSupported() \
{\n            return c.some((e2) => e2.isSupported && \
e2.features.kernelMap);\n          }\n          static get \
isOffscreenCanvasSupported() {\n            return \"undefined\" != typeof \
Worker && \"undefined\" != typeof OffscreenCanvas || \"undefined\" != typeof \
importScripts;\n          }\n          static get isWebGLSupported() {\n      \
      return l.isSupported;\n          }\n          static get \
isWebGL2Supported() {\n            return u.isSupported;\n          }\n       \
   static get isHeadlessGLSupported() {\n            return o.isSupported;\n  \
        }\n          static get isCanvasSupported() {\n            return \
\"undefined\" != typeof HTMLCanvasElement;\n          }\n          static get \
isGPUHTMLImageArraySupported() {\n            return u.isSupported;\n         \
 }\n          static get isSinglePrecisionSupported() {\n            return \
c.some((e2) => e2.isSupported && e2.features.isFloatRead && \
e2.features.isTextureFloat);\n          }\n          constructor(e2) {\n      \
      if (e2 = e2 || {}, this.canvas = e2.canvas || null, this.context = \
e2.context || null, this.mode = e2.mode, this.Kernel = null, this.kernels = \
[], this.functions = [], this.nativeFunctions = [], this.injectedNative = \
null, \"dev\" !== this.mode) {\n              if (this.chooseKernel(), \
e2.functions) for (let t2 = 0; t2 < e2.functions.length; t2++) \
this.addFunction(e2.functions[t2]);\n              if (e2.nativeFunctions) \
for (const t2 in e2.nativeFunctions) {\n                if \
(!e2.nativeFunctions.hasOwnProperty(t2)) continue;\n                const r2 \
= e2.nativeFunctions[t2], { name: n2, source: i2 } = r2;\n                \
this.addNativeFunction(n2, i2, r2);\n              }\n            }\n         \
 }\n          chooseKernel() {\n            if (this.Kernel) return;\n        \
    let e2 = null;\n            if (this.context) {\n              for (let \
t2 = 0; t2 < c.length; t2++) {\n                const r2 = c[t2];\n           \
     if (r2.isContextMatch(this.context)) {\n                  if \
(!r2.isSupported) throw new Error(`Kernel type ${r2.name} not supported`);\n  \
                e2 = r2;\n                  break;\n                }\n       \
       }\n              if (null === e2) throw new Error(\"unknown \
Context\");\n            } else if (this.mode) {\n              if (this.mode \
in d) m && !d[this.mode].isSupported || (e2 = d[this.mode]);\n              \
else if (\"gpu\" === this.mode) {\n                for (let t2 = 0; t2 < \
c.length; t2++) if (c[t2].isSupported) {\n                  e2 = c[t2];\n     \
             break;\n                }\n              } else \"cpu\" === \
this.mode && (e2 = a);\n              if (!e2) throw new Error(`A requested \
mode of \"${this.mode}\" and is not supported`);\n            } else {\n      \
        for (let t2 = 0; t2 < c.length; t2++) if (c[t2].isSupported) {\n      \
          e2 = c[t2];\n                break;\n              }\n              \
e2 || (e2 = a);\n            }\n            this.mode || (this.mode = \
e2.mode), this.Kernel = e2;\n          }\n          createKernel(e2, t2) {\n  \
          if (void 0 === e2) throw new Error(\"Missing source parameter\");\n \
           if (\"object\" != typeof e2 && !i.isFunction(e2) && \"string\" != \
typeof e2) throw new Error(\"source parameter not a function\");\n            \
const r2 = this.kernels;\n            if (\"dev\" === this.mode) {\n          \
    const i2 = n(e2, f(t2));\n              return r2.push(i2), i2;\n         \
   }\n            e2 = \"function\" == typeof e2 ? e2.toString() : e2;\n      \
      const s2 = {}, o2 = f(t2) || {};\n            function u2(t3) {\n       \
       console.warn(\"Falling back to CPU\");\n              const r3 = new \
a(e2, { argumentTypes: p2.argumentTypes, constantTypes: p2.constantTypes, \
graphical: p2.graphical, loopMaxIterations: p2.loopMaxIterations, constants: \
p2.constants, dynamicOutput: p2.dynamicOutput, dynamicArgument: \
p2.dynamicArguments, output: p2.output, precision: p2.precision, pipeline: \
p2.pipeline, immutable: p2.immutable, optimizeFloatMemory: \
p2.optimizeFloatMemory, fixIntegerDivisionAccuracy: \
p2.fixIntegerDivisionAccuracy, functions: p2.functions, nativeFunctions: \
p2.nativeFunctions, injectedNative: p2.injectedNative, subKernels: \
p2.subKernels, strictIntegers: p2.strictIntegers, debug: p2.debug });\n       \
       r3.build.apply(r3, t3);\n              const n2 = r3.run.apply(r3, \
t3);\n              return p2.replaceKernel(r3), n2;\n            }\n         \
   t2 && \"object\" == typeof t2.argumentTypes && (o2.argumentTypes = \
Object.keys(t2.argumentTypes).map((e3) => t2.argumentTypes[e3]));\n           \
 const l2 = Object.assign({ context: this.context, canvas: this.canvas, \
functions: this.functions, nativeFunctions: this.nativeFunctions, \
injectedNative: this.injectedNative, gpu: this, validate: m, \
onRequestFallback: u2, onRequestSwitchKernel: function t3(n2, i2, a2) {\n     \
         a2.debug && console.warn(\"Switching kernels\");\n              let \
o3 = null;\n              if (a2.signature && !s2[a2.signature] && \
(s2[a2.signature] = a2), a2.dynamicOutput) for (let e3 = n2.length - 1; e3 >= \
0; e3--) {\n                const t4 = n2[e3];\n                \
\"outputPrecisionMismatch\" === t4.type && (o3 = t4.needed);\n              \
}\n              const l3 = a2.constructor, h2 = l3.getArgumentTypes(a2, i2), \
c3 = l3.getSignature(a2, h2), d2 = s2[c3];\n              if (d2) return \
d2.onActivate(a2), d2;\n              const f2 = s2[c3] = new l3(e2, { \
argumentTypes: h2, constantTypes: a2.constantTypes, graphical: a2.graphical, \
loopMaxIterations: a2.loopMaxIterations, constants: a2.constants, \
dynamicOutput: a2.dynamicOutput, dynamicArgument: a2.dynamicArguments, \
context: a2.context, canvas: a2.canvas, output: o3 || a2.output, precision: \
a2.precision, pipeline: a2.pipeline, immutable: a2.immutable, \
optimizeFloatMemory: a2.optimizeFloatMemory, fixIntegerDivisionAccuracy: \
a2.fixIntegerDivisionAccuracy, functions: a2.functions, nativeFunctions: \
a2.nativeFunctions, injectedNative: a2.injectedNative, subKernels: \
a2.subKernels, strictIntegers: a2.strictIntegers, debug: a2.debug, gpu: \
a2.gpu, validate: m, returnType: a2.returnType, tactic: a2.tactic, \
onRequestFallback: u2, onRequestSwitchKernel: t3, texture: a2.texture, \
mappedTextures: a2.mappedTextures, drawBuffersMap: a2.drawBuffersMap });\n    \
          return f2.build.apply(f2, i2), p2.replaceKernel(f2), r2.push(f2), \
f2;\n            } }, o2), c2 = new this.Kernel(e2, l2), p2 = h(c2);\n        \
    return this.canvas || (this.canvas = c2.canvas), this.context || \
(this.context = c2.context), r2.push(c2), p2;\n          }\n          \
createKernelMap() {\n            let e2, t2;\n            const r2 = typeof \
arguments[arguments.length - 2];\n            if (\"function\" === r2 || \
\"string\" === r2 ? (e2 = arguments[arguments.length - 2], t2 = \
arguments[arguments.length - 1]) : e2 = arguments[arguments.length - 1], \
\"dev\" !== this.mode && (!this.Kernel.isSupported || \
!this.Kernel.features.kernelMap) && this.mode && p.indexOf(this.mode) < 0) \
throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n          \
  const n2 = f(t2);\n            if (t2 && \"object\" == typeof \
t2.argumentTypes && (n2.argumentTypes = \
Object.keys(t2.argumentTypes).map((e3) => t2.argumentTypes[e3])), \
Array.isArray(arguments[0])) {\n              n2.subKernels = [];\n           \
   const e3 = arguments[0];\n              for (let t3 = 0; t3 < e3.length; \
t3++) {\n                const r3 = e3[t3].toString(), s2 = \
i.getFunctionNameFromString(r3);\n                n2.subKernels.push({ name: \
s2, source: r3, property: t3 });\n              }\n            } else {\n     \
         n2.subKernels = [];\n              const e3 = arguments[0];\n        \
      for (let t3 in e3) {\n                if (!e3.hasOwnProperty(t3)) \
continue;\n                const r3 = e3[t3].toString(), s2 = \
i.getFunctionNameFromString(r3);\n                n2.subKernels.push({ name: \
s2 || t3, source: r3, property: t3 });\n              }\n            }\n      \
      return this.createKernel(e2, n2);\n          }\n          \
combineKernels() {\n            const e2 = arguments[arguments.length - 1];\n \
           if (\"cpu\" === arguments[0].kernel.constructor.mode) return e2;\n \
           const t2 = arguments[0].canvas, r2 = arguments[0].context, n2 = \
arguments.length - 1;\n            for (let e3 = 0; e3 < n2; e3++) \
arguments[e3].setCanvas(t2).setContext(r2).setPipeline(true);\n            \
return function() {\n              const t3 = e2.apply(this, arguments);\n    \
          return t3.toArray ? t3.toArray() : t3;\n            };\n          \
}\n          setFunctions(e2) {\n            return this.functions = e2, \
this;\n          }\n          setNativeFunctions(e2) {\n            return \
this.nativeFunctions = e2, this;\n          }\n          addFunction(e2, t2) \
{\n            return this.functions.push({ source: e2, settings: t2 }), \
this;\n          }\n          addNativeFunction(e2, t2, r2) {\n            if \
(this.kernels.length > 0) throw new Error('Cannot call \"addNativeFunction\" \
after \"createKernels\" has been called.');\n            return \
this.nativeFunctions.push(Object.assign({ name: e2, source: t2 }, r2)), \
this;\n          }\n          injectNative(e2) {\n            return \
this.injectedNative = e2, this;\n          }\n          destroy() {\n         \
   return new Promise((e2, t2) => {\n              this.kernels || e2(), \
setTimeout(() => {\n                try {\n                  for (let e4 = 0; \
e4 < this.kernels.length; e4++) this.kernels[e4].destroy(true);\n             \
     let e3 = this.kernels[0];\n                  e3 && (e3.kernel && (e3 = \
e3.kernel), e3.constructor.destroyContext && \
e3.constructor.destroyContext(this.context));\n                } catch (e3) \
{\n                  t2(e3);\n                }\n                e2();\n      \
        }, 0);\n            });\n          }\n        }, kernelOrder: c, \
kernelTypes: p };\n      }, { \"./backend/cpu/kernel\": 8, \
\"./backend/headless-gl/kernel\": 34, \"./backend/kernel\": 36, \
\"./backend/web-gl/kernel\": 70, \"./backend/web-gl2/kernel\": 105, \
\"./kernel-run-shortcut\": 111, \"./utils\": 114, \"gpu-mock.js\": 4 }], 109: \
[function(e, t, r) {\n        const { GPU: n } = e(\"./gpu\"), { alias: i } = \
e(\"./alias\"), { utils: s } = e(\"./utils\"), { Input: a, input: o } = \
e(\"./input\"), { Texture: u } = e(\"./texture\"), { FunctionBuilder: l } = \
e(\"./backend/function-builder\"), { FunctionNode: h } = \
e(\"./backend/function-node\"), { CPUFunctionNode: c } = \
e(\"./backend/cpu/function-node\"), { CPUKernel: p } = \
e(\"./backend/cpu/kernel\"), { HeadlessGLKernel: d } = \
e(\"./backend/headless-gl/kernel\"), { WebGLFunctionNode: m } = \
e(\"./backend/web-gl/function-node\"), { WebGLKernel: f } = \
e(\"./backend/web-gl/kernel\"), { kernelValueMaps: g } = \
e(\"./backend/web-gl/kernel-value-maps\"), { WebGL2FunctionNode: x } = \
e(\"./backend/web-gl2/function-node\"), { WebGL2Kernel: y } = \
e(\"./backend/web-gl2/kernel\"), { kernelValueMaps: b } = \
e(\"./backend/web-gl2/kernel-value-maps\"), { GLKernel: T } = \
e(\"./backend/gl/kernel\"), { Kernel: v } = e(\"./backend/kernel\"), { \
FunctionTracer: S } = e(\"./backend/function-tracer\"), A = \
e(\"./plugins/math-random-uniformly-distributed\");\n        t.exports = { \
alias: i, CPUFunctionNode: c, CPUKernel: p, GPU: n, FunctionBuilder: l, \
FunctionNode: h, HeadlessGLKernel: d, Input: a, input: o, Texture: u, utils: \
s, WebGL2FunctionNode: x, WebGL2Kernel: y, webGL2KernelValueMaps: b, \
WebGLFunctionNode: m, WebGLKernel: f, webGLKernelValueMaps: g, GLKernel: T, \
Kernel: v, FunctionTracer: S, plugins: { mathRandom: A } };\n      }, { \
\"./alias\": 5, \"./backend/cpu/function-node\": 6, \"./backend/cpu/kernel\": \
8, \"./backend/function-builder\": 9, \"./backend/function-node\": 10, \
\"./backend/function-tracer\": 11, \"./backend/gl/kernel\": 13, \
\"./backend/headless-gl/kernel\": 34, \"./backend/kernel\": 36, \
\"./backend/web-gl/function-node\": 38, \"./backend/web-gl/kernel\": 70, \
\"./backend/web-gl/kernel-value-maps\": 39, \
\"./backend/web-gl2/function-node\": 73, \"./backend/web-gl2/kernel\": 105, \
\"./backend/web-gl2/kernel-value-maps\": 74, \"./gpu\": 108, \"./input\": \
110, \"./plugins/math-random-uniformly-distributed\": 112, \"./texture\": \
113, \"./utils\": 114 }], 110: [function(e, t, r) {\n        class n {\n      \
    constructor(e2, t2) {\n            this.value = e2, Array.isArray(t2) ? \
this.size = t2 : (this.size = new Int32Array(3), t2.z ? this.size = new \
Int32Array([t2.x, t2.y, t2.z]) : t2.y ? this.size = new Int32Array([t2.x, \
t2.y]) : this.size = new Int32Array([t2.x]));\n            const [r2, n2, i] \
= this.size;\n            if (i) {\n              if (this.value.length !== \
r2 * n2 * i) throw new Error(`Input size ${this.value.length} does not match \
${r2} * ${n2} * ${i} = ${n2 * r2 * i}`);\n            } else if (n2) {\n      \
        if (this.value.length !== r2 * n2) throw new Error(`Input size \
${this.value.length} does not match ${r2} * ${n2} = ${n2 * r2}`);\n           \
 } else if (this.value.length !== r2) throw new Error(`Input size \
${this.value.length} does not match ${r2}`);\n          }\n          \
toArray() {\n            const { utils: t2 } = e(\"./utils\"), [r2, n2, i] = \
this.size;\n            return i ? \
t2.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new \
Float32Array(this.value), r2, n2, i) : n2 ? \
t2.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new \
Float32Array(this.value), r2, n2) : this.value;\n          }\n        }\n     \
   t.exports = { Input: n, input: function(e2, t2) {\n          return new \
n(e2, t2);\n        } };\n      }, { \"./utils\": 114 }], 111: [function(e, \
t, r) {\n        const { utils: n } = e(\"./utils\");\n        function i(e2, \
t2) {\n          if (t2.kernel) return void (t2.kernel = e2);\n          \
const r2 = n.allPropertiesOf(e2);\n          for (let n2 = 0; n2 < r2.length; \
n2++) {\n            const i2 = r2[n2];\n            \"_\" === i2[0] && \"_\" \
=== i2[1] || (\"function\" == typeof e2[i2] ? \"add\" === i2.substring(0, 3) \
|| \"set\" === i2.substring(0, 3) ? t2[i2] = function() {\n              \
return t2.kernel[i2].apply(t2.kernel, arguments), t2;\n            } : t2[i2] \
= function() {\n              return t2.kernel[i2].apply(t2.kernel, \
arguments);\n            } : (t2.__defineGetter__(i2, () => t2.kernel[i2]), \
t2.__defineSetter__(i2, (e3) => {\n              t2.kernel[i2] = e3;\n        \
    })));\n          }\n          t2.kernel = e2;\n        }\n        \
t.exports = { kernelRunShortcut: function(e2) {\n          let t2 = \
function() {\n            return e2.build.apply(e2, arguments), t2 = \
function() {\n              let t3 = e2.run.apply(e2, arguments);\n           \
   if (e2.switchingKernels) {\n                const n2 = \
e2.resetSwitchingKernels(), i2 = e2.onRequestSwitchKernel(n2, arguments, \
e2);\n                r2.kernel = e2 = i2, t3 = i2.run.apply(i2, \
arguments);\n              }\n              return e2.renderKernels ? \
e2.renderKernels() : e2.renderOutput ? e2.renderOutput() : t3;\n            \
}, t2.apply(e2, arguments);\n          };\n          const r2 = function() \
{\n            return t2.apply(e2, arguments);\n          };\n          \
return r2.exec = function() {\n            return new Promise((e3, r3) => {\n \
             try {\n                e3(t2.apply(this, arguments));\n          \
    } catch (e4) {\n                r3(e4);\n              }\n            \
});\n          }, r2.replaceKernel = function(t3) {\n            i(e2 = t3, \
r2);\n          }, i(e2, r2), r2;\n        } };\n      }, { \"./utils\": 114 \
}], 112: [function(e, t, r) {\n        const n = { name: \
\"math-random-uniformly-distributed\", onBeforeRun: (e2) => {\n          \
e2.setUniform1f(\"randomSeed1\", Math.random()), \
e2.setUniform1f(\"randomSeed2\", Math.random());\n        }, functionMatch: \
\"Math.random()\", functionReplace: \"nrand(vTexCoord)\", functionReturnType: \
\"Number\", source: \"// https://www.shadertoy.com/view/4t2SDh\\n//note: \
uniformly distributed, normalized rand, [0,1]\\nhighp float randomSeedShift = \
1.0;\\nhighp float slide = 1.0;\\nuniform highp float randomSeed1;\\nuniform \
highp float randomSeed2;\\n\\nhighp float nrand(highp vec2 n) {\\n  highp \
float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, \
randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\\n  \
randomSeedShift = result;\\n  if (randomSeedShift > 0.5) {\\n    slide += \
0.00009; \\n  } else {\\n    slide += 0.0009;\\n  }\\n  return result;\\n}\" \
};\n        t.exports = n;\n      }, {}], 113: [function(e, t, r) {\n        \
t.exports = { Texture: class {\n          constructor(e2) {\n            \
const { texture: t2, size: r2, dimensions: n, output: i, context: s, type: a \
= \"NumberTexture\", kernel: o, internalFormat: u, textureFormat: l } = e2;\n \
           if (!i) throw new Error('settings property \"output\" \
required.');\n            if (!s) throw new Error('settings property \
\"context\" required.');\n            if (!t2) throw new Error('settings \
property \"texture\" required.');\n            if (!o) throw new \
Error('settings property \"kernel\" required.');\n            this.texture = \
t2, t2._refs ? t2._refs++ : t2._refs = 1, this.size = r2, this.dimensions = \
n, this.output = i, this.context = s, this.kernel = o, this.type = a, \
this._deleted = false, this.internalFormat = u, this.textureFormat = l;\n     \
     }\n          toArray() {\n            throw new Error(`Not implemented \
on ${this.constructor.name}`);\n          }\n          clone() {\n            \
throw new Error(`Not implemented on ${this.constructor.name}`);\n          \
}\n          delete() {\n            throw new Error(`Not implemented on \
${this.constructor.name}`);\n          }\n          clear() {\n            \
throw new Error(`Not implemented on ${this.constructor.name}`);\n          \
}\n        } };\n      }, {}], 114: [function(e, t, r) {\n        const n = \
e(\"acorn\"), { Input: i } = e(\"./input\"), { Texture: s } = \
e(\"./texture\"), a = /function ([^(]*)/, o = \
/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm, u = /([^\\s,]+)/g, l = { \
systemEndianness: () => d, getSystemEndianness() {\n          const e2 = new \
ArrayBuffer(4), t2 = new Uint32Array(e2), r2 = new Uint8Array(e2);\n          \
if (t2[0] = 3735928559, 239 === r2[0]) return \"LE\";\n          if (222 === \
r2[0]) return \"BE\";\n          throw new Error(\"unknown endianness\");\n   \
     }, isFunction: (e2) => \"function\" == typeof e2, isFunctionString: (e2) \
=> \"string\" == typeof e2 && \"function\" === e2.slice(0, 8).toLowerCase(), \
getFunctionNameFromString(e2) {\n          const t2 = a.exec(e2);\n          \
return t2 && 0 !== t2.length ? t2[1].trim() : null;\n        }, \
getFunctionBodyFromString: (e2) => e2.substring(e2.indexOf(\"{\") + 1, \
e2.lastIndexOf(\"}\")), getArgumentNamesFromString(e2) {\n          const t2 \
= e2.replace(o, \"\");\n          let r2 = t2.slice(t2.indexOf(\"(\") + 1, \
t2.indexOf(\")\")).match(u);\n          return null === r2 && (r2 = []), \
r2;\n        }, clone(e2) {\n          if (null === e2 || \"object\" != \
typeof e2 || e2.hasOwnProperty(\"isActiveClone\")) return e2;\n          \
const t2 = e2.constructor();\n          for (let r2 in e2) \
Object.prototype.hasOwnProperty.call(e2, r2) && (e2.isActiveClone = null, \
t2[r2] = l.clone(e2[r2]), delete e2.isActiveClone);\n          return t2;\n   \
     }, isArray: (e2) => !isNaN(e2.length), getVariableType(e2, t2) {\n       \
   if (l.isArray(e2)) return e2.length > 0 && \"IMG\" === e2[0].nodeName ? \
\"HTMLImageArray\" : \"Array\";\n          switch (e2.constructor) {\n        \
    case Boolean:\n              return \"Boolean\";\n            case \
Number:\n              return t2 && Number.isInteger(e2) ? \"Integer\" : \
\"Float\";\n            case s:\n              return e2.type;\n            \
case i:\n              return \"Input\";\n          }\n          if \
(\"nodeName\" in e2) switch (e2.nodeName) {\n            case \"IMG\":\n      \
      case \"CANVAS\":\n              return \"HTMLImage\";\n            case \
\"VIDEO\":\n              return \"HTMLVideo\";\n          }\n          else \
{\n            if (e2.hasOwnProperty(\"type\")) return e2.type;\n            \
if (\"undefined\" != typeof OffscreenCanvas && e2 instanceof OffscreenCanvas) \
return \"OffscreenCanvas\";\n            if (\"undefined\" != typeof \
ImageBitmap && e2 instanceof ImageBitmap) return \"ImageBitmap\";\n           \
 if (\"undefined\" != typeof ImageData && e2 instanceof ImageData) return \
\"ImageData\";\n          }\n          return \"Unknown\";\n        }, \
getKernelTextureSize(e2, t2) {\n          let [r2, n2, i2] = t2, s2 = (r2 || \
1) * (n2 || 1) * (i2 || 1);\n          return e2.optimizeFloatMemory && \
\"single\" === e2.precision && (r2 = s2 = Math.ceil(s2 / 4)), n2 > 1 && r2 * \
n2 === s2 ? new Int32Array([r2, n2]) : l.closestSquareDimensions(s2);\n       \
 }, closestSquareDimensions(e2) {\n          const t2 = Math.sqrt(e2);\n      \
    let r2 = Math.ceil(t2), n2 = Math.floor(t2);\n          for (; r2 * n2 < \
e2; ) r2--, n2 = Math.ceil(e2 / r2);\n          return new Int32Array([n2, \
Math.ceil(e2 / n2)]);\n        }, getMemoryOptimizedFloatTextureSize(e2, t2) \
{\n          const r2 = l.roundTo((e2[0] || 1) * (e2[1] || 1) * (e2[2] || 1) \
* (e2[3] || 1), 4) / t2;\n          return l.closestSquareDimensions(r2);\n   \
     }, getMemoryOptimizedPackedTextureSize(e2, t2) {\n          const [r2, \
n2, i2] = e2, s2 = l.roundTo((r2 || 1) * (n2 || 1) * (i2 || 1), 4) / (4 / \
t2);\n          return l.closestSquareDimensions(s2);\n        }, roundTo: \
(e2, t2) => Math.floor((e2 + t2 - 1) / t2) * t2, getDimensions(e2, t2) {\n    \
      let r2;\n          if (l.isArray(e2)) {\n            const t3 = [];\n   \
         let n2 = e2;\n            for (; l.isArray(n2); ) \
t3.push(n2.length), n2 = n2[0];\n            r2 = t3.reverse();\n          } \
else if (e2 instanceof s) r2 = e2.output;\n          else {\n            if \
(!(e2 instanceof i)) throw new Error(`Unknown dimensions of ${e2}`);\n        \
    r2 = e2.size;\n          }\n          if (t2) for (r2 = Array.from(r2); \
r2.length < 3; ) r2.push(1);\n          return new Int32Array(r2);\n        \
}, flatten2dArrayTo(e2, t2) {\n          let r2 = 0;\n          for (let n2 = \
0; n2 < e2.length; n2++) t2.set(e2[n2], r2), r2 += e2[n2].length;\n        }, \
flatten3dArrayTo(e2, t2) {\n          let r2 = 0;\n          for (let n2 = 0; \
n2 < e2.length; n2++) for (let i2 = 0; i2 < e2[n2].length; i2++) \
t2.set(e2[n2][i2], r2), r2 += e2[n2][i2].length;\n        }, \
flatten4dArrayTo(e2, t2) {\n          let r2 = 0;\n          for (let n2 = 0; \
n2 < e2.length; n2++) for (let i2 = 0; i2 < e2[n2].length; i2++) for (let s2 \
= 0; s2 < e2[n2][i2].length; s2++) t2.set(e2[n2][i2][s2], r2), r2 += \
e2[n2][i2][s2].length;\n        }, flattenTo(e2, t2) {\n          \
l.isArray(e2[0]) ? l.isArray(e2[0][0]) ? l.isArray(e2[0][0][0]) ? \
l.flatten4dArrayTo(e2, t2) : l.flatten3dArrayTo(e2, t2) : \
l.flatten2dArrayTo(e2, t2) : t2.set(e2);\n        }, splitArray(e2, t2) {\n   \
       const r2 = [];\n          for (let n2 = 0; n2 < e2.length; n2 += t2) \
r2.push(new e2.constructor(e2.buffer, 4 * n2 + e2.byteOffset, t2));\n         \
 return r2;\n        }, getAstString(e2, t2) {\n          const r2 = \
Array.isArray(e2) ? e2 : e2.split(/\\r?\\n/g), n2 = t2.loc.start, i2 = \
t2.loc.end, s2 = [];\n          if (n2.line === i2.line) s2.push(r2[n2.line - \
1].substring(n2.column, i2.column));\n          else {\n            \
s2.push(r2[n2.line - 1].slice(n2.column));\n            for (let e3 = \
n2.line; e3 < i2.line; e3++) s2.push(r2[e3]);\n            s2.push(r2[i2.line \
- 1].slice(0, i2.column));\n          }\n          return s2.join(\"\\n\");\n \
       }, allPropertiesOf(e2) {\n          const t2 = [];\n          do {\n   \
         t2.push.apply(t2, Object.getOwnPropertyNames(e2));\n          } \
while (e2 = Object.getPrototypeOf(e2));\n          return t2;\n        }, \
linesToString: (e2) => e2.length > 0 ? e2.join(\";\\n\") + \";\\n\" : \
\"\\n\", warnDeprecated(e2, t2, r2) {\n          r2 ? console.warn(`You are \
using a deprecated ${e2} \"${t2}\". It has been replaced with \"${r2}\". \
Fixing, but please upgrade as it will soon be removed.`) : console.warn(`You \
are using a deprecated ${e2} \"${t2}\". It has been removed. Fixing, but \
please upgrade as it will soon be removed.`);\n        }, flipPixels: (e2, \
t2, r2) => {\n          const n2 = r2 / 2 | 0, i2 = 4 * t2, s2 = new \
Uint8ClampedArray(4 * t2), a2 = e2.slice(0);\n          for (let e3 = 0; e3 < \
n2; ++e3) {\n            const t3 = e3 * i2, n3 = (r2 - e3 - 1) * i2;\n       \
     s2.set(a2.subarray(t3, t3 + i2)), a2.copyWithin(t3, n3, n3 + i2), \
a2.set(s2, n3);\n          }\n          return a2;\n        }, \
erectPackedFloat: (e2, t2) => e2.subarray(0, t2), erect2DPackedFloat: (e2, \
t2, r2) => {\n          const n2 = new Array(r2);\n          for (let i2 = 0; \
i2 < r2; i2++) {\n            const r3 = i2 * t2, s2 = r3 + t2;\n            \
n2[i2] = e2.subarray(r3, s2);\n          }\n          return n2;\n        }, \
erect3DPackedFloat: (e2, t2, r2, n2) => {\n          const i2 = new \
Array(n2);\n          for (let s2 = 0; s2 < n2; s2++) {\n            const n3 \
= new Array(r2);\n            for (let i3 = 0; i3 < r2; i3++) {\n             \
 const a2 = s2 * r2 * t2 + i3 * t2, o2 = a2 + t2;\n              n3[i3] = \
e2.subarray(a2, o2);\n            }\n            i2[s2] = n3;\n          }\n  \
        return i2;\n        }, erectMemoryOptimizedFloat: (e2, t2) => \
e2.subarray(0, t2), erectMemoryOptimized2DFloat: (e2, t2, r2) => {\n          \
const n2 = new Array(r2);\n          for (let i2 = 0; i2 < r2; i2++) {\n      \
      const r3 = i2 * t2;\n            n2[i2] = e2.subarray(r3, r3 + t2);\n   \
       }\n          return n2;\n        }, erectMemoryOptimized3DFloat: (e2, \
t2, r2, n2) => {\n          const i2 = new Array(n2);\n          for (let s2 \
= 0; s2 < n2; s2++) {\n            const n3 = new Array(r2);\n            for \
(let i3 = 0; i3 < r2; i3++) {\n              const a2 = s2 * r2 * t2 + i3 * \
t2;\n              n3[i3] = e2.subarray(a2, a2 + t2);\n            }\n        \
    i2[s2] = n3;\n          }\n          return i2;\n        }, erectFloat: \
(e2, t2) => {\n          const r2 = new Float32Array(t2);\n          let n2 = \
0;\n          for (let i2 = 0; i2 < t2; i2++) r2[i2] = e2[n2], n2 += 4;\n     \
     return r2;\n        }, erect2DFloat: (e2, t2, r2) => {\n          const \
n2 = new Array(r2);\n          let i2 = 0;\n          for (let s2 = 0; s2 < \
r2; s2++) {\n            const r3 = new Float32Array(t2);\n            for \
(let n3 = 0; n3 < t2; n3++) r3[n3] = e2[i2], i2 += 4;\n            n2[s2] = \
r3;\n          }\n          return n2;\n        }, erect3DFloat: (e2, t2, r2, \
n2) => {\n          const i2 = new Array(n2);\n          let s2 = 0;\n        \
  for (let a2 = 0; a2 < n2; a2++) {\n            const n3 = new Array(r2);\n  \
          for (let i3 = 0; i3 < r2; i3++) {\n              const r3 = new \
Float32Array(t2);\n              for (let n4 = 0; n4 < t2; n4++) r3[n4] = \
e2[s2], s2 += 4;\n              n3[i3] = r3;\n            }\n            \
i2[a2] = n3;\n          }\n          return i2;\n        }, erectArray2: (e2, \
t2) => {\n          const r2 = new Array(t2), n2 = 4 * t2;\n          let i2 \
= 0;\n          for (let t3 = 0; t3 < n2; t3 += 4) r2[i2++] = e2.subarray(t3, \
t3 + 2);\n          return r2;\n        }, erect2DArray2: (e2, t2, r2) => {\n \
         const n2 = new Array(r2), i2 = 4 * t2;\n          for (let s2 = 0; \
s2 < r2; s2++) {\n            const r3 = new Array(t2), a2 = s2 * i2;\n       \
     let o2 = 0;\n            for (let t3 = 0; t3 < i2; t3 += 4) r3[o2++] = \
e2.subarray(t3 + a2, t3 + a2 + 2);\n            n2[s2] = r3;\n          }\n   \
       return n2;\n        }, erect3DArray2: (e2, t2, r2, n2) => {\n          \
const i2 = 4 * t2, s2 = new Array(n2);\n          for (let a2 = 0; a2 < n2; \
a2++) {\n            const n3 = new Array(r2);\n            for (let s3 = 0; \
s3 < r2; s3++) {\n              const o2 = new Array(t2), u2 = a2 * i2 * r2 + \
s3 * i2;\n              let l2 = 0;\n              for (let t3 = 0; t3 < i2; \
t3 += 4) o2[l2++] = e2.subarray(t3 + u2, t3 + u2 + 2);\n              n3[s3] \
= o2;\n            }\n            s2[a2] = n3;\n          }\n          return \
s2;\n        }, erectArray3: (e2, t2) => {\n          const r2 = new \
Array(t2), n2 = 4 * t2;\n          let i2 = 0;\n          for (let t3 = 0; t3 \
< n2; t3 += 4) r2[i2++] = e2.subarray(t3, t3 + 3);\n          return r2;\n    \
    }, erect2DArray3: (e2, t2, r2) => {\n          const n2 = 4 * t2, i2 = \
new Array(r2);\n          for (let s2 = 0; s2 < r2; s2++) {\n            \
const r3 = new Array(t2), a2 = s2 * n2;\n            let o2 = 0;\n            \
for (let t3 = 0; t3 < n2; t3 += 4) r3[o2++] = e2.subarray(t3 + a2, t3 + a2 + \
3);\n            i2[s2] = r3;\n          }\n          return i2;\n        }, \
erect3DArray3: (e2, t2, r2, n2) => {\n          const i2 = 4 * t2, s2 = new \
Array(n2);\n          for (let a2 = 0; a2 < n2; a2++) {\n            const n3 \
= new Array(r2);\n            for (let s3 = 0; s3 < r2; s3++) {\n             \
 const o2 = new Array(t2), u2 = a2 * i2 * r2 + s3 * i2;\n              let l2 \
= 0;\n              for (let t3 = 0; t3 < i2; t3 += 4) o2[l2++] = \
e2.subarray(t3 + u2, t3 + u2 + 3);\n              n3[s3] = o2;\n            \
}\n            s2[a2] = n3;\n          }\n          return s2;\n        }, \
erectArray4: (e2, t2) => {\n          const r2 = new Array(e2), n2 = 4 * \
t2;\n          let i2 = 0;\n          for (let t3 = 0; t3 < n2; t3 += 4) \
r2[i2++] = e2.subarray(t3, t3 + 4);\n          return r2;\n        }, \
erect2DArray4: (e2, t2, r2) => {\n          const n2 = 4 * t2, i2 = new \
Array(r2);\n          for (let s2 = 0; s2 < r2; s2++) {\n            const r3 \
= new Array(t2), a2 = s2 * n2;\n            let o2 = 0;\n            for (let \
t3 = 0; t3 < n2; t3 += 4) r3[o2++] = e2.subarray(t3 + a2, t3 + a2 + 4);\n     \
       i2[s2] = r3;\n          }\n          return i2;\n        }, \
erect3DArray4: (e2, t2, r2, n2) => {\n          const i2 = 4 * t2, s2 = new \
Array(n2);\n          for (let a2 = 0; a2 < n2; a2++) {\n            const n3 \
= new Array(r2);\n            for (let s3 = 0; s3 < r2; s3++) {\n             \
 const o2 = new Array(t2), u2 = a2 * i2 * r2 + s3 * i2;\n              let l2 \
= 0;\n              for (let t3 = 0; t3 < i2; t3 += 4) o2[l2++] = \
e2.subarray(t3 + u2, t3 + u2 + 4);\n              n3[s3] = o2;\n            \
}\n            s2[a2] = n3;\n          }\n          return s2;\n        }, \
flattenFunctionToString: (e2, t2) => {\n          const { findDependency: r2, \
thisLookup: i2, doNotDefine: s2 } = t2;\n          let a2 = t2.flattened;\n   \
       a2 || (a2 = t2.flattened = {});\n          const o2 = n.parse(e2), u2 \
= [];\n          let h2 = 0;\n          const c2 = function e3(t3) {\n        \
    if (Array.isArray(t3)) {\n              const r3 = [];\n              for \
(let n2 = 0; n2 < t3.length; n2++) r3.push(e3(t3[n2]));\n              return \
r3.join(\"\");\n            }\n            switch (t3.type) {\n              \
case \"Program\":\n                return e3(t3.body) + \
(\"VariableDeclaration\" === t3.body[0].type ? \";\" : \"\");\n              \
case \"FunctionDeclaration\":\n                return `function \
${t3.id.name}(${t3.params.map(e3).join(\", \")}) ${e3(t3.body)}`;\n           \
   case \"BlockStatement\": {\n                const r3 = [];\n               \
 h2 += 2;\n                for (let n3 = 0; n3 < t3.body.length; n3++) {\n    \
              const i3 = e3(t3.body[n3]);\n                  i3 && r3.push(\" \
\".repeat(h2) + i3, \";\\n\");\n                }\n                return h2 \
-= 2, `{\n${r3.join(\"\")}}`;\n              }\n              case \
\"VariableDeclaration\":\n                const n2 = \
l.normalizeDeclarations(t3).map(e3).filter((e4) => null !== e4);\n            \
    return n2.length < 1 ? \"\" : `${t3.kind} ${n2.join(\",\")}`;\n           \
   case \"VariableDeclarator\":\n                if (t3.init.object && \
\"ThisExpression\" === t3.init.object.type) {\n                  return \
i2(t3.init.property.name, true) ? `${t3.id.name} = ${e3(t3.init)}` : null;\n  \
              }\n                return `${t3.id.name} = ${e3(t3.init)}`;\n   \
           case \"CallExpression\":\n                if (\"subarray\" === \
t3.callee.property.name) return \
`${e3(t3.callee.object)}.${e3(t3.callee.property)}(${t3.arguments.map((t4) => \
e3(t4)).join(\", \")})`;\n                if (\"gl\" === \
t3.callee.object.name || \"context\" === t3.callee.object.name) return \
`${e3(t3.callee.object)}.${e3(t3.callee.property)}(${t3.arguments.map((t4) => \
e3(t4)).join(\", \")})`;\n                if (\"ThisExpression\" === \
t3.callee.object.type) return u2.push(r2(\"this\", t3.callee.property.name)), \
`${t3.callee.property.name}(${t3.arguments.map((t4) => e3(t4)).join(\", \
\")})`;\n                if (t3.callee.object.name) {\n                  \
const n3 = r2(t3.callee.object.name, t3.callee.property.name);\n              \
    return null === n3 ? \
`${t3.callee.object.name}.${t3.callee.property.name}(${t3.arguments.map((t4) \
=> e3(t4)).join(\", \")})` : (u2.push(n3), \
`${t3.callee.property.name}(${t3.arguments.map((t4) => e3(t4)).join(\", \
\")})`);\n                }\n                if (\"MemberExpression\" === \
t3.callee.object.type) return \
`${e3(t3.callee.object)}.${t3.callee.property.name}(${t3.arguments.map((t4) \
=> e3(t4)).join(\", \")})`;\n                throw new Error(\"unknown \
ast.callee\");\n              case \"ReturnStatement\":\n                \
return `return ${e3(t3.argument)}`;\n              case \
\"BinaryExpression\":\n                return \
`(${e3(t3.left)}${t3.operator}${e3(t3.right)})`;\n              case \
\"UnaryExpression\":\n                return t3.prefix ? `${t3.operator} \
${e3(t3.argument)}` : `${e3(t3.argument)} ${t3.operator}`;\n              \
case \"ExpressionStatement\":\n                return \
`${e3(t3.expression)}`;\n              case \"SequenceExpression\":\n         \
       return `(${e3(t3.expressions)})`;\n              case \
\"ArrowFunctionExpression\":\n                return \
`(${t3.params.map(e3).join(\", \")}) => ${e3(t3.body)}`;\n              case \
\"Literal\":\n                return t3.raw;\n              case \
\"Identifier\":\n                return t3.name;\n              case \
\"MemberExpression\":\n                return \"ThisExpression\" === \
t3.object.type ? i2(t3.property.name) : t3.computed ? \
`${e3(t3.object)}[${e3(t3.property)}]` : e3(t3.object) + \".\" + \
e3(t3.property);\n              case \"ThisExpression\":\n                \
return \"this\";\n              case \"NewExpression\":\n                \
return `new ${e3(t3.callee)}(${t3.arguments.map((t4) => e3(t4)).join(\", \
\")})`;\n              case \"ForStatement\":\n                return `for \
(${e3(t3.init)};${e3(t3.test)};${e3(t3.update)}) ${e3(t3.body)}`;\n           \
   case \"AssignmentExpression\":\n                return \
`${e3(t3.left)}${t3.operator}${e3(t3.right)}`;\n              case \
\"UpdateExpression\":\n                return \
`${e3(t3.argument)}${t3.operator}`;\n              case \"IfStatement\":\n    \
            return `if (${e3(t3.test)}) ${e3(t3.consequent)}`;\n              \
case \"ThrowStatement\":\n                return `throw \
${e3(t3.argument)}`;\n              case \"ObjectPattern\":\n                \
return t3.properties.map(e3).join(\", \");\n              case \
\"ArrayPattern\":\n                return t3.elements.map(e3).join(\", \");\n \
             case \"DebuggerStatement\":\n                return \
\"debugger;\";\n              case \"ConditionalExpression\":\n               \
 return `${e3(t3.test)}?${e3(t3.consequent)}:${e3(t3.alternate)}`;\n          \
    case \"Property\":\n                if (\"init\" === t3.kind) return \
e3(t3.key);\n            }\n            throw new Error(`unhandled ast.type \
of ${t3.type}`);\n          }(o2);\n          if (u2.length > 0) {\n          \
  const e3 = [];\n            for (let r3 = 0; r3 < u2.length; r3++) {\n      \
        const n2 = u2[r3];\n              a2[n2] || (a2[n2] = true), n2 && \
e3.push(l.flattenFunctionToString(n2, t2) + \"\\n\");\n            }\n        \
    return e3.join(\"\") + c2;\n          }\n          return c2;\n        }, \
normalizeDeclarations: (e2) => {\n          if (\"VariableDeclaration\" !== \
e2.type) throw new Error('Ast is not of type \"VariableDeclaration\"');\n     \
     const t2 = [];\n          for (let r2 = 0; r2 < e2.declarations.length; \
r2++) {\n            const n2 = e2.declarations[r2];\n            if (n2.id \
&& \"ObjectPattern\" === n2.id.type && n2.id.properties) {\n              \
const { properties: e3 } = n2.id;\n              for (let r3 = 0; r3 < \
e3.length; r3++) {\n                const i2 = e3[r3];\n                if \
(\"ObjectPattern\" === i2.value.type && i2.value.properties) for (let e4 = 0; \
e4 < i2.value.properties.length; e4++) {\n                  const r4 = \
i2.value.properties[e4];\n                  if (\"Property\" !== r4.type) \
throw new Error(\"unexpected state\");\n                  t2.push({ type: \
\"VariableDeclarator\", id: { type: \"Identifier\", name: r4.key.name }, \
init: { type: \"MemberExpression\", object: { type: \"MemberExpression\", \
object: n2.init, property: { type: \"Identifier\", name: i2.key.name }, \
computed: false }, property: { type: \"Identifier\", name: r4.key.name }, \
computed: false } });\n                }\n                else {\n            \
      if (\"Identifier\" !== i2.value.type) throw new Error(\"unexpected \
state\");\n                  t2.push({ type: \"VariableDeclarator\", id: { \
type: \"Identifier\", name: i2.value && i2.value.name ? i2.value.name : \
i2.key.name }, init: { type: \"MemberExpression\", object: n2.init, property: \
{ type: \"Identifier\", name: i2.key.name }, computed: false } });\n          \
      }\n              }\n            } else if (n2.id && \"ArrayPattern\" \
=== n2.id.type && n2.id.elements) {\n              const { elements: e3 } = \
n2.id;\n              for (let r3 = 0; r3 < e3.length; r3++) {\n              \
  const i2 = e3[r3];\n                if (\"Identifier\" !== i2.type) throw \
new Error(\"unexpected state\");\n                t2.push({ type: \
\"VariableDeclarator\", id: { type: \"Identifier\", name: i2.name }, init: { \
type: \"MemberExpression\", object: n2.init, property: { type: \"Literal\", \
value: r3, raw: r3.toString(), start: i2.start, end: i2.end }, computed: true \
} });\n              }\n            } else t2.push(n2);\n          }\n        \
  return t2;\n        }, splitHTMLImageToRGB: (e2, t2) => {\n          const \
r2 = e2.createKernel(function(e3) {\n            return 255 * \
e3[this.thread.y][this.thread.x].r;\n          }, { output: [t2.width, \
t2.height], precision: \"unsigned\", argumentTypes: { a: \"HTMLImage\" } }), \
n2 = e2.createKernel(function(e3) {\n            return 255 * \
e3[this.thread.y][this.thread.x].g;\n          }, { output: [t2.width, \
t2.height], precision: \"unsigned\", argumentTypes: { a: \"HTMLImage\" } }), \
i2 = e2.createKernel(function(e3) {\n            return 255 * \
e3[this.thread.y][this.thread.x].b;\n          }, { output: [t2.width, \
t2.height], precision: \"unsigned\", argumentTypes: { a: \"HTMLImage\" } }), \
s2 = e2.createKernel(function(e3) {\n            return 255 * \
e3[this.thread.y][this.thread.x].a;\n          }, { output: [t2.width, \
t2.height], precision: \"unsigned\", argumentTypes: { a: \"HTMLImage\" } }), \
a2 = [r2(t2), n2(t2), i2(t2), s2(t2)];\n          return a2.rKernel = r2, \
a2.gKernel = n2, a2.bKernel = i2, a2.aKernel = s2, a2.gpu = e2, a2;\n        \
}, splitRGBAToCanvases: (e2, t2, r2, n2) => {\n          const i2 = \
e2.createKernel(function(e3) {\n            const t3 = \
e3[this.thread.y][this.thread.x];\n            this.color(t3.r / 255, 0, 0, \
255);\n          }, { output: [r2, n2], graphical: true, argumentTypes: { v: \
\"Array2D(4)\" } });\n          i2(t2);\n          const s2 = \
e2.createKernel(function(e3) {\n            const t3 = \
e3[this.thread.y][this.thread.x];\n            this.color(0, t3.g / 255, 0, \
255);\n          }, { output: [r2, n2], graphical: true, argumentTypes: { v: \
\"Array2D(4)\" } });\n          s2(t2);\n          const a2 = \
e2.createKernel(function(e3) {\n            const t3 = \
e3[this.thread.y][this.thread.x];\n            this.color(0, 0, t3.b / 255, \
255);\n          }, { output: [r2, n2], graphical: true, argumentTypes: { v: \
\"Array2D(4)\" } });\n          a2(t2);\n          const o2 = \
e2.createKernel(function(e3) {\n            const t3 = \
e3[this.thread.y][this.thread.x];\n            this.color(255, 255, 255, t3.a \
/ 255);\n          }, { output: [r2, n2], graphical: true, argumentTypes: { \
v: \"Array2D(4)\" } });\n          return o2(t2), [i2.canvas, s2.canvas, \
a2.canvas, o2.canvas];\n        }, getMinifySafeName: (e2) => {\n          \
try {\n            const t2 = n.parse(`const value = ${e2.toString()}`), { \
init: r2 } = t2.body[0].declarations[0];\n            return r2.body.name || \
r2.body.body[0].argument.name;\n          } catch (e3) {\n            throw \
new Error(\"Unrecognized function type.  Please use `() => \
yourFunctionVariableHere` or function() { return yourFunctionVariableHere; \
}\");\n          }\n        }, sanitizeName: function(e2) {\n          return \
h.test(e2) && (e2 = e2.replace(h, \"S_S\")), c.test(e2) ? e2 = e2.replace(c, \
\"U_U\") : p.test(e2) && (e2 = e2.replace(p, \"u_u\")), e2;\n        } }, h = \
/\\$/, c = /__/, p = /_/, d = l.getSystemEndianness();\n        t.exports = { \
utils: l };\n      }, { \"./input\": 110, \"./texture\": 113, acorn: 1 }] }, \
{}, [107])(107);\n    });\n  }\n});\n\n// <stdin>\nwindow.gpuJS = \
require_gpu();\n/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated \
JavaScript\n *\n * @version 2.16.0\n * @date Thu Feb 13 2025 11:46:50 \
GMT-0800 (Pacific Standard Time)\n *\n * @license MIT\n * The MIT License\n \
*\n * Copyright (c) 2025 gpu.js Team\n */\n/**\n* gpu.js\n* \
http://gpu.rocks/\n*\n* GPU Accelerated JavaScript\n*\n* @version 2.16.0\n* \
@date Thu Feb 13 2025 11:46:48 GMT-0800 (Pacific Standard Time)\n*\n* \
@license MIT\n* The MIT License\n*\n* Copyright (c) 2025 gpu.js Team\n*/\n", 
    "Display" -> "esm", "Hash" -> "9a3228ec-51aa-417b-99c8-d45cacd58714", 
    "Invisible" -> False, "MetaOnly" -> False, "Props" -> <||>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Output", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\nNow we have an easy access to this framework.\n\n## \
Compute shaders\nHere we use GPU.js to write a compute shader in Javascript, \
which use privded array of 2D points and renders their density to a canvas. \
We shall support the possibillity to update the image in real-time and use \
`PlotRange`, `ImageSize` parameters similar to `Plot` function", 
    "Display" -> "codemirror", "Hash" -> 
     "9e267a62-ce85-48d5-a1ac-26ef23756b33", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "Now we have an easy access to this framework.\n\n## Compute \
shaders\nHere we use GPU.js to write a compute shader in Javascript, which \
use privded array of 2D points and renders their density to a canvas. We \
shall support the possibillity to update the image in real-time and use \
`PlotRange`, `ImageSize` parameters similar to `Plot` function", 
    "Display" -> "markdown", "Hash" -> 
     "f264132f-1a43-48a6-9c9d-17af063524bf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".js\nfunction getColor(t) {     \n    if (t >= 0 && t <= \
0.25)       \n        return [255.0 + (- 255.0) * t / 0.25, 255.0 + (- 255.0) \
* t / 0.25, 255.0];     \n    if (t >= 0.25 && t <= 0.55)       \n        \
return [0.0, 255.0 * (t - 0.25) / 0.3, 255.0 + (- 255.0) * (t - 0.25) / 0.3]; \
    \n    if (t >= 0.55 && t <= 0.85)       \n        return [255.0 * (t - \
0.55) / 0.3, 255.0, 0.0];     \n    if (t >= 0.85 && t <= 1)       \n        \
return [255.0, 255.0 + (- 255.0) * (t - 0.85) / 0.15, 0.0];     \n    return \
[255.0,255.0,255.0];   \n}\n\ncore.HeatMap = async (args, env) => {\n  const \
gpu = new window.gpuJS.GPU();\n  const options = await core._getRules(args, \
env);\n\n  env.local.gpu = gpu;\n  \n  let [width, height] = [320, 240];\n  \
let plotRange = [[-1,1], [-1,1]];\n  \n  if (options.ImageSize) {\n    if \
(Array.isArray(options.ImageSize))\n      [width, height] = \
options.ImageSize;\n    else\n      [width, height] = \
[Math.round(options.ImageSize), Math.round(options.ImageSize/1.6180339)];\n  \
}\n\n  if (options.PlotRange) {\n    plotRange = options.PlotRange;\n  }\n\n  \
plotRange = [\n    plotRange[0][0],\n    width / (plotRange[0][1] - \
plotRange[0][0]),\n\n    plotRange[1][0],\n    height / (plotRange[1][1] - \
plotRange[1][0])\n  ];\n\n\n  const points = await interpretate(args[0], \
env);\n  let alpha = 10000.0;\n  if (args.length - \
Object.keys(options).length > 1) {\n    alpha = await interpretate(args[1], \
env);\n    env.local.alpha_has = true;\n  }\n\n  env.local.alpha = alpha;\n\n \
 env.local.kernel = gpu.createKernel(function(points, pointCount, alpha) {\n  \
  let intensity = 0;\n    for (let i = 0; i < pointCount; i++) {\n        \
const pointX = (points[i * 2] - this.constants.plotRange[0]) * \
this.constants.plotRange[1];\n        const pointY = (points[i * 2 + 1] - \
this.constants.plotRange[2]) * this.constants.plotRange[3];\n        const dx \
= (this.thread.x - pointX)/this.constants.width;\n        const dy = \
(this.thread.y - pointY)/this.constants.height;\n        const dist = dx * dx \
+ dy * dy;\n        intensity += 1.0/(dist * alpha + 1.0); // Blurry effect\n \
   }\n    \n    intensity = Math.min(intensity, 1); // Cap intensity\n    \
const baseColor = getColor(intensity);\n\n    let blendedColor = [\n        \
baseColor[0] * intensity + (1.0 - intensity)*255,\n        baseColor[1] * \
intensity + (1.0 - intensity)*255,\n        baseColor[2] * intensity + (1.0 - \
intensity)*255\n    ];\n    this.color(blendedColor[0] / 255, blendedColor[1] \
/ 255, blendedColor[2] / 255);\n  }, {\n    dynamicArguments: true,\n    \
constants: {\n      plotRange: plotRange,\n      width: width,\n      height: \
height\n    }\n  })\n  .setOutput([width, height])\n  .setGraphical(true)\n  \
.setFunctions([getColor]);  \n\n  \
env.element.appendChild(env.local.kernel.canvas);\n\n  if (points instanceof \
NumericArrayObject) {\n    env.local.kernel(new Float32Array(points.buffer), \
points.dims[0], alpha);\n    return;\n  }\n  \n  \
env.local.kernel(points.flat(), points.length, \
alpha);\n}\n\ncore.HeatMap.virtual = true\n\ncore.HeatMap.destroy = (args, \
env) => {\n  env.local.kernel.destroy();\n  env.local.gpu.destroy();\n  \
delete env.local.gpu;\n  delete env.local.kernel;\n}\n\ncore.HeatMap.update = \
async (args, env) => {\n  let alpha = env.local.alpha;\n  if \
(env.local.alpha_has) {\n    alpha = await interpretate(args[1], env);\n  }\n \
 \n  const data = await interpretate(args[0], env);\n  if (data instanceof \
NumericArrayObject) {\n    env.local.kernel(new Float32Array(data.buffer), \
data.dims[0], alpha);\n    return;\n  }\n\n  env.local.kernel(data.flat(), \
data.length, alpha);\n}\n\nthis.ondestroy(() => {\n  \
gpu.destroy();\n});\n\nreturn 'If you see it, it works'", 
    "Display" -> "codemirror", "Hash" -> 
     "da283018-6259-49c7-a259-3754dd1600d1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Fade" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "function getColor(t) {     \n    if (t >= 0 && t <= 0.25)     \
  \n        return [255.0 + (- 255.0) * t / 0.25, 255.0 + (- 255.0) * t / \
0.25, 255.0];     \n    if (t >= 0.25 && t <= 0.55)       \n        return \
[0.0, 255.0 * (t - 0.25) / 0.3, 255.0 + (- 255.0) * (t - 0.25) / 0.3];     \n \
   if (t >= 0.55 && t <= 0.85)       \n        return [255.0 * (t - 0.55) / \
0.3, 255.0, 0.0];     \n    if (t >= 0.85 && t <= 1)       \n        return \
[255.0, 255.0 + (- 255.0) * (t - 0.85) / 0.15, 0.0];     \n    return \
[255.0,255.0,255.0];   \n}\n\ncore.HeatMap = async (args, env) => {\n  const \
gpu = new window.gpuJS.GPU();\n  const options = await core._getRules(args, \
env);\n\n  env.local.gpu = gpu;\n  \n  let [width, height] = [320, 240];\n  \
let plotRange = [[-1,1], [-1,1]];\n  \n  if (options.ImageSize) {\n    if \
(Array.isArray(options.ImageSize))\n      [width, height] = \
options.ImageSize;\n    else\n      [width, height] = \
[Math.round(options.ImageSize), Math.round(options.ImageSize/1.6180339)];\n  \
}\n\n  if (options.PlotRange) {\n    plotRange = options.PlotRange;\n  }\n\n  \
plotRange = [\n    plotRange[0][0],\n    width / (plotRange[0][1] - \
plotRange[0][0]),\n\n    plotRange[1][0],\n    height / (plotRange[1][1] - \
plotRange[1][0])\n  ];\n\n\n  const points = await interpretate(args[0], \
env);\n  let alpha = 10000.0;\n  if (args.length - \
Object.keys(options).length > 1) {\n    alpha = await interpretate(args[1], \
env);\n    env.local.alpha_has = true;\n  }\n\n  env.local.alpha = alpha;\n\n \
 env.local.kernel = gpu.createKernel(function(points, pointCount, alpha) {\n  \
  let intensity = 0;\n    for (let i = 0; i < pointCount; i++) {\n        \
const pointX = (points[i * 2] - this.constants.plotRange[0]) * \
this.constants.plotRange[1];\n        const pointY = (points[i * 2 + 1] - \
this.constants.plotRange[2]) * this.constants.plotRange[3];\n        const dx \
= (this.thread.x - pointX)/this.constants.width;\n        const dy = \
(this.thread.y - pointY)/this.constants.height;\n        const dist = dx * dx \
+ dy * dy;\n        intensity += 1.0/(dist * alpha + 1.0); // Blurry effect\n \
   }\n    \n    intensity = Math.min(intensity, 1); // Cap intensity\n    \
const baseColor = getColor(intensity);\n\n    let blendedColor = [\n        \
baseColor[0] * intensity + (1.0 - intensity)*255,\n        baseColor[1] * \
intensity + (1.0 - intensity)*255,\n        baseColor[2] * intensity + (1.0 - \
intensity)*255\n    ];\n    this.color(blendedColor[0] / 255, blendedColor[1] \
/ 255, blendedColor[2] / 255);\n  }, {\n    dynamicArguments: true,\n    \
constants: {\n      plotRange: plotRange,\n      width: width,\n      height: \
height\n    }\n  })\n  .setOutput([width, height])\n  .setGraphical(true)\n  \
.setFunctions([getColor]);  \n\n  \
env.element.appendChild(env.local.kernel.canvas);\n\n  if (points instanceof \
NumericArrayObject) {\n    env.local.kernel(new Float32Array(points.buffer), \
points.dims[0], alpha);\n    return;\n  }\n  \n  \
env.local.kernel(points.flat(), points.length, \
alpha);\n}\n\ncore.HeatMap.virtual = true\n\ncore.HeatMap.destroy = (args, \
env) => {\n  env.local.kernel.destroy();\n  env.local.gpu.destroy();\n  \
delete env.local.gpu;\n  delete env.local.kernel;\n}\n\ncore.HeatMap.update = \
async (args, env) => {\n  let alpha = env.local.alpha;\n  if \
(env.local.alpha_has) {\n    alpha = await interpretate(args[1], env);\n  }\n \
 \n  const data = await interpretate(args[0], env);\n  if (data instanceof \
NumericArrayObject) {\n    env.local.kernel(new Float32Array(data.buffer), \
data.dims[0], alpha);\n    return;\n  }\n\n  env.local.kernel(data.flat(), \
data.length, alpha);\n}\n\nthis.ondestroy(() => {\n  \
gpu.destroy();\n});\n\nreturn 'If you see it, it works'", "Display" -> "js", 
    "Hash" -> "633acfd4-f3c5-410f-9fb3-ddf14b19d1e3", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\n## Output form\nTo display the heatmap, we need to \
define an output form in Wolfram Language, that will use Javascript to render \
the widget", "Display" -> "codemirror", 
    "Hash" -> "1fc59ce3-1106-42f9-855f-6f366a531120", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "## Output form\nTo display the heatmap, we need to define an \
output form in Wolfram Language, that will use Javascript to render the \
widget", "Display" -> "markdown", "Hash" -> 
     "db3252f8-16f9-4871-93ba-554d12f85736", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "HeatMap /: MakeBoxes[h_HeatMap, StandardForm] := With[{},\n  \
ViewBox[h, h]\n]\n\nHeatMap /: MakeBoxes[h_HeatMap, StandardForm] := With[{\n \
 o = CreateFrontEndObject[h]\n},\n  MakeBoxes[o, StandardForm]\n] /; \
ByteCount[h] > 1024\n\nOptions[HeatMap] = {ImageSize->{320, 240}, \
PlotRange->{{-1,1}, {-1,1}}};", "Display" -> "codemirror", 
    "Hash" -> "3c0e66bd-ce7d-47ed-a754-68fffa30361e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Fade" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\n## Test\nCreate a bunch of points and render it", 
    "Display" -> "codemirror", "Hash" -> 
     "974d110f-b586-4191-ad13-43db0c3ab61a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "## Test\nCreate a bunch of points and render it", 
    "Display" -> "markdown", "Hash" -> 
     "d490c5aa-4b63-43c3-858d-796b7586e011", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "HeatMap[Exp[-Norm[#]]# &/@ RandomReal[{-Pi,Pi}, {30,2}]]", 
    "Display" -> "codemirror", "Hash" -> 
     "015c3993-51f5-49b0-9528-107c23621c19", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "(*VB[*)(FrontEndRef[\"ee52e033-8e00-49d5-9427-91a42d3e707e\"]\
)(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKp6aaG\
qUaGBvrWqQaGOiaWKaY6lqaGJnrWhommhilGKeaG5inAgB7rhUY\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "1342e061-9739-456a-920d-62304025b180", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\n## Integration with Graphics\nUsing basic `Inset` we can \
place it under any graphics", "Display" -> "codemirror", 
    "Hash" -> "658d14c4-9eb6-425d-9fd0-ed21e40e383b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "## Integration with Graphics\nUsing basic `Inset` we can \
place it under any graphics", "Display" -> "markdown", 
    "Hash" -> "bc6992c0-0166-4058-bd28-66ca78c41193", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "range = {{-1,1}, {-1,1}}/2.0;\ndataset = Exp[-Norm[#]]# &/@ \
RandomReal[{-Pi,Pi}, {50,2}];\n\nGraphics[{\n  ColorData[97][4], \
PointSize[0.03], \n  Inset[\n    HeatMap[dataset, 4000, PlotRange->range, \
ImageSize->{344,244}],\n    (range[[All,1]]+range[[All,2]])/2.0\n  ],\n  \
Point[dataset]\n}, \n  PlotRange->range, ImageSize->{420,320}, \
ImagePadding->30,\n  Frame->True, Axes->True\n]", "Display" -> "codemirror", 
    "Hash" -> "285d6ca3-eddc-4b1e-8aff-dfffb9412148", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "(*VB[*)(FrontEndRef[\"7bdb2f83-0227-44a0-a6ba-cc60256bcc48\"]\
)(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKmyelJ\
BmlWRjrGhgZmeuamCQa6CaaJSXqJiebGRiZmiUlJ5tYAACFyxXA\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "a9daa471-ae8f-49d0-b5c3-5992cfbb5ca7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\n## Make it dynamic\nWe should take a full advantage of \
the WebGL and perform smooth animation of the data points. For this we define \
helper function to guide our points though the calculated path ", 
    "Display" -> "codemirror", "Hash" -> 
     "b908ec46-0ca1-4219-9a04-3657870d5409", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "## Make it dynamic\nWe should take a full advantage of the \
WebGL and perform smooth animation of the data points. For this we define \
helper function to guide our points though the calculated path ", 
    "Display" -> "markdown", "Hash" -> 
     "36e8ae15-26cf-496b-a2be-3c10a511dac0", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "fixedPoint[args__, maxN_:Infinity] := \
NestWhile[Function[input,\n  With[{\n    pos = input[[1]], \n    target = \
input[[2]], \n    velocity = input[[3]], \n    iteration = input[[4]]\n  }, \
{\n    pos + 0.01 velocity,\n    target,\n    velocity 0.9 + 0.1 (Normalize \
/@ ( target - pos)),\n    iteration + 1\n  }]\n], {args}, \
(Max[Abs[#[[1]]-#[[2]]]]>0.1 && #[[4]] <= maxN)&][[{1,4}]]", 
    "Display" -> "codemirror", "Hash" -> 
     "972ee6b7-8915-4392-806a-04a6433c3c4e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\nNow we generate the data, find the number of interations \
steps until all points converge the target positions and assign a slider to \
control the process", "Display" -> "codemirror", 
    "Hash" -> "bacfbbf0-15f1-4a72-9ebc-36b89279b329", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "Now we generate the data, find the number of interations \
steps until all points converge the target positions and assign a slider to \
control the process", "Display" -> "markdown", 
    "Hash" -> "9c1d198f-6cad-4519-ab2f-a59ec4c14abe", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "(* input data *)\nrange = {{-1,1}, {-1,1}};\npoints = \
RandomPoint[RegionDifference[Disk[{0,0}, 0.6], Disk[{0,0}, 0.5]], 100];\n\n(* \
place points outside the viewport *)\noffscreenPos = With[{corners = range // \
Transpose}, \n  RandomPoint[\n    RegionDifference[\n      Rectangle @@ (2 \
corners),\n      Rectangle @@ corners\n    ], Length[points]\n  ]\n];\n\n(* \
procedurally animate each particle *)\nWith[{\n  vel = 0.1 RandomReal[{-1,1}, \
{Length[points], 2}],\n  target = points\n},\n  points = offscreenPos;\n  \n  \
With[{\n    maxIterations = fixedPoint[offscreenPos, target, vel, 0, \
Infinity][[2]]\n  },\n    EventHandler[InputRange[0, maxIterations, 1, 0], \
Function[i,\n      points = fixedPoint[offscreenPos, target, vel, 0, \
i][[1]]\n    ]]\n  ]\n]\n\n(* render *)\nGraphics[{\n  ColorData[97][4], \
PointSize[0.03], \n  Inset[\n    HeatMap[points // Offload, 4000, \
PlotRange->range, ImageSize->{344,244}],\n    \
(range[[All,1]]+range[[All,2]])/2.0\n  ],\n  Point[points // Offload]\n}, \n  \
PlotRange->range, ImageSize->{420,320}, ImagePadding->30,\n  Frame->True, \
Axes->True, TransitionType->None, \"Control\"->False\n]", 
    "Display" -> "codemirror", "Hash" -> 
     "e6fe15af-5d17-4a54-980b-aae78baef985", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Fade" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "(*VB[*)(EventObject[<|\"Id\" -> \
\"d756430f-5796-4fdb-8b7e-e32b9d21c434\", \"Initial\" -> 0, \"View\" -> \
\"7ef439b3-8fe6-4931-b1c1-bc133abce56a\"|>])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHv\
k5KRCeEJBwK8rPK3HNS3GtSE0uLUlMykkNVgEKm6emmRhbJhnrWqSlmumaWBob6iYZJgOJZENj48S\
k5FRTs0QAhwsV/g==\"*)(*]VB*)", "Display" -> "codemirror", 
    "Hash" -> "bee80664-7fb2-44b9-bb95-705bcc19e6c6", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "(*VB[*)(Graphics[{RGBColor[0.922526, 0.385626, 0.209179], \
PointSize[0.03], Inset[HeatMap[Offload[points], 4000, PlotRange -> {{-1, 1}, \
{-1, 1}}, ImageSize -> {344, 244}], {0., 0.}], Point[Offload[points]]}, \
PlotRange -> {{-1, 1}, {-1, 1}}, ImageSize -> {420, 320}, ImagePadding -> 30, \
Frame -> True, Axes -> True, TransitionType -> None, \"Control\" -> \
False])(*,*)(*\"1:eJxTTMoPSmNkYGAoZgESHvk5KWkcIB6IcC9KLMjITC5OY4HJ+2QWl6Qxw+S\
D3J2c83Pyi4qubP1mF9r61r7ojv78NRLrbtgXabgzLko4dsoeYjQnkAjIz8wrCc6sSi3aIdf6OnDH\
PPs0JpAcK5DwzCtOLYHYwg5yRWpiiW9iAUQvSMA/LS0nPzGlmA3ILgCZU5y5gJ+BAWIASFtQaU4qx\
Jac/JKgxLz0VIQc2M0ovMz/QJAJMp2wONxkz9zE9FSQ+9H0RADVZ37BMKuIAQrgDIh3WGFBgc93g8\
JjS0Aec2DE0MMD0xOQmJKSmZeeKYdpLsiXbkWJualgoZCi0lQ0BSCGY0VqMS55PrBwYl5xZklmfl5\
IZQFEi19+HprKYFAIOufnlRTl50CsTcwpTgUANdCtJw==\"*)(*]VB*)", 
    "Display" -> "codemirror", "Hash" -> 
     "eab07f98-2f21-4b8f-be57-a8a151af56ea", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> ".md\n*Try to drag. Its alive!*", "Display" -> "codemirror", 
    "Hash" -> "e8c959f1-fd3d-4830-bddb-a092d0784934", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, 
    "PublicFields" -> {"Properties"}, "State" -> "Idle", "Type" -> "Input", 
    "UID" -> Null, "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>, 
   <|"Data" -> "*Try to drag. Its alive!*", "Display" -> "markdown", 
    "Hash" -> "789dc93a-8078-4791-b512-63a7156d46a4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "PublicFields" -> {"Properties"}, 
    "State" -> "Idle", "Type" -> "Output", "UID" -> Null, 
    "Notebook" -> "ae257426-3a68-4071-90cc-47338a6d7050"|>}, 
 "serializer" -> "jsfn4"|>
