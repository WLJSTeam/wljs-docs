<|"Notebook" -> <|"Controller" -> "197e8920-238e-493c-9340-a502398ccedd", 
   "FocusedCell" -> CellObj[JerryI`Notebook`CellObj`$217], 
   "HaveToSaveAs" -> False, "MessangerChannel" -> Messanger, 
   "ModalsChannel" -> "4850b457-335c-4749-8c7b-c43091715467", 
   "Objects" -> <|"155e1933-7a3f-4d2d-a407-fa2e95122a7b" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">cm<sup>-1</sup></div><input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248082'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['Centimeters'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Centimeters');\n        });        \n      }\n\n      \
core['Handler$248082'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['Centimeters'].toFixed(4);\n      }\n\n   \
   core['Handler$248082'].destroy = () => {\n        delete \
core['Handler$248082'];\n      }\n\n      core['Handler$248082'].virtual = \
true;</script></div>", Epilog -> Handler$248082[Offload[rack$248080]]]]|>, 
     "f0da594f-7bd4-4c5a-ae50-eea483f294f8" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">eV</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248083'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['eV'].toFixed(4);\n  \
      env.local.input = input;\n\n        input.addEventListener('change', () \
=> {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'eV');\n        });        \n      }\n\n      core['Handler$248083'].update = \
async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['eV'].toFixed(4);\n      }\n\n      \
core['Handler$248083'].destroy = () => {\n        delete \
core['Handler$248083'];\n      }\n\n      core['Handler$248083'].virtual = \
true;</script></div>", Epilog -> Handler$248083[Offload[rack$248080]]]]|>, 
     "48995a99-f53f-47b0-bfe3-3ec40148270e" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">meV</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248084'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['meV'].toFixed(4);\n \
       env.local.input = input;\n\n        input.addEventListener('change', \
() => {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'meV');\n        });        \n      }\n\n      core['Handler$248084'].update \
= async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['meV'].toFixed(4);\n      }\n\n      \
core['Handler$248084'].destroy = () => {\n        delete \
core['Handler$248084'];\n      }\n\n      core['Handler$248084'].virtual = \
true;</script></div>", Epilog -> Handler$248084[Offload[rack$248080]]]]|>, 
     "e8d7f8b8-e063-44af-9498-8b8060b00933" -> 
      <|"Public" -> Hold[HTMLView["<hr/>"]]|>, 
     "4bb1d51f-e266-4ad0-bd63-6c984a2a24a0" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">&micro;m</div><input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248085'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['Micrometers'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Micrometers');\n        });        \n      }\n\n      \
core['Handler$248085'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['Micrometers'].toFixed(4);\n      }\n\n   \
   core['Handler$248085'].destroy = () => {\n        delete \
core['Handler$248085'];\n      }\n\n      core['Handler$248085'].virtual = \
true;</script></div>", Epilog -> Handler$248085[Offload[rack$248080]]]]|>, 
     "dc9aba71-4ea2-4f79-bfb1-b7f2a979ec6f" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">nm</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248086'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['Nanometers'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Nanometers');\n        });        \n      }\n\n      \
core['Handler$248086'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['Nanometers'].toFixed(4);\n      }\n\n    \
  core['Handler$248086'].destroy = () => {\n        delete \
core['Handler$248086'];\n      }\n\n      core['Handler$248086'].virtual = \
true;</script></div>", Epilog -> Handler$248086[Offload[rack$248080]]]]|>, 
     "878cfd2d-986e-47d0-9158-3d7e5e1b2817" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">A</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248087'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['Angstrem'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Angstrem');\n        });        \n      }\n\n      \
core['Handler$248087'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['Angstrem'].toFixed(4);\n      }\n\n      \
core['Handler$248087'].destroy = () => {\n        delete \
core['Handler$248087'];\n      }\n\n      core['Handler$248087'].virtual = \
true;</script></div>", Epilog -> Handler$248087[Offload[rack$248080]]]]|>, 
     "2d9899fd-6857-45a4-95a5-34852034a709" -> 
      <|"Public" -> Hold[HTMLView["<hr/>"]]|>, 
     "1e5e3160-bc1e-40d9-8eec-be6f93240687" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">MHz</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248088'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['MHz'].toFixed(4);\n \
       env.local.input = input;\n\n        input.addEventListener('change', \
() => {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'MHz');\n        });        \n      }\n\n      core['Handler$248088'].update \
= async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['MHz'].toFixed(4);\n      }\n\n      \
core['Handler$248088'].destroy = () => {\n        delete \
core['Handler$248088'];\n      }\n\n      core['Handler$248088'].virtual = \
true;</script></div>", Epilog -> Handler$248088[Offload[rack$248080]]]]|>, 
     "6583c293-0360-47fa-ab96-a168d0340446" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">GHz</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248089'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['GHz'].toFixed(4);\n \
       env.local.input = input;\n\n        input.addEventListener('change', \
() => {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'GHz');\n        });        \n      }\n\n      core['Handler$248089'].update \
= async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['GHz'].toFixed(4);\n      }\n\n      \
core['Handler$248089'].destroy = () => {\n        delete \
core['Handler$248089'];\n      }\n\n      core['Handler$248089'].virtual = \
true;</script></div>", Epilog -> Handler$248089[Offload[rack$248080]]]]|>, 
     "b9603084-5173-4bb7-8489-de42df3b83e2" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">THz</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248090'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['THz'].toFixed(4);\n \
       env.local.input = input;\n\n        input.addEventListener('change', \
() => {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'THz');\n        });        \n      }\n\n      core['Handler$248090'].update \
= async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['THz'].toFixed(4);\n      }\n\n      \
core['Handler$248090'].destroy = () => {\n        delete \
core['Handler$248090'];\n      }\n\n      core['Handler$248090'].virtual = \
true;</script></div>", Epilog -> Handler$248090[Offload[rack$248080]]]]|>, 
     "c3190ec3-0405-486e-baef-59c5a8a23d66" -> 
      <|"Public" -> Hold[HTMLView["<hr/>"]]|>, 
     "13158658-3d49-4393-95e4-a2d9a212a259" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">ps</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248091'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['ps'].toFixed(4);\n  \
      env.local.input = input;\n\n        input.addEventListener('change', () \
=> {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'ps');\n        });        \n      }\n\n      core['Handler$248091'].update = \
async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['ps'].toFixed(4);\n      }\n\n      \
core['Handler$248091'].destroy = () => {\n        delete \
core['Handler$248091'];\n      }\n\n      core['Handler$248091'].virtual = \
true;</script></div>", Epilog -> Handler$248091[Offload[rack$248080]]]]|>, 
     "62dc2c93-700c-4be1-9ac4-4a86f30be4f3" -> 
      <|"Public" -> Hold[HTMLView["<hr/>"]]|>, 
     "6ebcf9b0-d987-4151-b252-f17b00b57f00" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">Oe (1/2)</div><input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248092'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['Oe'].toFixed(4);\n  \
      env.local.input = input;\n\n        input.addEventListener('change', () \
=> {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Oe');\n        });        \n      }\n\n      core['Handler$248092'].update = \
async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['Oe'].toFixed(4);\n      }\n\n      \
core['Handler$248092'].destroy = () => {\n        delete \
core['Handler$248092'];\n      }\n\n      core['Handler$248092'].virtual = \
true;</script></div>", Epilog -> Handler$248092[Offload[rack$248080]]]]|>, 
     "d8a62eb2-066a-42f3-8772-3d09885af32e" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">T (1/2)</div><input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248093'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['T'].toFixed(4);\n   \
     env.local.input = input;\n\n        input.addEventListener('change', () \
=> {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'T');\n        });        \n      }\n\n      core['Handler$248093'].update = \
async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['T'].toFixed(4);\n      }\n\n      \
core['Handler$248093'].destroy = () => {\n        delete \
core['Handler$248093'];\n      }\n\n      core['Handler$248093'].virtual = \
true;</script></div>", Epilog -> Handler$248093[Offload[rack$248080]]]]|>, 
     "b4a4469d-25c9-46d1-aa6e-a891c6e443f7" -> 
      <|"Public" -> Hold[HTMLView["<hr/>"]]|>, 
     "36770c77-5f47-4a17-a995-8a835ce0a411" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">K</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248094'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = +data['K'].toFixed(4);\n   \
     env.local.input = input;\n\n        input.addEventListener('change', () \
=> {\n          \n          console.warn(input.value);\n          \
env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'K');\n        });        \n      }\n\n      core['Handler$248094'].update = \
async (args, env) => {\n        if (env.local.skip) {\n          \
env.local.skip = false;\n          return;\n        }\n        \
console.log('Update');\n        env.local.input.value = +(await \
interpretate(args[0], env))['K'].toFixed(4);\n      }\n\n      \
core['Handler$248094'].destroy = () => {\n        delete \
core['Handler$248094'];\n      }\n\n      core['Handler$248094'].virtual = \
true;</script></div>", Epilog -> Handler$248094[Offload[rack$248080]]]]|>, 
     "c04c6739-ac1b-4343-bf57-4fb678275883" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">kJ/Mol</div><input type=\"number\" step=\"1\" \
class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 text-base \
text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248095'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['kJ/Mol'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'kJ/Mol');\n        });        \n      }\n\n      \
core['Handler$248095'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['kJ/Mol'].toFixed(4);\n      }\n\n      \
core['Handler$248095'].destroy = () => {\n        delete \
core['Handler$248095'];\n      }\n\n      core['Handler$248095'].virtual = \
true;</script></div>", Epilog -> Handler$248095[Offload[rack$248080]]]]|>, 
     "1fed9dc1-5be2-4698-9c98-b358f5574e96" -> 
      <|"Public" -> Hold[HTMLView["<div class=\"mt-2 flex\"><div \
style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\">Hartree</div><input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/><script type=\"module\"> core['Handler$248096'] = async \
(args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['Hartree'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('73cf849a-ecc5-44d1-9a80-945ea9ed953f', input.value, \
'Hartree');\n        });        \n      }\n\n      \
core['Handler$248096'].update = async (args, env) => {\n        if \
(env.local.skip) {\n          env.local.skip = false;\n          return;\n    \
    }\n        console.log('Update');\n        env.local.input.value = \
+(await interpretate(args[0], env))['Hartree'].toFixed(4);\n      }\n\n      \
core['Handler$248096'].destroy = () => {\n        delete \
core['Handler$248096'];\n      }\n\n      core['Handler$248096'].virtual = \
true;</script></div>", Epilog -> Handler$248096[Offload[rack$248080]]]]|>|>, 
   "Path" -> "C:\\Users\\ep5user\\Desktop\\Units Converter.wln", 
   "Quick" -> True, "Symbols" -> <|"rack" -> JSObject[0.14[0.07, 0.28]]|>, 
   "TOC" -> {Notebook`Editor`TOC`Private`heading[1, "Units converter", 
      CellObj[JerryI`Notebook`CellObj`$209]], 
     Notebook`Editor`TOC`Private`heading[2, "Source code", 
      CellObj[JerryI`Notebook`CellObj`$209]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Units converter\nAn app for fast convertion \
different optical units.\n\n<br/>\n\n## Source code\n\nDefine a custom input \
component", "Display" -> "codemirror", 
    "Hash" -> "8abe676e-648a-4a32-b4db-2e82b78694f4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> "# Units converter\nAn app for fast convertion different \
optical units.\n\n<br />\n\n## Source code\n\nDefine a custom input \
component", "Display" -> "markdown", 
    "Hash" -> "57e95663-cc98-4e7a-b86c-fb99b1b9c0ba", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> ".wlx\n\nCustomInput[sym_, OptionsPattern[]] := Module[{\n  \
Label = OptionValue[\"Label\"],\n  Ev = OptionValue[\"Event\"],\n  Pattern = \
OptionValue[\"Pattern\"],\n  System`Handler\n},\n  With[{Handler = \
System`Handler},\n  With[{Template = \n    <div class=\"mt-2 flex\">\n      \
<div style=\"width: 7rem\" class=\"flex shrink-0 items-center rounded-l-md \
bg-white px-3 text-base text-gray-500 outline outline-1 -outline-offset-1 \
outline-gray-300 sm:text-sm/6\"><Label/></div>\n      <input type=\"number\" \
step=\"1\" class=\"-ml-px block w-full grow rounded-r-md bg-white px-3 py-1.5 \
text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 \
placeholder:text-gray-400 focus:outline focus:outline-2 \
focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\" \
placeholder=\"0.0\"/>\n    <script type=\"module\">\n      core['<Handler/>'] \
= async (args, env) => {\n        const input = \
env.element.getElementsByTagName('input')[0];\n\n\n        const data = await \
interpretate(args[0], env);\n        input.value = \
+data['<Pattern/>'].toFixed(4);\n        env.local.input = input;\n\n        \
input.addEventListener('change', () => {\n          \n          \
console.warn(input.value);\n          env.local.skip = true;\n          \
server.kernel.emitt('<Ev/>', input.value, '<Pattern/>');\n        });        \
\n      }\n\n      core['<Handler/>'].update = async (args, env) => {\n       \
 if (env.local.skip) {\n          env.local.skip = false;\n          \
return;\n        }\n        console.log('Update');\n        \
env.local.input.value = +(await interpretate(args[0], \
env))['<Pattern/>'].toFixed(4);\n      }\n\n      core['<Handler/>'].destroy \
= () => {\n        delete core['<Handler/>'];\n      }\n\n      \
core['<Handler/>'].virtual = true;\n    </script>\n  </div>\n  },\n    \
HTMLView[Template, Epilog->(Handler[sym])]\n  ]]\n]\n\nOptions[CustomInput] = \
{\"Label\"->\"\", \"Event\"->\"\", \"Pattern\"->\"Default\"};", 
    "Display" -> "codemirror", "Hash" -> 
     "8767d478-b8dd-4d66-b9d7-11a3ccf4bfcf", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> ".md\nApp logic", "Display" -> "codemirror", 
    "Hash" -> "b9eb1a41-cf78-484a-ac40-6dd699020920", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, <|"Data" -> "App logic", 
    "Display" -> "markdown", "Hash" -> 
     "d3cdf6a5-40aa-4925-90d5-5f55b025d581", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> "Sliders = LeakyModule[{\n  ev = CreateUUID[],\n  rules,\n  \
assoc,\n  System`rack,\n  recalc\n},\n  \n\nrules = {\n  \"Centimeters\" -> \
\"Centimeters\",\n  \"eV\" -> \"Centimeters\" / 8065.6,\n  \"meV\" -> 1000 \
\"Centimeters\" / 8065.6,\n  \"Micrometers\" -> 10000 / \"Centimeters\",\n  \
\"Nanometers\" -> (*SpB[*)Power[10(*|*),(*|*)7](*]SpB*) / \"Centimeters\",\n  \
\"Angstrem\" -> (*SpB[*)Power[10(*|*),(*|*)8](*]SpB*) / \"Centimeters\",\n  \
\"MHz\" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 \"Centimeters\",\n  \
\"GHz\" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 \"Centimeters\" \
0.001,\n  \"THz\" -> (*SpB[*)Power[10(*|*),(*|*)4](*]SpB*) 2.9979 \
\"Centimeters\" 0.001 0.001,\n  \"K\" -> 1.428 \"Centimeters\",\n\n  \"ps\" \
-> 0.004136 / (\"Centimeters\" / 8065.6),\n\n  \n  \"T\" -> 4.26602  \
\"Centimeters\",\n  \"Oe\" -> 10000 4.26602  \"Centimeters\",\n  \n  \
\"kJ/Mol\" -> 0.0120 \"Centimeters\",\n  \"Hartree\" ->   \"Centimeters\" / \
(27.2114 8065.6)\n};\n\nassoc = Association[rules];\n\nSystem`rack = \
Map[Function[v, 0.0], assoc];\n\nModule[{var},\nrecalc[units_, val_] := \
With[{cm = NSolve[val == (assoc[units] /. \"Centimeters\" -> var), \
var][[1,1,2]] // N},\n  Map[Function[key,\n    System`rack[key] = \
Round[(assoc[key] /. \"Centimeters\" -> cm), 0.0001]\n  ], \
Keys[System`rack]];\n\n  System`rack = \
System`rack;\n];\n]\n\nEventHandler[ev, {\n  units_ :> (recalc[units, \
#]&)\n}];\n\nCreateFrontEndObject /@ {\n  CustomInput[System`rack//Offload, \
\"Event\"->ev, \"Label\"->\"cm<sup>-1</sup>\", \
\"Pattern\"->\"Centimeters\"],\n  CustomInput[System`rack//Offload, \
\"Event\"->ev, \"Label\"->\"eV\", \"Pattern\"->\"eV\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"meV\", \
\"Pattern\"->\"meV\"],\n  HTMLView[\"<hr/>\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"&micro;m\", \
\"Pattern\"->\"Micrometers\"],\n  CustomInput[System`rack//Offload, \
\"Event\"->ev, \"Label\"->\"nm\", \"Pattern\"->\"Nanometers\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"A\", \
\"Pattern\"->\"Angstrem\"],\n  HTMLView[\"<hr/>\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"MHz\", \
\"Pattern\"->\"MHz\"],\n  CustomInput[System`rack//Offload, \"Event\"->ev, \
\"Label\"->\"GHz\", \"Pattern\"->\"GHz\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"THz\", \
\"Pattern\"->\"THz\"],\n  HTMLView[\"<hr/>\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"ps\", \
\"Pattern\"->\"ps\"],\n  HTMLView[\"<hr/>\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"Oe (1/2)\", \
\"Pattern\"->\"Oe\"],\n  CustomInput[System`rack//Offload, \"Event\"->ev, \
\"Label\"->\"T (1/2)\", \"Pattern\"->\"T\"],\n  HTMLView[\"<hr/>\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"K\", \
\"Pattern\"->\"K\"],\n  CustomInput[System`rack//Offload, \"Event\"->ev, \
\"Label\"->\"kJ/Mol\", \"Pattern\"->\"kJ/Mol\"],\n  \
CustomInput[System`rack//Offload, \"Event\"->ev, \"Label\"->\"Hartree\", \
\"Pattern\"->\"Hartree\"]\n}\n];", "Display" -> "codemirror", 
    "Hash" -> "5f46c3e0-cc32-4162-b751-ea56d9967ef2", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> ".md\nApp layout", "Display" -> "codemirror", 
    "Hash" -> "5cfd8ae3-bae6-443c-b317-4f09460c12cc", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, <|"Data" -> "App layout", 
    "Display" -> "markdown", "Hash" -> 
     "358c5e32-e903-4a84-999e-45b86923b4c8", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>, 
   <|"Data" -> ".wlx\n\n<div class=\"flex flex-col w-full h-full gap-y-1 \
overflow-y-scroll\">\n  <Sliders/>\n</div>", "Display" -> "codemirror", 
    "Hash" -> "4696d989-cd0d-4cb3-b594-0d229f7a12a4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "705d4c1c-2e66-45d4-9b62-ead24ba0f660"|>}, "serializer" -> "jsfn4"|>
